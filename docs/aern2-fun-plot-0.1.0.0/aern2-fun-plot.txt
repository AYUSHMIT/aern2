-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Backend for plotting real functions
--   
--   Backend for plotting real functions in a browser-based UI.
@package aern2-fun-plot
@version 0.1.0.0


-- | Restful API for real functions
module AERN2.RealFun.PlotService.API
type Api = "aern2Plot" :> (("sampling" :> Get '[JSON] [SamplingId]) :<|> (("sampling" :> (ReqBody '[JSON] Sampling :> Post '[JSON] SamplingId)) :<|> (("sampling" :> (Capture "samplingId" SamplingId :> Get '[JSON] Sampling)) :<|> (("function" :> Get '[JSON] [FunctionId]) :<|> (("function" :> (Capture "functionId" FunctionId :> ("domain" :> Get '[JSON] FunctionDomain))) :<|> (("function" :> (Capture "functionId" FunctionId :> ("valuesForSampling" :> (Capture "samplingId" SamplingId :> Get '[JSON] [FunctionSegment])))) :<|> (("function" :> (Capture "functionId" FunctionId :> ("name" :> Get '[JSON] FunctionName))) :<|> ("function" :> (Capture "functionId" FunctionId :> ("colour" :> Get '[JSON] FunctionColour))))))))))
api :: Proxy Api
data Sampling
Sampling :: DyadicIntervalAPI -> ErrorBound -> Sampling
[sampling_dom'] :: Sampling -> DyadicIntervalAPI
[sampling_maxStep] :: Sampling -> ErrorBound
type SamplingId = Int
sampling_dom :: Sampling -> DyadicInterval
type FunctionId = Int
type FunctionName = String
type FunctionDomain = DyadicIntervalAPI
data FunctionSegment
FunctionSegment :: DyadicIntervalAPI -> MPBallIntervalAPI -> MPBallIntervalAPI -> FunctionSegment
[functionSegmentDom] :: FunctionSegment -> DyadicIntervalAPI
[functionSegmentValueL] :: FunctionSegment -> MPBallIntervalAPI
[functionSegmentValueR] :: FunctionSegment -> MPBallIntervalAPI
data FunctionColour
FunctionColour :: Int -> Int -> Int -> FunctionColour
[functionColourR] :: FunctionColour -> Int
[functionColourG] :: FunctionColour -> Int
[functionColourB] :: FunctionColour -> Int
functionColour :: (Integer, Integer, Integer) -> FunctionColour
mpBallIntervalAPI :: Interval MPBall MPBall -> MPBallIntervalAPI
dyadicIntervalAPI :: DyadicInterval -> DyadicIntervalAPI
instance GHC.Generics.Generic AERN2.RealFun.PlotService.API.DyadicS
instance GHC.Classes.Eq AERN2.RealFun.PlotService.API.DyadicS
instance GHC.Show.Show AERN2.RealFun.PlotService.API.DyadicS
instance GHC.Generics.Generic AERN2.RealFun.PlotService.API.Sampling
instance GHC.Classes.Eq AERN2.RealFun.PlotService.API.Sampling
instance GHC.Show.Show AERN2.RealFun.PlotService.API.Sampling
instance GHC.Generics.Generic AERN2.RealFun.PlotService.API.FunctionSegment
instance GHC.Classes.Eq AERN2.RealFun.PlotService.API.FunctionSegment
instance GHC.Show.Show AERN2.RealFun.PlotService.API.FunctionSegment
instance GHC.Generics.Generic AERN2.RealFun.PlotService.API.MPBallIntervalAPI
instance GHC.Classes.Eq AERN2.RealFun.PlotService.API.MPBallIntervalAPI
instance GHC.Show.Show AERN2.RealFun.PlotService.API.MPBallIntervalAPI
instance GHC.Generics.Generic AERN2.RealFun.PlotService.API.DyadicIntervalAPI
instance GHC.Classes.Eq AERN2.RealFun.PlotService.API.DyadicIntervalAPI
instance GHC.Show.Show AERN2.RealFun.PlotService.API.DyadicIntervalAPI
instance GHC.Generics.Generic AERN2.RealFun.PlotService.API.FunctionColour
instance GHC.Classes.Eq AERN2.RealFun.PlotService.API.FunctionColour
instance GHC.Show.Show AERN2.RealFun.PlotService.API.FunctionColour
instance Elm.Type.ElmType AERN2.RealFun.PlotService.API.FunctionSegment
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.RealFun.PlotService.API.FunctionSegment
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.RealFun.PlotService.API.FunctionSegment
instance Elm.Type.ElmType AERN2.RealFun.PlotService.API.FunctionColour
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.RealFun.PlotService.API.FunctionColour
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.RealFun.PlotService.API.FunctionColour
instance (Elm.Type.ElmType l, Elm.Type.ElmType r) => Elm.Type.ElmType (AERN2.Interval.Interval l r)
instance (Data.Aeson.Types.ToJSON.ToJSON l, Data.Aeson.Types.ToJSON.ToJSON r) => Data.Aeson.Types.ToJSON.ToJSON (AERN2.Interval.Interval l r)
instance (Data.Aeson.Types.FromJSON.FromJSON l, Data.Aeson.Types.FromJSON.FromJSON r) => Data.Aeson.Types.FromJSON.FromJSON (AERN2.Interval.Interval l r)
instance Elm.Type.ElmType AERN2.RealFun.PlotService.API.DyadicIntervalAPI
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.RealFun.PlotService.API.DyadicIntervalAPI
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.RealFun.PlotService.API.DyadicIntervalAPI
instance Elm.Type.ElmType AERN2.MP.Ball.Type.MPBall
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.MP.Ball.Type.MPBall
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.MP.Ball.Type.MPBall
instance Elm.Type.ElmType AERN2.RealFun.PlotService.API.MPBallIntervalAPI
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.RealFun.PlotService.API.MPBallIntervalAPI
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.RealFun.PlotService.API.MPBallIntervalAPI
instance Elm.Type.ElmType AERN2.RealFun.PlotService.API.Sampling
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.RealFun.PlotService.API.Sampling
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.RealFun.PlotService.API.Sampling
instance Elm.Type.ElmType AERN2.RealFun.PlotService.API.DyadicS
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.RealFun.PlotService.API.DyadicS
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.RealFun.PlotService.API.DyadicS
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.MP.Dyadic.Dyadic
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.MP.Dyadic.Dyadic
instance Elm.Type.ElmType AERN2.MP.Dyadic.Dyadic
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.MP.Float.Type.MPFloat
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.MP.Float.Type.MPFloat
instance Elm.Type.ElmType AERN2.MP.Float.Type.MPFloat
instance Data.Aeson.Types.FromJSON.FromJSON AERN2.MP.ErrorBound.ErrorBound
instance Data.Aeson.Types.ToJSON.ToJSON AERN2.MP.ErrorBound.ErrorBound
instance Elm.Type.ElmType AERN2.MP.ErrorBound.ErrorBound


-- | Serving data about a real function
module AERN2.RealFun.PlotService.App
startServer :: Functions -> Bool -> Port -> IO ()
app :: Functions -> IO Application
type Functions = [Function]
data Function
Function :: FunctionName -> FunctionColour -> DyadicInterval -> (DyadicInterval -> Interval MPBall MPBall) -> Function
[function_name] :: Function -> FunctionName
[function_colour] :: Function -> FunctionColour
[function_dom] :: Function -> DyadicInterval
[function_getBounds] :: Function -> DyadicInterval -> Interval MPBall MPBall
functionUsingEval :: (HasDomain fn, Domain fn ~ DyadicInterval, CanApply fn DyadicInterval, ApplyType fn DyadicInterval ~ MPBall) => (FunctionName, fn) -> Function
intervalFunctionUsingEval :: (HasDomain fn, Domain fn ~ DyadicInterval, CanApply fn DyadicInterval, ApplyType fn DyadicInterval ~ Interval MPBall MPBall) => (FunctionName, fn) -> Function


-- | Backend for plotting unary real functions.
module AERN2.RealFun.PlotService
