numer: acG = NoInformation; ac = Exact
denom: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 51, minQ = [2.2862541364731237838404674511218553996998556399303366912879028491964150707427625074356168619307458876599437047616447671316564083099365234375 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 49
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.4373966935900867737842971596117480113071133894441571317604548881598171589769298101829520536743004344873064972392306036415104524244408080688928376370270659480894818061073265957980589161128821949509746837143630726546911033000996682681797198622786084875792120229602744196103875214948876090994599707746654176006621770929830114345174850270866084166726330110050532493585956146107000629246486577626163084853351581872219339981463031113286125455828134460779323809560410747215764302561205007962007842409227830988954400137820599514526520579238422214984893798828125 ± <2^(-49)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000012180974961411137834951369758809213790427031285255252110172908856554900450416429084515927207870641900495911137271191190509049097548966810284755998350915272587478218540826187117530243813312586086997675290619073447695074057314491518744568666514710011406503895176241313862022876590452193981428019359592942716740844170623886743520398985569865689354088415213342710197603347942015063421926263700860706349427127188808950545526859212618482581115564473376705958432704690843044971253822572769225865375218114833475878457056341012949235199482880424981371715598132965396871441043913364410400390625 ± <2^(-46)]; dctAccuracy = bits 46; getAccuracy rEd = bits 46
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.43739669359008530681094383743050429895981711637198712664394388618590549211487005421401180288840516184589930386295789866312654795056224770592854430878871765953753295079910731648645967586906395180686776130590931715724436930489402128685088220047357581826808145288865112882338675232372671283639599296081908360469572694674367509809235768294964235150117069241514078381527497185743413865566253662109375 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000241403321775902379018882183767564394659397342431826431153805799930896492366037677305652264411196526925118544982907468579646235923765162376570878205371571699401034923228435408032870500552577727589964447767614818477094548106704616525682919572944051811447252475772984325885772705078125 ± <2^(-91)]; dctAccuracy = bits 91; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [1.002827072494120060960465588932776226685724794300479189620852691100584896203587200282027249508367584829304774984848336316645145416259765625 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 35
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99718089729685182715735126374000261938390020763874169723214400873571462345648137295747703443751262913227215818996677009385514519869151607788532757314419160163658013565125237435907432599933920837897345567655277502102481070909552573709885528130727545457937432433418453060788398414018663031748935412943296947670767027642744075202039424786118909702626770848061069886336945046907988081637773112314422759423660119054562665450511436135717561968571894778396232683933282227572963241881397671997667310787423035774621154873897932446880076895467936992645263671875 ± <2^(-35)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000467349767659300047744576222377324151172534421588668764000429119886599942573472207181452224989020229336837100425310487325923771670792652193442092194735298589295423517183986716327410489735123327310944944663946708929204485142282295812798528975883072340732085721171948938067170315909174043000740955324751384379140452145220757213560804611242546377781920050070250237288297625784606039870767776674695156861037404440616913024563228538331705540506729415818948037685409559782262080079737645089702142090629653929299236986413751385463171074513793849802834046158750425092875957489013671875 ± <2^(-34)]; dctAccuracy = bits 33; getAccuracy rEd = bits 33
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 68
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.99718089731354292181779329315260856430407096356907496650714364862905424641761722688900443891660711892326259296151207421415197064669892204730668198858968729676224740446673672313142593196290590397609596799083853210227604551388627103144210889177846080518729733154664653125998291410472862162726758952808335755484797923348292201831360830055484001377408276312053203582763671875 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000618057859086412123065204712210781096948694715347408408817667844271841874723934703876544583496879234128672030087413752622002616086458377636261726831657096801553823066740274557476876604106007983958212464246835687159881900434150963091242905241285235754496913954907985800112140778215028173254707565335997894764844462870978336366910850424793283897805999642718323135890291802047202615672566521081651614750082584179235928753562679227116345365165189092286156277702206071417562994890449624626219757852002904221590911094694671407949246044584541724999664895090580135735506403595623713263272737291658701352305815739009556541508892159308974356690669083036482334136962890625 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [0.9999999999999996199781329313547213789826001558588950522870934361160580259352331634176667962687901081153540872037410736083984375 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999984884700769490997472682992375312412108403683698844179079420299014877416799178692898234088541404604155588030684728534705076047021009590998863028716305880736503751923470271727437127305396151868728593377280726282074980198808295238537233836164739392414564931670681175149227446057425805462243587106142555843807298910027274129013246895924642107090800199511655430953801925177828732850839111053665533416145066154267116457800869110470390381662617836387811121928575249687861617627071542102612511371262371540069580078125 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000105525041075806079109279770728548894502162394612221720683921719137713222769311555832014178570031742681303641605923218697654947947000495938793873718804897548237032207742390250341757700060328930340932673344600883620032995013754370314754663426964788502634358218255661381182698535725732727281092354733499049763656648609208407106265229295448050221240327150239009265966669130905056323489477483373278056807791412731469824777417489989291157670323838118877947976561793138152549771888182238453293090520943245543515620621377593124634586274623870849609375 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.9999999999999999999509797507591439681156400457280107869596585901755553275422591172095259095774868254509977145560273533647464658321943352423257395871724290530541830842244213910525887673785715033908776296092853818055052436976479793913790116228231985549022535864599044609957016183380292612728408850368806711858804716014536586128544155648771430902159988827537663241321197834177161800298067172389341569371194961600059798988154487303386008184552305814408799739376323151502412876759202342741984494867949306130510639583979439366590258612280727192034822381483394337919889949262142181396484375 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000208745167304555967351323127501097138785205005697573346122301852809840332722090573796150633942148077238620058134430132601063513030414538264095931831605022325337360701903289526909772310093055030656826585764677043502556421891741388561209297453865284720945527342017280782804300076343441930201416942290425636541641800742789970300055527020066295931952811126367635249197685091914276307872436731395391750392866517956746731871366431683983608747398977441538676535691779108864805618159017191719437811063574901943316854483778658525165433094205013832054825399350846436544322084112862145248491731335557623772114510529718245379626750946044921875 ± <2^(-65)]; dctAccuracy = bits 64; getAccuracy rEd = bits 49
chebDivideDCT: acGuide = bits 51, minQ = [2.0696485192790625991847339833546386269467417477222248713430945553739989247788891995930316035875036668972891700627489246222534546859606052748858928680419921875 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 46
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.4831738291235816985786778667395345157241436558807147944353599561034086179438186615296803312936225284893554897028225634434713558955544018692403603969315220533455308342627445302677417204250670406318983776040674982272547460197536715391504338137156100816462018600258199345467684400999563987255669417208991944789886474609375 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000048517503668842952615458603354936696963617592465349223171322376468700109946583262437802843365009921118738676627153419462325397682270655690356334466054626533713857842692728177131648525369634754105353343994705024128478374443811376182085095978972620419769805049386561038935367252141862623596953659073524008048295041501863419875477409311333083507317156772392054041107507779530919088236930192458349227232816229658096669582925675092892360582159115486551831697770480323744638911535127436743136794421447747747621997587136771415975820838580397746111171064509193229241645894944667816162109375 ± <2^(-44)]; dctAccuracy = bits 44; getAccuracy rEd = bits 44
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.483173829123574124803717381709854686632390041852528624548222291327405902549440039084752686445328377122930660242831080485227407339270226922013303994479500420273205761695285900601509627485952450447711050486759018853678179996169977717930357880641187817471779599356580758953273141906912856680118675225581506045027312100848672437919567689078829417616473950206287615029933462204516438405585042182842333900989903993940967658441527520230118421188148515223559994495816093837652470977082328804257921695478254640370179753106668540285479363425821731056929695348062127299797993358043408755608805194015076267533004283905029296875 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000120720441960264763877038220898273805833527936179880058453084606010188653845857160276767107692039830855723803287597376732283208536071576887163371333358643456737707632015757282435418532057468083669356302567831941121617833003097280118671023635586181388390514257480390369892120361328125 ± <2^(-89)]; dctAccuracy = bits 89; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [4.9849756808937759434662353962693294249807181015037799307398838377387948727275542605729752076820709005930404134242163623202959144009582814760506153106689453125 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.200602784048227504055865501384156624959778792364688059215691743047404920645880631952969704068043503906179734528288713776116697971276631837088820727192410790409146588194893550503992632485911031502540485344058973559159812885649228775235589608814137913551665360634431434263284978189171756622621867194311562343500554561614990234375 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000005992075322968913255373500666603147215087508677685376305191827212859941730126068794038171815648609305014432863331066938634385957308553293794426264609030486219561964798701338434903463430201372792484843795348861035161819744271902747405747809563095840832663476389528171702850991531395722389930254007833050449897531701331919553918089946775574663108441052212047070635470936122618441914081537911816800466294636766228339268607961202166501386745839819701444250338558651681919945801353521257621180829728042470685844766419418020001994002081851223953840781868691693634598749440556275658309459686279296875 ± <2^(-57)]; dctAccuracy = bits 58; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [8.377684639979968229391600536398040863634881709078028869552965561583670110947489637440673342218608423118683049116476278805887289991005673073232173919677734375 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1193647222321788286897331034598990061491900192018300349749341828640562979818867927750902025228081136246288447810211040264495369125157400517120189645413097539656499083901830279347715736913733922120241740993319943255283457172086272946234756387383955692170246650756599221694245169377370208198805602572978301623152219690382480621337890625 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000002044197951907991733819721855664770585469792057772502474319701745316830025884734527781899155679520390382524748325792470278137925181555960352299635015072699054243297271681352944548810031670983270608521461025267744649980497406213436113374811700408155358000138427310107013473685793851316239853523252799900745103761644907805871870375567358040752843332420140521494039795343201364087793433677832835055176263835705994338145037524841760282351539485728211257101029844186217913800439950131019261029542139683692964008819581308896958853922967685136691084622982854455790213688004541836562566459178924560546875 ± <2^(-62)]; dctAccuracy = bits 64; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 53, minQ = [10.65213136052844147499088875352722637823717043125334522921465094158816816992838457537089392088474304879402418093511072105794568187775439582765102386474609375 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 74
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0938779260369908741245805158844351679629932223062563053389615869964473732106858217829113002915119943431343053088235782586196993257051607767755736567349916223289828282394211562432204896746940435122057818255346339767555509240311014847211929733605130980606941183747125199315271022130521772593658911174019886247688049252246855758130550384521484375 ± <2^(-74)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000338891485334070317988856733289486300058138298412430571341074563681881505193540706452908422854610985687258639803172187986018906925901818560997451564846065309816181644800521439740475440941611838012288617347746101822469899644829638418741524219512939453125 ± <2^(-71)]; dctAccuracy = bits 73; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [8.5964432706051962638873637246896713125754241454550226009641591527903923574465699258308204466771940133185125887393951416015625 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116327179569649998482399164699013181690820030945273683965431648110707906353904868769892978021450501051262126155460579571896134851088501260726375050519184604092697015719271689491790528510673337929643931186719272585945503706616172751563533394918405858322142886028711698445876848000664011645104354684624883668327564685237698504042172757509426877347015892057012306505903022185221540156137624762882430216485167978236647033390623133120258768748328266973716409677362859630368850420579075570504112846492716926150023937225341796875 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000010043455227400365776678135617820931020677792071869568566669295054472082775094046886833672068365017522188572703956230906518504426273899500095163785865534229324050045367510113853769731764007958020715704989997932062025281703677177985530260152653871731473945556555417368653175925805970581231316047738569667388046957320579730064514342659823344720017250858459159744715765237524854884027918593254156384009780718290205818653696968591401988574118802682717076846276868111597155535912292965534849747735344897928675743523208513925215439044347220942654530517756938934326171875 ± <2^(-63)]; dctAccuracy = bits 65; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [5.2331306898232530985557039078727073037063943053843780407858969924561488564353061714644459988604531693046073570485532400198280811309814453125 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 61
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.19109020188329647882104137492168267760571980646213826489233037359422199766925114963316189068025287561239209582700730446245254052241604959707732961593088048852056043685320520865325459934246199703783164245484418177862954143963435856905436831138990941944435496294764122032231951016768913014178713115001696298047467617927059446464735242038678784397428782353323082484918786894482129260209618372729052103674955016067656659115318547327026583182386382619118442238161230806247833104461411848828175552228172834357273804340403289270255982046364806592464447021484375 ± <2^(-61)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000003306178675407280633749187822637837765325702639714787977810491776266234116941706436924713199348254128452970565296843774075406348684992909867182256050710544051280967121914904066825553607749245929426922817941110868566348999710377523657504664422194181499118833695249539723749529952277463099380294571201603601398382766180150398912067758779211132866607853047024803570802761017229971357623803969173737054846430697497483300707448630085009103339570077033097524572579705226999203332834560431333212155556641869386846871036684233376206140566499246783982308476820301257337320066653774119913578033447265625 ± <2^(-58)]; dctAccuracy = bits 59; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [2.230488728283475871964451558422025211924824819217454789103109710400150030175675867607152923988915287079048965779293212108314037322998046875 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 48
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.4483322364823508838745911216368576414180477261605001611032928782834487305719895074652199382969233754492709095420649571449818680811047976710505257652935116058915050223929586677301311512544198043542932727404457653153548281624078739259916157059741256057515101392122250653002612012304395380615878965746501592315353768839234881750826731474079516659966997182081703844488555439051292044909032641829104656451063735006342585754891912343031685818721026431962594698103489019773794644149048552754197763870721825132715477007887272531405642439494840800762176513671875 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000011321932836674583497927114821488641221558757912410122538439894030540998121283174878164807479595145955341517153928068927618749720631846081922575755142846474439946557460599097255924649481202169757566580156187231966831127120794942679536900061876239047686814260635332300802422684448829802410752233844404931758970625495968460374805698786100137990845108723773378941492573038453309337305638471874357354146709576367459135180378173231171892426349192904764027456801215968494660466683883634317815779529482335300123553495418528672023512604240439864393560041866404475285889930091798305511474609375 ± <2^(-46)]; dctAccuracy = bits 46; getAccuracy rEd = bits 46
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.44833223648234846777194505552653719429169677424408750138139748004385293919531542828707920035419661542264819914774208955931393350175818226648204996871772506562465258606956453798226667784312134157736157285361712231654307699051839963217935761918225456500093858769437258325679971875254062332313757467101029948713195462742241498198007662850658688351624083976397494577526003922685049474239349365234375 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000002160085459019162713261615727421686412431297182919205457102478445744472755844446823511847452232723644696488215820290998637169887390121299012567025642972573595208279385827483264262964004420621820719715582140918547816756384853636932205463356583552414491578019806183874607086181640625 ± <2^(-91)]; dctAccuracy = bits 92; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [1.0007068180827102342670526973258089736010453154719658957689708960001003047076701191263163603917263344555976800620555877685546875 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99929368112778017806638403652253627891625371101582794441902731824729172151085901947639429084241954346745771394534485476472027206433473738673155421104314006301118212746979465611866593303761805549770617372325498894330294648970567142144484394605154632500176870024688469129614531993865966796875 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000095495933693304134320922468282201861118506028200141603149727596551537330687626305878770856149539388763832536164153185300236283993901331298893114402350814244409858575626584770867297730430709706722829570567993973825376531602547112721938265796007556073277557553552262627580321538984039575161625342516236270990868822490253686616922628536690210768922572474045156753901590420846024021195798811447447811560167692922745923702111315512804562690591576565806449090860977881794846121770860742901651676473684537027782071039183620086987502872943878173828125 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 68
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.9992936811562207080484071064446626904370221010615002542163762627360779633187788068271851771889050296224633823282225912185482554234302895971907153587918804220807265842249501566953036421805082488513933663577126910620365632289200919741086059190085192802221279856550802158220341309423089109141773660981357224268549426013600029772073037817033219857278311271075325738415769433227169637656235597318255509638173397905816550008161087904635121776832769830359932575529368677942064088765339746312950730949474255978002217510569437567910743632853594957637759221835693779212306253612041473388671875 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000006424476119863307116148638915301828565216963224437969225924241273600953688661120845511774814750706686353475132073379282754987773249305727419926496834178429957729454141627612102336654707736079862029152284832477053640611282102273506151638087130754950028979542778836145598582265184222242276189436832605911537099955615782839119683015718193289402392188415806395171550011536410014346387580962795550996340206865873354472322568431381704501553111096753534439518011314805041543606445611309809439048038583361902722596573027133643103282588980097350467607520838750442185329073273838354160709932628593580618281411176440087729133665561676025390625 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [0.999999999999999859735383189245266332242112261586228090259214736212055119427030325956508305385028734235675074160099029541015625 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999979599929296791260940753238613225126375713792323737778314447417607441229667030396198172519376266123945377790928916646469897715310215560399189887906563861507924343191058147045849464308085342316744337507178881200681716430982046935583743786960657127409647122756902922463996736301466368270765116610887440408680671502835892709166971730470421080128258565424704090801243093429559080785056909625955150137808140994833814288663110809027570118045849584121547202115371523589902277330543345357227735803462564945220947265625 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000009997283872760053160852400971990914437573403280695818604975441236778669931485827715995173490843855185586673628309484851736162137504660989502747969135736996340106816411672799965551535439693729888847390313451442017358758257994526174667697152401811995239650805848870597404084471108836093471958974849735476763385100559466181073038813626700547552939071398389610881110944300671630961684694194084437033502414425627282226853977569265217599891203533636514481314216892243348650850995853088826376844249074491766983430185433689985075034201145172119140625 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.99999999999999999997840034069910377310199798025437246601228074986498890970696953822696392932323997631779804412805750700594543177564151581434003081914646402561948462708943602837851457297418951593923065062715090145720612450859478078145440360699157982617239940708923819459850314963159920448794427259617195259901062231096341938859413352901601155908044843661120488506875794789467907758082804455974067578792796929149274196604842481266599777735424205623623190632217483692121782685237946214859549821783215559615166874359786487769273858182123516363391975414476320338508230634033679962158203125 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000928577392364550638095634228866539741774667219922841036478254388814938466843391732815103066560463841750859576208552297825112722387851391836656002373667188151891967703866557757913829878988827016287020700576537217889883843735882234349541073454443131902333957664448477454463595544162851804449751940767067474318215529580196391361531216005237015198182772194403932295009444106221364135839898310924094354001225382251554789116101644578629450011184221934121915240791912723317179063435144329242714985916436766850830932836190011162252561727202986622566682273566562010461333775364271032174897826572579524750938873012273688800632953643798828125 ± <2^(-66)]; dctAccuracy = bits 65; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [2.12217060746482628364010682217040120778985729905971198497358825008434357156685543845109354066380547010339796543121337890625 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.47121564895982843007041835112750800651973640895778493561475458782251593447278917866211142052603496099925316684446628544135930687222812151971390308812462859988682207073170176279873755215645343212615994787549551854175448882224953984995873165261041114151599633655918830665854102335288189351558685302734375 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000002351817908063607893672560169930010063952946631043793350335613667307286141884231507203512785056010188652687875522429626915779104779373484405334688859712830157476625562441815239511715023634056559235436855486718744945994872375519718544040205331722081275579678876714082757895487597157409753423270655360474304626900199419458914140861450380853570557618877396272923685738081068408471713962962561863767509221814963522298895653712238410712121212481421599169362250088355143222473931034027890754700183513154589850041261724078456296638250933028757572174072265625 ± <2^(-45)]; dctAccuracy = bits 45; getAccuracy rEd = bits 45
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.471215648959823040785359776260320330399651949921737990614698268019173495040259097799876790931243091145817695437197869596025583889222492581979006982606497626650367543662235623020821967945599622038968865956016950331880446949735528708900827000318867598644777909747546227943161275625937641881503278948396564101956864174899176536892241753235431589441617461488931439816951751708984375 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000004687273297017606878533155354322723693446555076905821866999164075994501895002061433802395754201923338114973400902527691235461998686287713870370299205758076240737178466926168758891691822833135493464508543409334634630369098334985722420498177598346956074237823486328125 ± <2^(-90)]; dctAccuracy = bits 90; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [5.06743815286210340161859909971944761669971445368844884570304394895177236371595867335700102973561342878383584320545196533203125 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 61
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.197338372928182097370340990877828847347192690655662055777537709337963570014254782288920131324773892230104644819366321873115456354928141916241652166828323419476365200340374293345747752171279950600858539893584830396151883309874016551809607639752289129086689834761278369907655699830937257242917392353848812995928918400046598201797203305851101718303015660054761974654229229158835312286788147191648219221206852471117226678844222974032575926547585831192475799240401982127080464225638034049536972958094338537193834781646728515625 ± <2^(-61)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000030104769001679034262712976979091703658934418648267500033799243060023132948695202350483802889429587575247975572421604163170469687062228640461272606935214319953543962510062364654126327342825011626704327933957527245866920074718262754558439327583132449417659237542056922413161712052057465095824797376933632920720815790005300197517107814722746913960948753790255463168373467302160008386083157889229441556652585299160371283935388117046024975607821732931808530156334815536378437235993485007420031014197798670382584416556587085522789237757024238817393779754638671875 ± <2^(-58)]; dctAccuracy = bits 59; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [8.45130410669240451521862298581577052741125952649460084224797506650205105539891132886143321201188882696442306041717529296875 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1183249339244722809232471263865879871036866802234433486604525532730380758460006604199124752135312112629990138438725235983688188926150654020456390838592997614889236172795057219812142820537574373704761390385013027354689807760692126667292998047272580412664894386795951824845362029965731124422277377136629368699970716409031221017269174951880328831173116910737323175501334554850668077615001157273618069113295418668842299917306511497605797426306537686325081043734852843969567904777232783715412711700309955631382763385772705078125 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000195911744963106547887102916609238047593087008933869049228862026805913477470533588966837116271150247132031309492314058506155996870739002023484594022231163278960256127543954310352670102812888648988743980266143533682701950476515475544517844611185011938097509470405031526644040915765954047095133917965957452043533899204730238729829426398598716585561433756905426336338797191146761237669523569302873848305857699634345815036899325315924750865336103624290122852345296910613935999580144768091227176311894469720904350410803956470361109065692062358721159398555755615234375 ± <2^(-62)]; dctAccuracy = bits 64; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 53, minQ = [10.682283436453991145171634120262808686135774420114626422692358741908178455139850036859083814988480298779904842376708984375 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0936129438943208127406332574427433757382886631375981192189139223746037975449649282661706083818138624669338251337609352376275916251344718145981185187360708278892459338467031519054635525045654415250498103375455183455784452008316644795731931838539173377362185365000126608434128734258274784809247443535856013217064322957038081830764932091584997747331139197744749016378160982203023561213251399915489241973339382047111960276957451455773508226454072600408761585293103043665421051876048973323929391909814512473531067371368408203125 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000017401931442260570141532294793499585201480441193784355575244869441938001926813432977249338234933973846346814069251185173508429590158121352898575375173614411328027364697307483179849754947341597334682650188852903738734312355518341064453125 ± <2^(-72)]; dctAccuracy = bits 74; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [8.524230522977313409261569443931172683351135295507409602211607792256334006033947968232478142880381710710935294628143310546875 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.117312641569754673797849794008722398639120249425994699186432430986444784996622059948421533200057440016081069861235844790836886662164589802535417632243458544443925943562103937089136217680633356541165892698582677510238560688822829215111601972214330523268914781323164094387667189846313764434171389439143240451812744140625 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000002071525537303362456857453366923923200901697055128883222800842862467202517661747543531368037378707680713560339737846626630999434386477553840280195533261977571232108765213621738306932235074322993763047485782137947136850590632606763695808326300025587583096235217394716355012798830841469848172827075366528278498029121996710828878605066187765039793939647516351469429893935040944468725217292845478849391964569749940170052981560999869760048767580061240962862840614145488312846090216783734902661709384744478424851903785993288069182394206535491321119479835033416748046875 ± <2^(-62)]; dctAccuracy = bits 64; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [5.150164285523890196008745310539083974118584783565095237920993358115980216572406149948271103511387991602532565593719482421875 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 62
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.194168563284632578117151018677777906988577338879643515982770719741367442538002582222040952783458845799029392581051025003283067635995208297521758187182741843237693563468606874520577335144684185911439792074844802216016578591338578140527851086401999984867685974090694444833159159576280450273725109585300714263877520741721953767930559568414492753976388412439356968668630218873070611389846175463417305128409477501287796131221544228023033098419620165837607625761070070916678782775596323433020540250026897410862147808074951171875 ± <2^(-62)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000001552207752484230104060033001631925138126724074795405716208476716246986977711103795356034590353940851797638735381451351849083069234507192360431356880575796183046781465276805902389452964174714804181644811326200020086183108343781040691946117880696185022253300860520584649185217779824497894574086947241937883399041004575104857076559338236236050320645439649945551637467053245773977180888886728932650410644205071693997507892984558936199744080147465343986675256461946679724415122299033680591166295647298795832237077725453564740025480528373691413435153663158416748046875 ± <2^(-59)]; dctAccuracy = bits 60; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [2.175789063585760049064203571144693895062195881387338712121912271080081441419013928650037781320492058512172661721706390380859375 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.45960337641921070227105316785076795034043683489545091054078899499739638940192758531312264910110531959824268728100803885307257366923488941668354731121839562363633179198871065047740850922815040822654325018207103681394178054822078709818741632834956753873646535736748053313505124606308527290821075439453125 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000023108624056378071324864980539717350032662513318193512909182997708087697359907268837569853994765964090249149856574774780750625647335922334595773294941808096766682049069288723218923587673387543159260427943483258682367148176583444345903315831386488361399954506479295079529925102711972421848356450980996896011345750757531130733923076731147109405396047983167690068020229957635451653018611172309393528302878880461982031270933364791939053782912983250107698125474597674673144460845864660096822774739185412110991141754375022276946083366055972874164581298828125 ± <2^(-45)]; dctAccuracy = bits 45; getAccuracy rEd = bits 45
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 95
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.45960337641920700459580442039713100592081562810352037263115835166217511117842234348663085433127473353288915053489356044325960760248029791467334691087353764686045845951187872225925103539266309628438278553805177778724030042152068505361768116031607302189019980794120820075344321442415226666606390415916275731350928879028385856196159124342876133701541507916434767668395730224244962947159405192450508422688528125051203035911669651271589380710320032345103054372599918449696617138266118621209410409456052481010111628485267517852532110141040556805665760753409898597965366207063198089599609375 ± <2^(-95)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000009068909489083313042595821093079308114919773301793330579747346611690723218100229390695139123121559512223899522202224327308789991410342744537036571729956652343281551514517257269676446533908962841883325091522572611044721027574906646595565007373807020485401153564453125 ± <2^(-93)]; dctAccuracy = bits 93; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [0.999999999999999999573512040075671640834718559589707330073911667392321322735700597880877105172459096138481982052326202392578125 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99999999997616334352999609153164220482662276423956600561606618032074779324625456022386055277149298825489714268687943405196112737050524658173036307611290235806903369101494343328877908361581870542752731153448927202071520429900227074486157477939299253788623545338926584731935736048483958166527108397898199196512767395818380635194499442888589286035612671914978774485861850323123128678368763178704581696706196083822793045121123981078609632337784034770953401406709339758497631403771736813279602529291878454387187957763671875 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000987095449057604580239471794483203655680544107304638806711520057075171866003266544564228949668948706382053905848643623383905059871137313955162985939165191540746631573087167366626112565875732752271303315946363471680520692606405825651679002863702545346753525015661096070777207857603850841475464517564643198520947325341225574427536594243578869780756087707882271454273293008598871238196019522266891307466928892126169049386574545361392582757714577682846598349411285651493128190937796402037170089318799567055552623973113668398582376539707183837890625 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 69
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.000000000000000000458110198720092200795786219905789868813547192473793675391155688356727080323821218279735152646484699187241363169896453856796173824238164978633513720407661416979734888495948808680922596567305568757448470698429174976429937964528821684254860477388440727395674121809138994285087563712364624653202753311762240621390261334492491727031827077349761338422930734168464515261891123317643889398551837592588712176144183277993000851706090665141814509737567122264513154237639918373416722420302087203027288420160275367081323023776992409031132147401166321287746541202068328857421875 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000297138443587494187724038002140677303180213562683128113254102630434857453321815335828744096557827401815327234457498539751100875503639113364540169273484554119905289023518155207830379093929092842838786422861184918714985749741472694450713169289478267998931718274308267384665134005225234832691418232262586673556172273577728810998482344640065765121825950392622909395011240431913027425541472738347613538681542119752964448108275190343384250383885145099513574293710655701339923778868438778501409964808814417598874616297481104260908974591579697608913515527888551488692863055093396671159736270267470552297606189995349268428981304168701171875 ± <2^(-68)]; dctAccuracy = bits 67; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [1.0000000000000000001870856673998594632104840597217768549638807897882662873353660885900051624730622279457747936248779296875 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99999999997616334287565862515266274388605040782662854056847176226308522517627840413267707793959157721201717840410006876305422775438655588605422231659985112825135491639342601440796468221115752397826299375173473685478601561846228235587750202842226598015263640883653243699895616570284329920419539561196731001981587593807682528366303547028538906580390206530374189705880319235314197292075884094655394470673913234543652006184093534857646640361627216362349312099679425378214576202785292269314965096782543696463108062744140625 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000098709544905760449343553350878366886650160854390210312745516848013733091248443451060208649344415162027451605921555915097546032597740569869942012919048519707207651306881778881668273660606524008926326026990188985703294573249569758063125938238855709050242633819207029772502505594757313808530770732286132186603820461017739991652765828375895909041441039719250291444768977994382045813030341610508409991360645496603329742061020613254151039928235101870077611954602335595813414122369405024720616572013324576729577375377999715055921114981174468994140625 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 69
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.99999999999999999980377269706749888246468864816703812442231544302084193864601611224488964768548889467375807829711627773280801580268498171479241499658424326508987871604468499839079097276359954813030661017512230198921620089390863083257304651242378739176848804893257548387790918596758798418822038631685194499598297291319271007381530580460093915462493896484375 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000029713844358749420336734370032408074482372266569063302369264150587129719910973875509605110614249293919845675297785856502454737283765482619084436598783967700471625240834179184097762829915556929563796043365824298080248997939717572704848582035324601493376202767711986283707311731222293385418827253368950873188364864274017187241957724203096581200160434785749773075810399016941353825799986119132350743758512169470478524456010011210005250405862181271819480166763721120677757099731833828731312668207652435470925882113960342232524751772357009259769519470461581988596267248458506761286432245177874310153309789228615045431070029735565185546875 ± <2^(-68)]; dctAccuracy = bits 67; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [2.1757890635857600501089769881383926047815339608439374622408641907682782909002543007825902776630755397491157054901123046875 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.4596033764192107020372057343361111644604717260205634726103031598951890587486681652825623175569427115596528491962512458704443282970468325083336969328447170777970017617705801508780339766304606322401885570640839188996271291585474707420618289066864428797786659320006811423055094478092062456305151449297686095964506392723554249597223251201105002688890094140145314886700910131951026269404367373446527785573594613515533135478775855268523125118810992741862915420238950907085296158728951985972255300794131471775472164154052734375 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000231086240563780698724597656935735754550712653974701203164992759978865097581273874465170510233467400480082316535725739717606023687117746886543313771475253105273130343223735184927938328436396007080905814735585300523414537744679816460829977297161825916418348260501302133948541769852600566508747377829237802148643524011762922545188531338657331157135455761000623158468094313551498327774268983648699787376745871535290788729850452385249272120002044199380272268797688583981288305660302702272610241145457927870397786822460883815466559099149890244007110595703125 ± <2^(-45)]; dctAccuracy = bits 45; getAccuracy rEd = bits 45
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 95
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.459603376419207004361956986882231323722684306460628396008289356174722860085476008152722526986191326823046479388481483287801157287155042884693901333196076554498475254165255639657694353039849037142038156722896511033673326501759529703017845847209826964525394025475769013451681532844060377449343017491567491084413895363080148704178309169055167970885378281309385783970355987548828125 ± <2^(-95)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000009068909489083304074285649414250054203050440246330090386070931169269055135043188421208414698479356014291206003214986012874529990399794832129629109580539787913079381104460464007285440243780605529163716278760522329991158795524895663842102067064843140542507171630859375 ± <2^(-93)]; dctAccuracy = bits 93; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [5.150164285523890198883974279475943462376362396641145128169841259836960296341246308415851018480680068023502826690673828125 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 62
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.194168563284632578003182538585491567622205212824908050428234572624364631104539345397333061360174542615641400117451177060844554444137407811022976760545900689754353917641072660708562027809005534265673926618102408680931252248844181383802800161175975882148050448985254456111572418652855276377522386610507965087890625 ± <2^(-62)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000001552207752484228788617251114977389397915566946425161766598922637764133100943317441065804267396957149436081966125462561619396535188793235395315700998703328936859776487281277641568405624648368078447081590020265425885761984516263470070312879390142117108117992212771997362574110233588090073090741068415283755676811252016723608160650635696908272845108779445192973891175040188709046995816340874620062757831782148189134392471788377016749978407480678461343778464533731748590360428106005356424296969160974435409332566529481400581340355682158360650646500289440155029296875 ± <2^(-59)]; dctAccuracy = bits 60; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [8.524230522977313410677837827281448604782924376631114640261993932040101059133328613437452503376334789209067821502685546875 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1173126415697546737753639612613406299597841953901634963687282196856119589126987287906495592880728958883095796772326665261982273087982124957607105456886015875881524264532098549688811288576563552155031891826759483610220690768441155230803803602855491052414069063430588203838888418680325896419435791499585338882669317296343391177993005978850839105063611585609376172535194072996303805121544542275825093873490290883693135793983424913144006348084404863866599111381498693427355748365999523787073233194178101257421076297760009765625 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000020715255373033621606129482478591511712556552686704163419928699574506481349572502832135451193708448522295014370896286415302680023734465291676333170111968380266588212346448580164408220148033752773314227003995200178827560101289913151144424698933369979466693699668157749994193581640703860961149018384013865888764763688905029195958746201212815007624644231358829297806776268112237222432455007691336628418293397754687071228323454257796406199307561523930804189150825761422469561194609685625421917726782782859553212851832468231207638742485954708172357641160488128662109375 ± <2^(-62)]; dctAccuracy = bits 64; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 53, minQ = [10.6822834364539911451857917944771716948577999731291921741372114298009720673147027354688010092331751366145908832550048828125 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.09361294389432081274080462185324961205171721157086184309198939220798888775009171341686256710204542670822479072337768149780147993791727095638745099692913458424628780445928994798576897521344766103047329261669549748513249996831254566503107594697053536697541557865828818079152814876852677539349756319353446087916381657123565673828125 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000017401931442260570141532294793499585201480441193784355575298845495407342205722097676391840732253448848624540827907583320196983288927886522010897297070316212744030785284470918577330974315759297001517981462459516706076101399958133697509765625 ± <2^(-72)]; dctAccuracy = bits 74; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [8.4513041066924045150133796500454887080130154516723498752594740450831111635683365952871615167651953015592880547046661376953125 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1183249339244722809310556704325187620581151178204360187040985776973275848392629258226926587374322670268850246701837809530371345970352264954665861478010088862507000471002456005747331712601683594254708070922805290154034338011673968876518945542836874171147868801772260198391733231060296560599454096518456935882568359375 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000019591174496310657136316040061671452497046734813765843838399130490790900272825292736099126352339400094636475348076396128124329825022799893408139655296387737035109525530996373041929751110995196158716252102361287022724643781428671560708156528530955227261584167664868339524407882609447214242722740527012718221354000484973607450379800510616134209526822195087660670354268153459618719293624359469492417916808506679170008935488486891774855031589913757374377486730589836920700040657032968510898180141747299955671790769931988135063062606011641264558420516550540924072265625 ± <2^(-62)]; dctAccuracy = bits 64; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [5.067438152862103399680685712652992079036283186381127129708615138746428067344698274905578916360582297784276306629180908203125 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 61
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.197338372928182097463188615348437965791919293538219669348922487503101845813203155839925292615692849309158420576753744361440669821461503634253727658270269402375048999704308224727344594043922998326515123335176646674366902449174105978531877494137633332616793885480524557598895618593104472893173806369304656982421875 ± <2^(-61)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000301047690016790165076123857093222135168215158876827258177949446508861332813242977392798802070031304500938475372538058719659920749225132343990195273947474414245834509097661534089455265191342903820910923778406675537546784319016142614985834972026152687849017763815628588972421298104333616238821746350321307818252386194158174754291122075850474085959057061194695041345791797994116626282555753204259657731195394772767226559685251450823843679966691615730699692144779860941192812592882823643356719939193261890085615053235337280901351419970524148084223270416259765625 ± <2^(-58)]; dctAccuracy = bits 59; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [2.122170607464826282849855489987873911626827576874333834041743619728548843159589743119497473600176817853935062885284423828125 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.47121564895982843029637718259165815657988412864660103167950515889555297472773939452655692201752409912797021572193724997585989724288450952730387091380608084000525675341889720874868706118777772316510111406315887988091921847835176881492250588122298130124925177271659009815593995118673815920405559563216319639219813330579380732783849252298952190679378977190466635758757766425697837528598163008106220215471415916745621723854425269509253033179313267877863819264762087471303837243866608104625459674252851982600986957550048828125 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000235181790806360800812131083178480898852509711181774734514332063101291220603526542013401112654838310875567668297664129264278192544185067212210353797341700887694881365743459415418460740349482450177870541403770617843622286953943867402578913057445270370091806877645473247790455092851363248672521800362707925934158562889256798519444748553021938098129824518626949403194671395441696780295250772139979549988135572891797381758823569094501608892657463903067801641604336975528607001967847764548193258912471064615979426319462841643570527594420127570629119873046875 ± <2^(-45)]; dctAccuracy = bits 45; getAccuracy rEd = bits 45
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.471215648959823041011318607724771230509127114089008442637786994229869356376442274752392055065065818177618815626642342967492410718677018696741832654186354983820576431119082080553112848630588965286056678092807697499768145085288165178961379681527060809580866098347223479081420602962859192589111063477681435573885838703835097771676920711425289610880143783733410327722349654230948401853259362984431728446359032573674883508851295855379387495612800440507582374965615972756855127357215821124821706503529121557177780462475352262625050909012589736636384026013946169086921145208179950714111328125 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000046872732970176068785331553543227236934465550769058218669991634476305383368930626375435855159586410372873878009729833569571749987368151094907406723132289194622472869874290084220112421373395533591004889840474371486830472099374862715581713246137951500713825225830078125 ± <2^(-90)]; dctAccuracy = bits 90; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [0.9999999999999998591348630743952646744506819961324832473637800134385383435443010944330445577410415580743574537336826324462890625 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999979599929902945035687434395305475537233167673870399402394289154613587818487755429923242133120321141331837165336763330296542336191141917412696933349298594238799223353007777731606288864366766644503601999207187272604784157669138482158243607338834117913931933814685703150936186613892787600917847964887594440128911163822050469037349038159017027016295165916607700451145716219370575023761128690283712217197965426404731124414254079995475370946696724934097824127202087239431392388933073078760571661405265331268310546875 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000099972838727600525024958642883327451400573535366906469977182111352811718437440787210819459221391491592349415747860371924977495659269812939862195013167787729933455249929983874512005015880975315415292333964877196726029063157764462588257505884265902820977489091840113767390867892230423949793969133130068079794845938047376350915172407630538003820772213639856696012002904860465244187111504611265770366497235256906303833007969131806663683821642672940411067436858918960667932563709348344266343198163837931689845728300269911414943635463714599609375 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.0000000000000000005845541182657487880526856472672786538151538486565870539970302367179197493439581554082966626877114789420555461465076936887612111003847195177545130927916964212334014214116155019811222800915047524750161094289817251568750284465071352180622485226670955379480487048694867610492890571399710684175721678296903096519168126162929472017968229482481674189848990749079418847931395355813385050351039485386243310586205262566653472296344854848149535669677971929270910872920642434964935397589807471454513505313088186948211980936183087569535561656142164110860903747379779815673828125 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000928577392364550520235119788813912790801227730325403143102095328795173890186957164823231523759101283905838584117386438930903042506340525499976892654495890627436743655189105573909854793914004122509673864786733835203192140983583489183216476002486449270027798707684188479205561242819431856324631565050198593839021289563385327649208157668946463667816285165561732096751961299742638295628660422801914076397925314168349109169662037329184041989915610693151253109292174517550511509073736710147395892703193046459456577261499961640416423250769593928957618434054880712764375192303879845592974102662917924855268125838847481645643711090087890625 ± <2^(-66)]; dctAccuracy = bits 65; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [1.00070681808271023487900075850852989638019937424752169405776570394397117039027495823122482221378959366120398044586181640625 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.9992936811277801774398762300871590361925608088385129530626451298346124182361126131481927936649149092914013540119200607680441785727273922210890521499461200918648342038343613266661860959091969954223641531670265824031463928677979671388350999334166488109399875400203012371895268873916711166077687230560607458241264398074990107654690350885384802221281280636431734971663234383851341799376945907587550042194800921056592238531756058283269134428725300469559942319637935151669823101983872355724702885026999865658581256866455078125 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000095495933693304131184943537284776137083868863635806344153230813705260738157928056022238786330912490307981059853752070928050155890825757230084648204412554499808544660222972193230767562326861459955623678455769378188506861102560552383626213963148621204344211597200684346646241427677917843335174458828453873105685672727315999369970640509291980672303741929410447201647824382064679381283594679179004317969523306820304072586764970315196121491051458969119830622389151229613534191227454270952961683993259325094367373498727147307363338768482208251953125 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 68
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.9992936811562207074218993003404242854490848861754641904976877948513445651167246276072979242218165623403763356360563814135041970209433978097762854899100627930704916311607197264143009068577511871419803354211101539945548611663365525824729741450675506640063220805583607427907548451685453260496566963645330231477634591531929164620606798052904196083545684814453125 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000642447611986330700910016937708638247921361233421861708751870333006903413968968100888417432625767650800919989658584008217001617536654467417824982566420781319519671250251303105394897322579880788341457759685341879689870914994141768964028858814591662248723349032914160906548714194099833956830496015452502581553527142796013283561449227907986382303988679678594677227677370569134871473500744689469473049890296891972425259858530281938070692705334802830194647182002614489571245322922521146511746601197787309553887398542386062403811611579392385512720049747210206396567484165623829312245093920815861530948520652373190387152135372161865234375 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [2.23048872828347587196443366908526694764145495399338133812635604671527645762440045389231369345464656232577564144714532545776819461025297641754150390625 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 48
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.4483322364823508838745939886435297913232007222579857779342399494361657785399846245489286792644875858900925983099737266384939667213575994220888775859423892783792783495208890463718714553959018049024065353470180433615296182990831006891505046685068479962577766003350084679217476234247552469014408416114747524261474609375 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000011321932836674584716935831112562892027288211282003800126958226185375630278531226065200294730082659365413288077058144665046881538818281091581787533649368705728283297454253331406979171911947477176235398509807390361769529134108597399495828191984607390201033673329063782171711834006365418455633596686057784267401043864942946436481916201877622471191415636116703359119189145388122806421310608908997573576550086894171262732388802521119534678599901082979196574589749522486439791827808575886617090200832567467513580560700545327127440468458415127295485329284030484586764941923320293426513671875 ± <2^(-46)]; dctAccuracy = bits 46; getAccuracy rEd = bits 46
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.4483322364823484677719479225332093407555055621293120251377399561683224554818660969166353135307282063761112444742977816501192320766666393785648482048396884931733866212317487350876759545076954838297554693501814878816595883424684426233178201810203009918660112457199796176435182525731491226556368270864284887185625915146019370007538164351326107463233208524680056034123909913298984047163539642606492818731535576236464352104887770043677212480358676356111653396969515798696679561852290508723297487754605461981091022387854016941610378930752594394012435450307675234083531396940501263619072158661538196611218154430389404296875 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000216008545901916271326161572742168641243129718291920545710247844577323697536767569003389299103147135354204611921384246093274537049863949386445207948941845963448952129370160575390240860508371509382767291946205632998926984258168247203628286007108527666531472277711145579814910888671875 ± <2^(-91)]; dctAccuracy = bits 92; getAccuracy rEd = bits 48
chebDivideDCT: acGuide = bits 51, minQ = [5.233130689823253098555748269110672557433863532077851813612826550287515832960633778161192782618496532199279172508179537592898356024306849576532840728759765625 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 61
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.19109020188329647882103957542464443684000849319441206103479345792867180516360842687777632201867354432615594709172988771011999809528073983006545362837715754425099003516421054635161049723346073642534858622398894951874039610802826396175107442772963318416286372472314789642147081654192063149277913680634810589253902435302734375 ± <2^(-61)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000033061786754072813559651069410562638426686151827490113965912308682793436842791608189520874103679865465925584364483266808112435166459447607382193407923242031144568209578121696826482341699721066304640543095569167995611550917227784843823445794963562622226744802291442387582123543081720254231831499036652390822557362542227873757843192894870832940501693052898254504616532827584107035267160675630745931131847933046964130511730006609184295138342122306990943950641739964798212272535969715455055958325093237971552204295759086116600497613048041373766737052153331065385000187006880878470838069915771484375 ± <2^(-58)]; dctAccuracy = bits 59; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [8.59644327060519626531237393422053821338632875425277864432590996585781080001150322895953070911900795181281864643096923828125 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116327179569649998460111488932740031907019396050184870098320623467825085975001949298439645736692091827298388425834423749866616243211203035617879039978892428970946043117134538314486923618027868147383458562624830205163081932788791547109546784577681499712581461832974557361864396953787803568047820590436458587646484375 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000100434552274003663786662920517823931549971450417658748899865642662444051461107395401748278261362163772039892449652837978620195639363456540722193561691713284904275386633835414848401473162640951506675774237754452200130068410729485140227502570026467138799626083075648015566513237374968751471634000186803837148802252911233236822478615607683946345364441836437889449757916124744582899549101117474662083003739261311344026690802925174953187859314417080115839993205001607039368123398583500764420451031292807861490560509302118313824069006923167535205720923840999603271484375 ± <2^(-63)]; dctAccuracy = bits 65; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 53, minQ = [10.652131360528441474990888647772938937167314316858389390076891963099601640224934196484126237958298295815939837893893127329647541046142578125 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 74
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.093877926036990874124580526395869097711205312763618712557469107757405532231476804131984522436090342836793971637440646578100187721693295904299627132349155390599129154228630023009584184110271973958153767912472110098126399694420561909083086170358225388376627503699232054233071439189324014412142407773729934912419061112593295110564598638835236341776639815307937387951562971251656521615891936499923825783114986078083797520470347293009554308160353976006121261657947146584698285558339860754951382908504014756508324732642463417153777527346392162144184112548828125 ± <2^(-74)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000338891485334070317988856733289486300058138298412430571341074555445789362044694437430584945299908635913851309827775664487766543560164091240872770119240307146089158939200456259772916010823910358260752540179277839094661162189225933616398833692073822021484375 ± <2^(-71)]; dctAccuracy = bits 73; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [8.377684639979968229391581378277314967511655120634567398560169003750324245342802719114059093171516419407129916407939163036644458770751953125 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.119364722232178828689733432255354992196219776849666908916815042666793186271716581042770552381652226209153233188978606397258396387871962068158447315566921875116321634552313836281394394274733796474345479359609565389067187259643359636160790066146119064235361717202818009415206244041778864044425329650054069229151016687565243333117011953740732390342724928024231612922508636553647134494490245376658754158411152408152815647555625889360159415622491384370718861833504322819990390604607891880746021445781319836478270437021310945713281626012758351862430572509765625 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000002044197951907991709991516529649344292726904320644561694959410933816877072273993396283659074883945623266046840814114943840996775461664827935860181496736200634188325151490367235157623856378419850214150503058940389635562614689943358703755143468618667485390581780347871789576316675643097640678307180579880663847852854135218649739409700126360458475478399464026939195044332505164789126456060925213305738079625592162951719272504621418924608903805726073040625561480086501478937193286158018766930002465634877209824832384578366448131182380288794491851495903434539520848733928914953139610588550567626953125 ± <2^(-62)]; dctAccuracy = bits 64; getAccuracy rEd = bits 52
chebDivideDCT: acGuide = bits 51, minQ = [4.984975680893775943466207448767787811348160100801122054668895963432065808104483984009440697624852508774984105599514805362559854984283447265625 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.20060278404822750405586688996790906129856292991642922792491715184557926544714736989449023616602127689940767385762623956563399790413545300415777629100549977331896650496510700406123263312478480201487000084518351965729776131673626201529100070976307235769933085492640131208272888977565854742783518119897811102647064782349165043927970184238358157294861786890941970620573533841777978233517141819778675990104123675842599196302620684716843161877908148936215727812036457707456039881808138447397683763428157623574944379740876698736684602408786304295063018798828125 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000599207532296891177875166254462900382414702306014326960546316283542787878016894502105656666003879227827601648076460053522221833798388069726600497748829992559754970473360274634271147110419951748145577477602827276267604876386042319024040263053544485542964696480618392969235997364504224845183500164343019974318634085489866174226468804578813700708650055444943689742347836733794429978118558512486107468379449404333163396829924608689204873476353503247037713021360867380625054650012621327260796450050402327297591166743674868503060833843036606353830943853008665633819163076623226515948772430419921875 ± <2^(-57)]; dctAccuracy = bits 58; getAccuracy rEd = bits 50
chebDivideDCT: acGuide = bits 51, minQ = [2.0696485192790625991847245378580533795193359170778302327862783688447386929546702480560796218373754984387602462447830475866794586181640625 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 46
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.48317382912358169857868038137982281915517191844998615646730012481924738466828430515181462023490359283082449411419612617960612849655437416168541530745971558785704722894042706898976968728964054538240652594133213736272063793161796658631701838116109113453064111306690465068891473890225789374071496422426851764013643344480976775213813707183485621366451916076038261025103557896323750694837554738089894702246983270950698586672389740881706829492918803983724911396121245866964634430282028596946848258582305873017905505084623740685856319032609462738037109375 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000004851750366884296050405744890139966997742161400498990788635881378169668421469677639781428730736760653167930105824980183919470743334300160992610580235231441763161307021037483319841550945453811463357536660989358163560331832488788531087092133927637096954340803731285370577135837384057117281487170364478067485196481806814216881524093781163410511525189443676560444815550708659113206393681208938700457217792401401865085322026792293992988242730351407495741358760308279235534945170588107220166729682560720718321263953623155508117765591834251308569927844949187800693835015408694744110107421875 ± <2^(-44)]; dctAccuracy = bits 44; getAccuracy rEd = bits 44
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.48317382912357412480371989635014299483049628333645835686929214836694682531000277441780047379736801655464067909528524632725106260809025280796124323983291390053320885041706729088526086321512981375859083291637768281598229575382915909300704444535366986587225550201414630060982455696967819518762533862708546392508822092055337795987246034898861095145696756443520758494969413732178509235382080078125 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000001207204419602647818136585642559323136572666022908065388404374620291111286776107129573922070910764014039333159328611023606902838175962736396319537692512120227496869335511885742747611220464165291175570136124796447520759420409631877881573652441273003521615692079649306833744049072265625 ± <2^(-89)]; dctAccuracy = bits 89; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [0.9999999999999996194246447226990911638230281433889065607354828975542965757034060870372428608821024909047991968691349029541015625 ± <2^(-48)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 34
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999984884701327176342674034948665367808435637775474513376473841795354583612153327424922053764654523152245353361351669455052208092432928360875728764141451388898190027679423414965321361024739514476297446739730749017047643818015487834541026577502833012647374150557748162139914842406528475196631271386713799110499125050826059299358615426123266636897183062725308124125555028863914340734536011077878438931909800361679574128821522878005376067768202481307184202511135861434645832716838764753219948033802211284637451171875 ± <2^(-34)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000105525041075806077520089914563252915817075094035362235641359054793817525523143274534739565676910131757992996153301456546922598394613067609543816125406072512122702806355183247769243291651431138611314034429112746454474541323182517677404059020750601904955974403868560314277057454552647851654447428410832142551978038087666971659312863866428783186920480172968800074692922794725477146931448708155155668545082476238434614008420941358867049094365749492403390960546194843187315453678696269206898684693800232023593033137132124466006644070148468017578125 ± <2^(-33)]; dctAccuracy = bits 32; getAccuracy rEd = bits 32
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 66
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.0000000000000000005086651087165879374354618434311565542315762098715969714128011209061397903153688301445007636171274442952858489713717420815309303284804058072514572853113751881291099090441549211739414238140913276417592385239996528923166795828991546577352922443431149905564787504619176543330869146073356152997571815066658671467952798666374978737028828807253550313137512366507253773615005211897412661700717697649173258002893206344457016355767070741753946429651140696632780012234199618307833647236572560030507370092326959853593499805082401901668541499557107954387902282178401947021484375 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000208745167304555995691228402960675591244194006788161666662564971757186538023410734155709586673056835231051598806239582123859283164698682089611241861129811371899158739564984747795803251031721919999657023734620479033961932474546816276064735435392245239345355793998810021533869925680160044635525401536733508372473864436410324887280359601938786504027734670447625701244878517048778701779937986667382887389078654374879319768098149763170628057468809822121234201723791688453243256747434039846041170675975423250780708905210991477714158323858139991452155725091477715618193515753919019191382942736597005950471839241799898445606231689453125 ± <2^(-65)]; dctAccuracy = bits 64; getAccuracy rEd = bits 49
chebDivideDCT: acGuide = bits 51, minQ = [1.002827072494120060960485205886780220475882058438520230435846870256901799626281272718693014312191596635783111482277999391976575083162970258854329586029052734375 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 35
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.997180897296851827157331452392645093812070370395455992541735982652918369241032946319890773879027022801760829090111018684825826345071929419110180184258257886647106926348883955067185231144026764237930337532374702998506595843483120363603963891365286960535942642667680581303191189590506837703287601470947265625 ± <2^(-35)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000046734976765930004045502147907860938197586940319028527912861172023788264984820830315218916714283442603585596551321535457610742168439624925600278947044618335162936999744235620883210316856624115750553240790712980737579852475651580148933245648864682635459854746346427728239985108043655762746778538311943344977502021854716664096454241473540277308124922280944547057349084225751155078599299943288585589784483734513799393907731668028940040259090043240386048355290592588554889019306491378175121216561006101386676289034200129880083900612015965388146288006510076229460537433624267578125 ± <2^(-34)]; dctAccuracy = bits 33; getAccuracy rEd = bits 33
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 68
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.9971808973135429218177734818052592504555538467756382776764270315928821592020461560946672119006574065720752231160699331219159235325963477140390540088468175044657189483919542032279948969179884189459924860309447039129264689627084710142991951568715438117200184678433211616159580919946651508025821873027523104550406665226238228289520608951310419355873070329353543269920539540459247244724886614554227731767391521749745124867514246319664918750813668213196430787051279363904689466053979513329623310249182180426564308856521039850317282756244949061834116136342845128156913754666817117054689045829718452296219766139984130859375 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000618057859086412123065208022342331149068236126042189231487067976258258901035810187900615143873850158189652811994916268138753501702627869983327050505355517135264878483269723788524614560316284261117092288385377366388396473835743021374278567352713223502771748351927827349834200758656010018036616098732600019840607293894986306876140259221465638850908621129487314080776978352826586903954466906053788014521448203475840180752942894962576249662283320508216080753337882805228992389988553452506863395962530665839219226759288616413197218829014284692646834711253212923683931457877420105419740774366202854190099618466638907778663955712439292966564607922919094562530517578125 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 47
chebDivideDCT: acGuide = bits 51, minQ = [2.2862541364731237838404579034203800889817249906873922791852283083569671684856027259747954934254058316534665727995899453528494404963566921651363372802734375 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 49
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.437396693590086773784298613517732915089839417763185801371692819741481680213740757586291218802454605425212905165671747528432995730890326178728582638884862431505523863113930759602302025465047658347111165833571927012367689742078418298386071428157304408681659279863159850143867102452432948922478317399509251117706298828125 ± <2^(-49)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000012180974961411137287941992376242757753288750516655225899817861111054772211708699099505395292571442015221221561024291252775525692062054391203258744187687032073301244214375923733446890750072686218658924402773557631789168044806958417289454071483782276976108876718408981633364560731527081079517200356335138209017834667302814623537881306773211460956608785496589402858769995667013994088714554112355765020612171171028795477475007366919244651681757584347024911275799086075296973259557332149665413293196897103843686681188153664222885561929494114963962690667553800949463038705289363861083984375 ± <2^(-46)]; dctAccuracy = bits 46; getAccuracy rEd = bits 46
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.4373966935900853068109452913364891995200612346182339644426730977990409005011895041926851701454231533863989735202672665123143844296776756335518668474465069231855272791670740669887539650495921186218281813359522094487909835961858602086342687303383976561223525448920263189531676461762550903575871153812473478616610083686064362854833389381921385870029568861465064657409628871234585576753548450593200107449252426101365769441152648594678618467057310453001623463350591055367803549188786519386440729664113777310193777112301256885061843820417501319470842412212315743269881516857894472594114887442628969438374042510986328125 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000241403321775902334177331325373418125100050677154510230185423659880474181504970668397534582543740765429659323835446746093274537049863949386445207948941845963448952129370160575390240860508371509382767291946205632998926984258168247203628286007108527666531472277711145579814910888671875 ± <2^(-91)]; dctAccuracy = bits 91; getAccuracy rEd = bits 48
computing integrate  (sin(10x)+cos(7pi*x))/(10(sin(7x))^2+1) over [-1,1]
result = [0.028355365797611072686661476562633359124007614729416016339232550379425191044209579392143976533857562596429735296626380928008653229735969029845103178797252760351308029591914584445556197812221086991739842323398623631527325866236981146188401509391253806046088227199992112909192839402589850153635468462258253327357621153845457595990283041916946732525762405785494956027635136032905413155502311790867557164271041293678890194308865622514604661475553398082377167465867907361284359348792733498980622073499610868388689605325784742016913818013148930337966652875128005968048956018569907826785449211914880152107798494398593902587890625 ± <2^(-41)]
accuracy: bits 41
precision = Precision 616
	Command being timed: "aern2-fnreps-ops integrate fracSinSC lpoly 40"
	User time (seconds): 259.25
	System time (seconds): 0.75
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:20.02
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 47884
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 220270
	Voluntary context switches: 1
	Involuntary context switches: 458
	Swaps: 0
	File system inputs: 0
	File system outputs: 224
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
