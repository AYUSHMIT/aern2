numer: acG = bits 43; ac = bits 27
denom: acG = bits 37; ac = bits 28
chebDivideDCT: acGuide = bits 3, minQ = [0.9999999985336983335139774705347378712768528289339286570595125477856178402969429754945483302853383347136754817640374924626347895298077860524304764750527630733202251362105459490986604524923422287797970444046561462007479165908264973072760994909913279116153717041015625 ± <2^(-28)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 1
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.169507964737991936439525392546275787363487435645827617673958419728075981758961549769564197775092053475511211805135907071547566169862971134900796834210221080820431220795772508040335304683719929749469666173507717683893834688302433640658270396109095379389357230201627265215614823714200428871766525920317767650803941040168861043557313007457290700090553568992660462618626834589339279213415778713169856928288936614990234375 ± <2^(-1)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.00843370624608430340827344774454346278136022646734687346628645890037705171383794915595797798195885174789917113981549467797671918943811600212036055978928569590767127453900409013798755097611905624723083910087915232713835144473999862178735218835229089502024362858863076267256724168708532814522582108928440149404084485951168790382382117669823710424647919192732495363979408816648416246516600936371103968862416571159075391252794118924416375821209358428332945303766580256747843777584772501971010065329442010282628574623841751667546147704132769107367991543488955878534653637782322540839201064027463591035038758764736245392146241073305645841173827648162841796875 ± <2^(2)]; dctAccuracy = bits -3; getAccuracy rEd = bits -3
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 2
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.0576473372418977196084042459650389596767386070264448353470816022636996468086884122480154538872351389366698803973176049400596327205904358751109837433458874448948525558419654913240060290090412192891196378530509416036766895170009907993868414843579725715575588357360386326110760375485793800983876510701863397289142091536320387113593050456680148954525822286078366328426949012305580534188845402728602444387773047998976385917223337155437227723851290847735911323941769219950952913741372463867440812211960010774888631549775781831575901725662320305987318391771623282693326473236083984375 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.4716029004836620139716445161931242805277419936608078371867284125443904977289015536060134167918795552046682516251511329151215475656661601055261520139315501475891472730634722976563752816225583073930338110425151961797856854088238507695220239947498383584452695916577810649699702305400090550130645650336131179590180238348313877894617152968147747225141209516100975360862779403560927777088059508947640542585928820422655455077188456383536842410883178251394208431732236579157355102675552274324328431459097914602435329484599386471974056908722372788052076970313815516160631168716783166641881038758369063093934956570851791698483549798038115689152187492659689351060600170958114433161250029537259198519905112334527075290679931640625 ± <2^(1)]; dctAccuracy = bits -2; getAccuracy rEd = bits -2
chebDivideDCT: tryWithDegree: d = 64
chebDivideDCT: tryWithDegree: d = 64; getAccuracy rCd = bits 3
chebDivideDCT: tryWithDegree: d = 64; rCMaxNorm = [1.06688487988887056841189727207871333969534195749653431899670836109661027531318524954154290648811513119381776094207032642287276446699275854226059586406140274963952123981800264278350916887834911330716966159369123944360001269025100797332624280924976242992545681795415276312630969149084470670139705162660275789155470993062897999520727328989218582370826609385016940992137931072409038216689050843143036839520531568772416561596986506494796250725440067232973388333818732512547308962492712969806994456021404079256033393250008711236910774123663803556987806331205890742889050275778404962856253360460668254971171154804870434390300548760030464663633130704256822719553946796846832694075909826744056661276927477082958982305538541356108853772401647182521033620416142525413749654887956971603983869096884219047970398032792430260962124322077215765602886676788330078125 ± <2^(-3)]
chebDivideDCT: tryWithDegree: d = 64; maxDifferenceC = [1.49782093371691364602570496476034798190677517925020596948054569615692917125589408564471224161310736633406123571347956381948995867366935265062740282159127393127478907543937811070876191332325982749968636829740709631693700893151168012400569629904732422077381836375562698664281131117220703464614795255094681416221250365004094676041216734229739692112851793118300142242469506851827528333342720610230596412240985889305798357272481308514357729694786354182103426159996784138395131590701216341051417829549265642711339279095572670056051273298065252667055802792518590001454981425656210404150465714716987056297813625759371866188873331096065021619278507633064294488036093974155523096575305906044828635225278233426402602122491377178281789776273515757777047275299301993975164432960988973608301582626458608717240918126268407924162051614302981761284172534942626953125 ± <2^(0)]; dctAccuracy = bits -1; getAccuracy rEd = bits -1
chebDivideDCT: tryWithDegree: d = 128
chebDivideDCT: tryWithDegree: d = 128; getAccuracy rCd = bits 8
chebDivideDCT: tryWithDegree: d = 128; rCMaxNorm = [1.0006534106595866282887193476747459161533913284087459553523982944560666530580054529187526519100247389565117336184698547071244549628389699260152984811306260196703251234681651992175853780107518773417717862357095734256792312462080835181705009674121081413110185827935038406796603888410292607230815122240318784424050441422088116034271808759101094207335991354561572704048869756893924260848489697368997848169672459134010351380342558936856915436400482516768281716686389761775947829246014000976169198285203546566140663126353075161735364024601370847226480570508251247517035212728465382089377659617914325997301066029159659900716419646397334901058297123434684328988868892740815727398290478262177132621657829428535696519146777652769318440315185748669894247477830315377157383104040169365161412664614816024728886679498679440864651993192723129543014048682659096030398503034560902051773760466409598396182596140973613860479911608258847660361457424867118167821560288559707762424272899520027319825867223838109910964690376804530919467042924618643070260024292491552629780950761881024697018405245074745835154317319393157958984375 ± <2^(-8)]
chebDivideDCT: tryWithDegree: d = 128; maxDifferenceC = [0.04289664811122402483678698723901258569461003784234983123940786723296258376784040468629696083818669048272886292541345572072604371719628043022706408030335581247941507024562131739060123431220566592650816347375824593439847372027577097006544095530158310130046360328679106987690544589778242065852812225583562392825521806176152405434746464527142312151939037276606540608662321319816820822693862372489689753911286913213752333756906141975943825966342999494481830556095519011815780773012017012516772201729658905440617641443037020456146103010680464208587818823761316758111165693908151597709806867342751747161540446254414590195987479898253785601382158065417746612367972074415403281424895113914874057162151665231802109343030394693810525356844478307100473205011228294236191650712969701979341714924624418651294036830002533783988525595826661833932560154110537034158383748911807458383750121914530307397815034046702117796809281567178517565563601109916788838736044308209574363819625075718048392414812406059189463473772904699372416573358522718465407746176385370668793337222786709337911284327382599457223477656953036785125732421875 ± <2^(-4)]; dctAccuracy = bits 3; getAccuracy rEd = bits 3
inv: acG = bits 3; ac = bits 3
res: acG = bits 4; ac = bits 1
integratePB: accuracy f = bits 1
computing integrate  (sin(10x)+cos(7pi*x))/(10(sin(7x))^2+1) over [-1,1]
result = [0.01983859260693977887907538279953312713473595478446092672817319982236153732448039853163986076236439585823571424127142412972389916746752702000654110888801560375145753459774115508970407764055440280706276203676995867731239718466349179836005985784159156561787664610786146529867304406460799468126274267826034449410012962487092111795621251038552329927138849588800519600069881572691153198411563474633851957174577226443866729639457365692671003744991400173012782282724947961117030395694265816861745530595894774455802095968496027656780286783132785865569018651306072697468710196904263128839414342952096603767131455242633819580078125 ± <2^(-1)]
accuracy: bits 1
precision = Precision 1106
	Command being timed: "aern2-fnreps-ops integrate fracSinSC poly 01"
	User time (seconds): 217.60
	System time (seconds): 0.22
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 3:37.84
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 74036
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 97243
	Voluntary context switches: 1
	Involuntary context switches: 139
	Swaps: 0
	File system inputs: 0
	File system outputs: 48
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
