numer: acG = NoInformation; ac = Exact
denom: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 10, minQ = [9.966306326039359e-1 ± <2^(-6)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 18
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.000035341974202 ± <2^(-18)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.21670045537439e-5 ± <2^(-15)]; dctAccuracy = bits 14; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [1.249657304283339 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 26
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.002193996198476e-1 ± <2^(-26)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94572084675965e-7 ± <2^(-22)]; dctAccuracy = bits 21; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [8.368981760070992 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.194888492613404e-1 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.849108161439412e-14 ± <2^(-44)]; dctAccuracy = bits 46; getAccuracy rEd = bits 11
chebDivideDCT: acGuide = bits 10, minQ = [2.237595067860436 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 32
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.469083857142871e-1 ± <2^(-32)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.260043840757394e-9 ± <2^(-29)]; dctAccuracy = bits 29; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [9.993447801039889e-1 ± <2^(-8)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 15
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [9.998716132272775e-1 ± <2^(-15)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.395508913794001e-5 ± <2^(-14)]; dctAccuracy = bits 13; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [3.451432950807571 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 38
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.897347317062101e-1 ± <2^(-38)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.011129465770927e-11 ± <2^(-35)]; dctAccuracy = bits 36; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [6.876391716889511 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.454251068252059e-1 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.764246659692917e-13 ± <2^(-39)]; dctAccuracy = bits 41; getAccuracy rEd = bits 10
chebDivideDCT: acGuide = bits 10, minQ = [9.999400314374347e-1 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 21
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.000059633959813 ± <2^(-21)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.092807937794483e-6 ± <2^(-18)]; dctAccuracy = bits 17; getAccuracy rEd = bits 5
chebDivideDCT: acGuide = bits 10, minQ = [9.999400314374346e-1 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 21
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.000059633959813 ± <2^(-21)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.092807937794483e-6 ± <2^(-18)]; dctAccuracy = bits 17; getAccuracy rEd = bits 5
chebDivideDCT: acGuide = bits 10, minQ = [6.876391716889511 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.454251068252059e-1 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.764246659692913e-13 ± <2^(-39)]; dctAccuracy = bits 41; getAccuracy rEd = bits 10
chebDivideDCT: acGuide = bits 10, minQ = [3.451432950807571 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 38
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.897347317062101e-1 ± <2^(-38)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.011129465770925e-11 ± <2^(-35)]; dctAccuracy = bits 36; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [9.993447801039889e-1 ± <2^(-8)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 15
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [9.998716132272774e-1 ± <2^(-15)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.395508913794001e-5 ± <2^(-14)]; dctAccuracy = bits 13; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [2.237595067860436 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 32
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.469083857142871e-1 ± <2^(-32)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.260043840757394e-9 ± <2^(-29)]; dctAccuracy = bits 29; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [8.368981760070992 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.194888492613404e-1 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.849108161439413e-14 ± <2^(-44)]; dctAccuracy = bits 46; getAccuracy rEd = bits 11
chebDivideDCT: acGuide = bits 10, minQ = [1.249657304283339 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 26
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.002193996198476e-1 ± <2^(-26)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94572084675965e-7 ± <2^(-22)]; dctAccuracy = bits 21; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [9.966306326039359e-1 ± <2^(-6)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 18
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.000035341974202 ± <2^(-18)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.216700455374389e-5 ± <2^(-15)]; dctAccuracy = bits 14; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 16, minQ = [1.00166540678409 ± <2^(-12)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 53
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [9.983373621842076e-1 ± <2^(-53)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.123760394135899e-16 ± <2^(-52)]; dctAccuracy = bits 51; getAccuracy rEd = bits 12
chebDivideDCT: acGuide = bits 16, minQ = [1.248256153938918 ± <2^(-12)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 69
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.011176206457813e-1 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.550910853466503e-21 ± <2^(-69)]; dctAccuracy = bits 68; getAccuracy rEd = bits 13
chebDivideDCT: acGuide = bits 25, minQ = [1.104273837972947 ± <2^(-22)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 69
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [9.055724817638022e-1 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.484269885205003e-21 ± <2^(-69)]; dctAccuracy = bits 68; getAccuracy rEd = bits 22
chebDivideDCT: acGuide = bits 30, minQ = [1.119137586701535 ± <2^(-25)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.935451832578758e-1 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.504931675151613e-22 ± <2^(-71)]; dctAccuracy = bits 70; getAccuracy rEd = bits 25
chebDivideDCT: acGuide = bits 50, minQ = [1.121656579318639 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.915384783883314e-1 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.026372287030345e-32 ± <2^(-103)]; dctAccuracy = bits 102; getAccuracy rEd = bits 46
chebDivideDCT: acGuide = bits 76, minQ = [1.122089899778546 ± <2^(-73)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.911941905879005e-1 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.372326516039584e-39 ± <2^(-127)]; dctAccuracy = bits 126; getAccuracy rEd = bits 74
computing max  (sin(10x)+cos(7pi*x))/(10(sin(7x))^2+1) over [-1,1]
result = [1.271873495652285 ± <2^(-62)]
accuracy: bits 62
precision = Precision 1200
	Command being timed: "aern2-fnreps-ops max fracSinSC lpoly 60"
	User time (seconds): 10.83
	System time (seconds): 0.04
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.88
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 20260
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2725
	Voluntary context switches: 1
	Involuntary context switches: 130
	Swaps: 0
	File system inputs: 0
	File system outputs: 24
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
