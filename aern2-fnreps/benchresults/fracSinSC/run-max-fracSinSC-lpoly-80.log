numer: acG = NoInformation; ac = Exact
denom: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 10, minQ = [0.996630632603935934740443253011 ± <2^(-6)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 18
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.0000353419742018417929515494 ± <2^(-18)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.21670045537438928082085810882e-5 ± <2^(-15)]; dctAccuracy = bits 14; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [1.24965730428333854107549501881 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 26
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.800219399619847647607536910886 ± <2^(-26)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94572084675964982770583875557e-7 ± <2^(-22)]; dctAccuracy = bits 21; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [8.3689817600709921558437944541 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.119488849261340398246418126344 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.84910816143941078718268868142e-14 ± <2^(-44)]; dctAccuracy = bits 46; getAccuracy rEd = bits 11
chebDivideDCT: acGuide = bits 10, minQ = [2.23759506786043559165911476515 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 32
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.446908385714287083761194702809 ± <2^(-32)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.26004384075739414252817987378e-9 ± <2^(-29)]; dctAccuracy = bits 29; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [0.999344780103988949890208380372 ± <2^(-8)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 15
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999871613227277448640911733630 ± <2^(-15)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.39550891379400076462630233294e-5 ± <2^(-14)]; dctAccuracy = bits 13; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [3.45143295080757083009946812993 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 38
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.289734731706210056824351979794 ± <2^(-38)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.01112946577092666456728451203e-11 ± <2^(-35)]; dctAccuracy = bits 36; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [6.87639171688951055525890211524 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.145425106825205894632648716935 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.76424665969291272278978377115e-13 ± <2^(-39)]; dctAccuracy = bits 41; getAccuracy rEd = bits 10
chebDivideDCT: acGuide = bits 10, minQ = [0.999940031437434642372078288591 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 21
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.00005963395981333630414699009 ± <2^(-21)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.09280793779448333792311573243e-6 ± <2^(-18)]; dctAccuracy = bits 17; getAccuracy rEd = bits 5
chebDivideDCT: acGuide = bits 10, minQ = [0.999940031437434642372056470087 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 21
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.00005963395981333630416881116 ± <2^(-21)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.09280793779448333792313662118e-6 ± <2^(-18)]; dctAccuracy = bits 17; getAccuracy rEd = bits 5
chebDivideDCT: acGuide = bits 10, minQ = [6.87639171688951055525889849633 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.145425106825205894632648793470 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.76424665969291272278978377115e-13 ± <2^(-39)]; dctAccuracy = bits 41; getAccuracy rEd = bits 10
chebDivideDCT: acGuide = bits 10, minQ = [3.45143295080757083009948421067 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 38
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.289734731706210056824350629876 ± <2^(-38)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.01112946577092666456728451203e-11 ± <2^(-35)]; dctAccuracy = bits 36; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [0.999344780103988949890209732618 ± <2^(-8)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 15
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999871613227277448640910387274 ± <2^(-15)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.39550891379400076462631610991e-5 ± <2^(-14)]; dctAccuracy = bits 13; getAccuracy rEd = bits 8
chebDivideDCT: acGuide = bits 10, minQ = [2.23759506786043559165908940366 ± <2^(-4)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 32
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.446908385714287083761199768186 ± <2^(-32)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.26004384075739414252817987378e-9 ± <2^(-29)]; dctAccuracy = bits 29; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [8.36898176007099215584379537175 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 47
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.119488849261340398246418113242 ± <2^(-47)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.84910816143941078718268868142e-14 ± <2^(-44)]; dctAccuracy = bits 46; getAccuracy rEd = bits 11
chebDivideDCT: acGuide = bits 10, minQ = [1.24965730428333854107552601627 ± <2^(-5)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 26
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.800219399619847647607517061628 ± <2^(-26)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94572084675964982770585869699e-7 ± <2^(-22)]; dctAccuracy = bits 21; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 10, minQ = [0.996630632603935934740436302363 ± <2^(-6)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 18
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.00003534197420184179295854064 ± <2^(-18)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.21670045537438928082084315721e-5 ± <2^(-15)]; dctAccuracy = bits 14; getAccuracy rEd = bits 6
chebDivideDCT: acGuide = bits 16, minQ = [1.00166540678409037356747572066 ± <2^(-12)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 53
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.998337362184207625301062432424 ± <2^(-53)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.12376039413589879405308096394e-16 ± <2^(-52)]; dctAccuracy = bits 51; getAccuracy rEd = bits 12
chebDivideDCT: acGuide = bits 16, minQ = [1.24825615393891790913048742425 ± <2^(-12)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 69
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.801117620645781281925242248795 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.55091085346650309125888619589e-21 ± <2^(-69)]; dctAccuracy = bits 68; getAccuracy rEd = bits 13
chebDivideDCT: acGuide = bits 25, minQ = [1.10427383797294653629623077467 ± <2^(-22)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 69
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.905572481763802206699655568536 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.48426988520500334288361215319e-21 ± <2^(-69)]; dctAccuracy = bits 68; getAccuracy rEd = bits 22
chebDivideDCT: acGuide = bits 30, minQ = [1.11913758670153508673795136197 ± <2^(-25)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.893545183257875767885394632681 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.5049316751516130930074008435e-22 ± <2^(-71)]; dctAccuracy = bits 70; getAccuracy rEd = bits 25
chebDivideDCT: acGuide = bits 50, minQ = [1.12165657931863885740123122484 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.891538478388331369932712545940 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.02637228703034498854193904637e-32 ± <2^(-103)]; dctAccuracy = bits 102; getAccuracy rEd = bits 46
chebDivideDCT: acGuide = bits 90, minQ = [1.12208989977854640099492262145 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 149
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.891194190587900453357709940633 ± <2^(-149)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.09545075766676658906037635515e-45 ± <2^(-149)]; dctAccuracy = bits 148; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 95, minQ = [1.12209035303333854686990535543 ± <2^(-90)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.891193830600813384506786049669 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.06950271321424548059735652082e-48 ± <2^(-156)]; dctAccuracy = bits 156; getAccuracy rEd = bits 90
computing max  (sin(10x)+cos(7pi*x))/(10(sin(7x))^2+1) over [-1,1]
result = [1.27187349565228454697816046013 ± <2^(-85)]
accuracy: bits 85
precision = Precision 920
	Command being timed: "aern2-fnreps-ops max fracSinSC lpoly 80"
	User time (seconds): 9.96
	System time (seconds): 0.04
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:10.00
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 14600
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1330
	Voluntary context switches: 1
	Involuntary context switches: 16
	Swaps: 0
	File system inputs: 0
	File system outputs: 24
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
