numer: acG = NoInformation; ac = Exact
denom: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 71, minQ = [3.1609883521485343211729716388575986667020327930085827460065081144769560061710643746365737107869217726810131775838539534751954817402273719035370621984386646648621465270634356414802823564969003200531005859375 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.3163567494072848020853647165012730556733883395107531060533656642804596228842411075689572777111249752486712881103008422729278936961875830164654291788550465541753251141176270167890419185614471235235648002026722592200233186164663523027424833425400453407267718680800394076423785631636472361708084642470617778459032716162185595885957667868504020462193803724649215017395540097361016892471398506087485635469986775076398857830155455173975037800213383643345781648244095718785147985458664056051253921506001650311551177272149554081947229997348764040690494517563194524355657477582257235582552268535216390132891461917097331024706363677978515625 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000033584365199353563636029124453198672943185199138550719129413549712588012280389401578739612190162045581119979134040141939281130944294137247605339160016837171388883485779150831829275958880954286186884323819490924791681600344854710305409868689895847349186621851602875361692437620315735987092152007229602227278513791313415950947103670081248154933957724343914798706506916063005161498757148552563647705130207852169028550824143026990779339077867321081037710428810087120860636218809893944323217111531810576139877096641963091789817627988290466955638582251512124621989120373493269200779879592733817598800261365800908696578069170278000506201822317198235623436630703508853912353515625 ± <2^(-58)]; dctAccuracy = bits 58; getAccuracy rEd = bits 58
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.3163567494072848026041384963581588580162258042951467253017047420495961957710961494100298034897741841201733345647476519905445874748726113835771798117691519948222453409811317778922853507783034026196591893945209980539564370020117644726972149376912740865284768457596888998544980789918175469798751253290042243085990060386916166918015587144535721076360096983133840203437832618047013029232529747962429245707689460425100249862997406937705770014407872641837628172288480733053595107982688369928945710056896393833993661325622610687611889371721886330023211841234458894162999232946824969303419026565747830064996004747200428198176849891917909405593689061130142279093979858217711154111384530551731586456298828125 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000299286543902525677939804466993402373470420116100003184916016590234173294673071505663310913420031091317624272472337132432311013511812114434686750501378602682132908967046444552561221931279583536476079519760513511848564467170637566927615486343736756919404242483891509819522551427706247295645880512893199920654296875 ± <2^(-114)]; dctAccuracy = bits 115; getAccuracy rEd = bits 69
chebDivideDCT: acGuide = bits 71, minQ = [1.6127970580162726486520388537397041734434054228027669505502991189026573853734665993756079803785663477433301614600603957061508708648034371435642242431640625 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 52
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.620040813585059268369436482926869195064197800333888898392349936683175413499357752809905547819211205044312658102237793330348228616659557548561582400338407889965588238672453473031837856805460309392521475227430465093652002671855709721613962490467229541435422002021859312443690517163173172687514266982364170936220058271434178494440417623793840679307276034722491384890460498144489950803713065883116378492025228125859891519723042136153376434016561302489083632221396808497718114899878227247096790211737713684864679863917302782283513806760311126708984375 ± <2^(-52)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000007248511766060457499249348766496456356708108300292250323375570127166919299272165954396589368248488066606995398331343772955133262827234208089207970545574105665617121119375188125390758524396948803305156792984086475103545143561715517983274126742984668905173061247573759839926133565015425645168332377631216920187539106602851887175167302731486013621662389472896558819775093926216369815843184082077295606277212131525464835328179557507807619335204058454187723838327798246449852007600062262449686181525133236549732957986992369497513720775300956016668450787587829609037726186215877532958984375 ± <2^(-50)]; dctAccuracy = bits 49; getAccuracy rEd = bits 49
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 100
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.620040813585059437583999675926400352843592623449988087921140621989465184592186474684226619134757759131188891118269501062959627085860526965149755424543486055000924261404608045490648614723787983552480499942626804608475465704269588510953049998599897017955299826854935827407070689036389242294633607297258485983054324913270683001874859645598673215291708203755964793358610045684913620844627892052294704759095035535071397918359469188326403148787785226650746737743792641049527811459415296504803023690477503782448480844017161427598178724460001925700943296724994375464893986473207017351416681094633531756699085235595703125 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000031127166365475691160867858060199163770831303900524350760176000788783421907000679934249666360769034178638491718842599782096182663317477481915777568754375834669388703797582630280919452670689210676779389583196490162442696539014789027538493100757604923827213284846911873083586761556363391375577939448349947549466302119167256691045748400029574799317489192282183091290008707040470890760714333234653982008563168166633178174228044099039441981526030413025762083386323966667932503451551315934044720998720066157526729786290496632995095431963042242330008852624963274673294859391666220781065958596569005849670454963368214100011459135447409549250029196267031128542157603078521788120269775390625 ± <2^(-98)]; dctAccuracy = bits 97; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 71, minQ = [1.00282707249497621394329831115111554915043324342413891928759315903454109532468044105742569973587767741103253382266547636905688916912390115803433970805488297493857086095658814883790910243988037109375 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99718089731263288633858604852776053583310557176541341523903218097987892805283818885579157389301573075165057423500780394578114740795352776881188945307212599656717079974923380617309471207996131933952505777409855911335921506107029124675932632639351100539362798672865348615199889597403752987766170491929847476006966297327108079849987924694438608257743312084230410546353142528189606183269229573409710972420251451478438031178000407742983729679853412928072263075728917303261910316098350707409432701982267776785763936050538065510456876965587212198071169458075982771652328618895660812698090276893938925517613114379855687730014324188232421875 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000022057175956104349875676719182858579228785305304421518966907661060468852024133800701588296988122814446185352647009157723737634571175181442686628120454577777777320135799613590229825560375989403423121831195966858466008708438028311076617641927322235015736834026058254688389117527115333936280989033394191695562680250248768137381221541500012559300728862196201088197034287502529717203326153545841385657425629713838811953292707163133187164146251629343442875312547667737136152999256165143479131956104530419302310417496484519158294727632366130792441214511635901828056955797242142276490879206828974100473747876855012573263769895255508035614155915027367882430553436279296875 ± <2^(-42)]; dctAccuracy = bits 41; getAccuracy rEd = bits 41
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 84
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.99718089731269158919513389939986882489605519805095668056378897921148506663072985405647931986134667259172296329971548258779611833776670825312398216323093714370881626951711743276642408567890559243633379841845150968022738295291106976267366272507560326697201092274034693009240195341473929333759405527535627468841457373055401185794024232074365003123075108299908005142307442371408937802698519041205097695857640089967794422539505977158832154943678335010511238339252753099840262949944309957084661432304630864897974835928139916452442732271970866625725147025319513532840990115680799407438286990995607977760826813582722621807403347105227620244833217629833135134983894409810289971574093215167522430419921875 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000001008415777282195973142816128284021251925569009438414771217500131998492903956555557521909401405029812492716169201353699173000998802807260081450798862220711611318440603288872301604869623323643800508918919881624040223827905815247865207020088646728592244232988961629767187974731788036755382463576267986884163289986400880751785494761005912176850854047785370786867705753954145144281231525953362055713429812353129248069029999718140814647443316844753198667437717731222904044227533555419330337423725220473099643917415323899686700100852048268754755951009219171210036841896498676752416765251959936850998862176699824071602630418757868744734476583758124025895443094343856036738877828095507050327190489224911816607651158963880611008079313251073472201824188232421875 ± <2^(-83)]; dctAccuracy = bits 82; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 72, minQ = [0.99999999999999999999983006516665892747300920223090563293900123319581069818611181252840166246413984010989375110739323104791509422284434549510478973388671875 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 42
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99999999999980598604199233458536420013341392086537677427430394629523973419012552222521058501646426487208487233930254923854016461006867918394414674178788457281926500837830996083073966564072819194678943721360355722283811025230229635327345934474171360655722702221144136970934254570141789461228015319326238775327023609091842593206563079775046673323304040192816946210649598630148284760649334772182543858823240128070487020263441227561787835963202440010198988100670537860541151101333548233271375380196041189064491694349356976090348325669765472412109375 ± <2^(-42)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000407493303261193411348867694374870238704270666968179711798932977605946257097438006006643913719306598067635127524323916111907737639572290942777553212989277714944096129293364101682610673725577726700228798220341314983389368795362106336704326456923734855557257957599196955690359568723983044289508781420654736819945295522275921460924923051197605117200004602332882054700657949572223640071429574329856811317739891445358248243748249719341607395130482686233206225332260470546338019174119225616440357514023795078110951905227641866217871408677934745579118924752037855796515941619873046875 ± <2^(-41)]; dctAccuracy = bits 40; getAccuracy rEd = bits 40
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.0000000000000000000000001496998908685770274126766607281732647120121128004692180750865126935405217775788621434266662403057957323342778708761843154445585882149670392774328147118431324326885694135104303788723509410776139331218557785896586668835181820334413722584671940461487281484205764913190484601960432931064090499161600914773746053788069562946496229955021535056418672190686388352666085572698358779494109730322687190095873532570334168686390766364966486451463309801675161864767174089868755108656834834270376989319141462218444364743996332879594174233835847431648818692110670947048589596306555904448032379150390625 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000019913798087661669485479312414956132977205992999844842902288052147873254886986129594513549096508256948410372033262255020906775449768197278262966017817271006352799242061729393432703225351883188026889081228289951902115740986876111365009964973811270123650553910247848478719335003593997172889645120151673933719806014500335182522711562395823134019708533049681579679507478499813091622342388257251847504702989840303125279534775079952022715256587696710695129041059802022127936058835715835098440688214893391686506379232604968061765953451174032171193655394541777504031424543628182396960179825243217987966498238128319432512679143448816663879152866201138749602250754833221435546875 ± <2^(-82)]; dctAccuracy = bits 81; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [1.4615229739634231640415100329836805826378535006817389360616418308310259751694390430021327993874674428983867965489570345407283073952574300506850853120598804418828691962606238709953152418419186002289389403330233108135871589183807373046875 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 49
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.6842177768086354645661342614277460252149987936659940085846975144107951157793417788804561049548415262495947552243317251316057276722361712436836444700759121542828468565282916987710793475912444999962218127765777467600857904007117514340346561498690354942628998763340289293018281011392059056743437907258411150855419146442457263568304171030831639654934406280517578125 ± <2^(-49)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000324382206979085067444855636084159843513211873532137491618551682794359699661410382626218423717073057556495716434504015094031187552584179248898610598303599563919534956482928879486772605531041563411213107412788235032676219082953419324300343826915814030155442332994078981271582652306825979609902513091510555147295833779925108208515144526033565332330765402512701341090102901325290057429762791863027048955118709532383294606991739430142937593780429056462322660151312751294111888634205783907108629173929840645561113927539141586996103933921724042757584525650968323252934897714423680557334627872806187469113287078764119031662266088634517802180567969116964377462863922119140625 ± <2^(-48)]; dctAccuracy = bits 47; getAccuracy rEd = bits 47
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 97
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.68421777680863641448458831754659141156562490034612096652414836611150421136746635613464927043840483673017199231873603327857660311313038845569471353585891877651117316918717505757298940843368610511818767483079604021229873370989510168757621070186395416925165138281973988333515686074185488604322626174130908635985664124398721696937375823204528999727436380479484449508680386405010725535433409213233952651279923262706006426014937460422515869140625 ± <2^(-97)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000221234649239409605644564669369844191801795248933027913076327890448886887292485551967327112376394834275814235510977469022419497179654546565491601664617212077023975150699126514543071098036606306595973540153556858369394538540723939503821685732568522494067296754120114570260438882074680170817470170371729974660162880233549152803767669350438788691715889261779885787856592714958237207769066278034715596196906450017479793328110422705332520457886997715369066278305179137745873756247086952802665949210751626923899749619149140336637861978389727218673933680617306822651342953404475174687828104491666198956184670171037725253415458024266610476389552401384299806728511781287332490955688564803158558564635751800891990312689753933652063618009453449531065416522324085235595703125 ± <2^(-95)]; dctAccuracy = bits 94; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [2.8907907661736029509092053295620456886915282673206876550101581592817806651013004603409197844126532211770749730692163341483347238636270049028098583221435546875 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.34592610842037891221828514198937757617622105046080450684332510778041183210544956453365182148666229121269104943025622338929587989200500844719480416751761669514684620369493980073814460451820219830603864359777713683599010434761507049947685732162210800279344488093519661594770524474436201346760899610899286926724016666412353515625 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000003265804829611118715434393232817276995241201032985585014158481011066514488938027465101788334419202352104062825631486676699242341607010558345543428125164469644658158762129794211902303874633552444100250134925946262776960620428239110418818344988577998611168720015246434543218345690948714387383057133307211132905587883982252819720554067245098514156899218048265519129483611108345175267516886394731281220232215262467663517245129650948230197823291602090174718787347836525534065920940258254270223444605005669979245329051234294667034692591366462157126466961214183992723292249138467013835906982421875 ± <2^(-58)]; dctAccuracy = bits 58; getAccuracy rEd = bits 58
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 114
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.3459261084203789126057015750126242549800806277973889719783010556164748680870965832741564877950796803241683069351105692081690061547561637814406754526915073436847703549921679847589811255313561366296832182419164559063247055381322619396734139465447196392908098047061857727376513107749064743128656889001718862147864104144947787155861259394602409593613397396769859777070454226986784274089359314530156552791595458984375 ± <2^(-114)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000184297180710702605484742713012612102788380824815562416387228914759948158386585976632624665690662453702886189129022394568402091591111534853334345738269508305280630291297416741282298723346774252102713277644864713320123891204746840945423447255535620570299215614795684814453125 ± <2^(-112)]; dctAccuracy = bits 112; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [4.98497568090624449914175997715077563701638239140975723537389781136114394179462598518148034363982923726546445983428885994499999489852270397113871883091533094488846637880634069212008870241499501585989706509138841283856891095638275146484375 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.2006027840477257514761165814223373416504925374063274420320948094559408223736722397413658587265316433618594242817214775531246722044521465585747944560961157537933507943670886089753230988581777149296112111712059897620554690032581995474728684760212181482097212950979739403742828974910731616152027321483252302352293344870271156456089384624401350531996968129533343017101287841796875 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000005020714050113629435337076203021476423846013416103683519371946213195854385801155828139446217777266118082633658522162356926435054584756822594187507602319061151187666127062178448263472499020215310047047375354845769405330592808932981308448588451377939057625458916966372796960954813638936650267389130750264895205506765274758033693333261518915033086404996158197927162369922123163325110866726276757495239089839417969432744743823857480702303468566525466604422515573494919829891058294955199585562558274107627963403779006616514682810128916391730071718700272144685775851576960008905348409014983139860719152862778921639357417650704304075236008588455083323509597903466783463954925537109375 ± <2^(-64)]; dctAccuracy = bits 65; getAccuracy rEd = bits 65
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.200602784047725751481344466293645567743211087511889576045720394756601651311272444684497554991353207479827148526188548709400123820740379314771126792429801400688528378923097113897605741155090102091150494876445527060869201170432248326530998717529100903651539601262878642676160223699989630682917367539054111601564254508258443511541360591561589213012567980634074660697083555412386588492169660175927548158412386014101219046318333514948573093050754323485307395458221435546875 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000030156866444344050321243862327810763831624515404645183555533016751382951824325021212029413834944331460803898227429599715896100298559419901687938706277346866295346165638983491069189869635594416569579790449322867493908774307871061663550550769662304478712173405071092082232499242966383690145448781549930572509765625 ± <2^(-127)]; dctAccuracy = bits 129; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [7.296227701383826932134617581309213993569062728323738146422679732218880676517227228151559341892083779140239687335399605683239343534296494908630847930908203125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.137057126083158925767383076591818242865900301908982829476705822725246284728395759001410993829347897024847060794822731448576871508157749710068400328740215629971094321657566215061662223867348783818989051808069961119530300912720964500105023367102596046488399494596495156084686139904239418380847375755586525780671536267618648707866668701171875 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000001599197798589140780459272487836544827492902746946873617469404373946219494505276788223483772425158765204845124962348697296364625956712172668991891097973572077652227257550840436395928311098523932122609925475874194005625638485674922593932004613227439226211567556462690235337962671812381424943232129351134691578940769227191075770532127414832883194308015305755615293796560002648186178447727377810265598840640959752095827428308546402950580073339468614835902255164789161929185114165408498158764229179481429775706741419816501651937968557990541944757172665094694603339121885543505641180672682821750640869140625 ± <2^(-69)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 140
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.1370571260831589257672365553184895525151983491597127407528032657115212689248496312227460476746270998798148787564308527626777650741002757535182675639903373806020879071500657775219021522748185566554621954167759129455512543809716628994772120255875961501055537726319476517220114867889143173954892748059233697693090728730652755850461008063931364819184799173052539089585096406325313789465856616762856858007736844673463139088198659010231494903564453125 ± <2^(-140)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000004877615753329302351159861505652669797669475877258247225505691855092243989363581038489472334823336832213275082714769014154120497826459110082009195825510944985073318129780640990164004358759410433189433429675803777355169792186704615100101278812871896661818027496337890625 ± <2^(-137)]; dctAccuracy = bits 139; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 71, minQ = [9.33027612167868759659962018976865156614006418656022026647461307671960266956408829131093099820737791219736199693456830821630237364504932277823680486418504034368475064192188079859206577415737379949979557469674773528822697699069976806640625 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.10717796418441705033857788212917633897053425983260488412444236120887658380146894146850064348056327751621294997673194474371711324007483518169023260334861503614419990291756433104790608162775079807607822924178051010642735831885625091835299938618293896170290623090275184706249227911520024588353286890124715491763209122599868956755486289469386112539750488537038108916021883487701416015625 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000102785712563159328601668416271787125680491297519655094786920673222491554710200644908915075140759186997605364041301601949474548892691721756408786758648710680882224765490851477404428009382210618388878622995982941780559164550677240108104025020500517969590989335989552494933465694197092312540216425132090672005423301111363209769099627812930647972441671565658067704178068681519123955731392198333912221740463208816319483598080566021050335182866688933448848830126699132855072036065660653529038411973477762141804735371163714296432789143351590988875201795564603224182076774331341848411459830400607189066297862796757874296487026143127746269712985061257383423427569368868716992437839508056640625 ± <2^(-73)]; dctAccuracy = bits 75; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 73, minQ = [10.652131360523767597208082000997409546146822641632282379314355591763868754523991381720357715877041346097855208034763281610413088174027507193386554718017578125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 82
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.09387792603703206531323770660724534813689580445511974249860523257425246367627123928922489348144505872871445465582329943478256832344387089079037723569397212899020607750327110097418433638903298735224694484341682993090095762574688658452069514865905289980574716632987638354296771149302781061593045385260468716783453790863944732336676679551601409912109375 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000319444706314374676078058410964948995856489281934149647869853769227221827134851246415649364524853892617655848223887816381320237305666031731653732754083037787623207563790918471526631413840754303344118018318191777648475889886842834717772339539246414439339099356269936888143934409042534503449727404205389684422484437685803403770628741465014696409379889271653299866118527871972367443103019949342240299628457029798807599545012184086276771021549708570781403453526955864168059348878218245316610258789698700698458245234364080133906918732272700340668345359717716350500210198241901604632175803999416530132293701171875 ± <2^(-78)]; dctAccuracy = bits 80; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 71, minQ = [10.241284268767640414243208264906096982098168553100009873880121640838435745605344596285332751286782448161344417449184632448873186060303270542766045099645978895541720277151398477144539356231689453125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.097644003794490173259082796207181501070644293244950600499810475540100528449910690918754969817216391530683400784558302289951707993995108177422344431623732147696745281364435845678696444918216949994500147549066371897423574707707738143206757802056947399812940272955305538145041530176349947839757032899891951443741984904994188286457535426988402215051457808978716955673942303231555242932975895651653560831500609445370258534802882696541274057430501324239525369515389867135917866743327191209138944400458830185147622980637676986647888907038656637811534124042121067620863098058474472462655057378381052816951335415751600521616637706756591796875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000012726143078568558954693188740586786813891221703122039510135138907592300599663713992750551019739870792439426849836193165513014608862684580544124984230551854078286506683188376995549586706332773527738820773918402606239365569470015700803068153386986033626213655067108520401219255033397183653824658641366157503310238667179771712752188351411377408859952824858580983616606591302754409110820129680655148485980704376335290542516391178911169701850796855211404635999348197607094487212172136166560193469294349101372423529547721946957071813567925005496024382155209597016756493868863590660342773802753473932756435887899141520179530064374404301370201139501948939258824111675494350492954254150390625 ± <2^(-76)]; dctAccuracy = bits 78; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 71, minQ = [8.596443270583426516489743151863051351460117186097268561251121991253241202187836459749249087113987243055969717536626654996734231417576665990054607391357421875 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116327179569944586960626568383265344797022720251460984733386590083774286943186006355779933990284009442785463595388879561492511008409429088644121353390973109441826935897049697694368298376758997720680123729364871026436388850490892294308411068596653869288190943484598877020342070689131435502193211493718473401301188694375787309852190775219774374343818875560390937140249022994512560013521030761137177673588970638831323112012531129671613522227431439088502558234963615987502360832942818217443842450664914309055769352382013470670329979839152656495571136474609375 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000039789901639911572370350028303492833503429701654139206387396526905604254993319313984127999448811498232115952838556617668065778696860815498850342658261686969644145028192100488239336236131762056953778345260975200473602714191730118880975244176652757970183799630368591292075970698615821497954204182808175917392273772558224339347882122855256108619059190702943422079132220999342479746054989623126171606018330060065847704553976857877054651211920779031861756266344771428828701084936827289511148745537641813022653614667098895974475558178118712893406528598502233729761168833094497898628105758689343929290771484375 ± <2^(-71)]; dctAccuracy = bits 73; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 71, minQ = [6.3963422501766179403489857857466736177140130016532937863379939282568915264152253736610981516185451265180570937962365842130365341104865132747107052352296565137974057417558082505593120004050433635711669921875 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1563393515993281419122696218620450618762132738702915249612671827886348258980192116384477636200082122755068272026647700239266479035006830778348279984222429535432804778570775400455583955672154595194986979395877894936689040227299446009428608587691302112319746597088189037252826931658977434300911032301215225880879760563516883187734927775186785420680923168897276370894388556797233465556374246877965094096223917137863965454526335227892794325446346388889759323455916205677495704168462434928996013848767432148843862383509748165188884462424092053581881402091333435411451497951664132690087586905736106134001683898304690956138074398040771484375 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000003289335663251832537154530782000938668445756451793097168860835085458783958603399238714179122319921347050573215767139989783655012522125376576172963363924254068056330861642111582585848056283887940599392364085680966311955073876426850866869819536306301576949579867601371062770749106037037234927259932510106199007245036992163864835281501012074223962701604216629267605340611761075658567731961415996447860642417769408258964568294824321929174064314533447085714754405692395990455594619104119652635238635221463174445768502158064455698659122412867806217586246062113796798672849904919593896968590479685823090347307456517741872118185064488984496698111524570773411824120557866990566253662109375 ± <2^(-68)]; dctAccuracy = bits 69; getAccuracy rEd = bits 68
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 135
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.15633935159932814191189202652976815980097521965161717130802586367998359661033284998435433853192217562278425322075621234149283446841763084718172321013664222658604174603869511596024225757018283583379412618419181628676638564836875977607237254941403368389856541574449010504319685603437251494296387163452753918971222733058368775701815932166560719392426059954676661103391608177566928140236956175488308614998993754753439326266584231825041829180130173412534784208691075569426368967538226597989376427398949145919625601327896668852406582416054585799256398725890233490452631309365333149988638810810517202160454603712556858718326355189527916262205477173285033754687929109794541915334775694645941257476806640625 ± <2^(-135)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000143368571885731128924132245604313611538902167767507399519029825421401280564758628461663219625496390576979639623898046784314544868642172233542053455245862183321979257417318112010367295157510307289311380405252785076157308443635031419581509202717612055561023388400122900547539739335434205713681876659393310546875 ± <2^(-132)]; dctAccuracy = bits 134; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [4.111481817101659287713032147868201811492453638495356907293293141604990110436560407937640164021108777678202944347676285608006452321205870248377323150634765625 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 63
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.2432213115574321642243183010399979809568114450256209422276185345813758474180086948410947068555032096597368709750813723655097249349090889216952072889883600975476158251539783256975258813783128711463591162874053687589613100866270738766106727601852994321706700696028154008037378239914320658333954513008635788330805547490438406658456818561900378635293167912101405167848123545579031827868571221778472239676943450114178113874618721899409924365070755002599579823619339831980871769776432034439286921250955479916277895101328621052516609779559075832366943359375 ± <2^(-63)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000811726511481339121449760078153333797381809899408409864665627411176315941063060992368113107706304088560341391712746562411966953469605910579958163472335941617974100722132187628962470384625699786144134678567379304278327448465351106182865657078890083563063468170299644442843948567179846790312714975238861296582231385919313339290002152655083952336840728699109115368976917127907485183566906059187656325255617854993697440325515141823285085458484618550974578217221927361888189640597663783226404544557355432805074994496848861148251225744658710284229130517592853966135635346290655434131622314453125 ± <2^(-60)]; dctAccuracy = bits 61; getAccuracy rEd = bits 61
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.2432213115574321642951460712168268344609002749524420165434540846881690936031391471127754059711288870682050857518683174286356849401600738238275719413150469806551604634542973981882293134754038829551188977012801510705447257250688951568189476988060015705476732029738325438994182631601768467124288559215235912053541825409315183306007480754786538621729780374165109651075661287331359663798083705377031390128829075588960922618823870164150347562639201914532523708378157672418232492348190085094107853429170243701122717425127968862897625528091787752052284856085308362909820306218926233565724714935640804469585418701171875 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000005116003446123965787644869825784845704779473139286533470562058579952796131763242574953107721970377337820799089065782302451056629340178878214862867976041396929137416321314820022103109103598577910704592739083781924268184661027316782917762072457890099030919373035430908203125 ± <2^(-120)]; dctAccuracy = bits 121; getAccuracy rEd = bits 69
chebDivideDCT: acGuide = bits 71, minQ = [2.230488728283476809295994326233931119361716559760383526467817073670906190617021857351522102060551818933199542076056217561766070951222635228489086061416855314050444736295730763231404125690460205078125 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 55
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.448332236482348298186397937284450860075215050009391635901998274735800438324217703634375452983183443552286556317156050531968146853952225257093174436342356831350718046130221961847369894309680128828675016999864270135559223224352511387551053851189442241989805154365478363630678851743440463238128418975317077753860738940238806523668195175976336015337858018017593376738822409399599024098500599526955516772477921523255569608401664795152725677289720295730299448161137576588633145685792837194021162500154342844104048087026402815085257451611816186700361088733103699216902930686487513745695990040484213597082874258603624184615910053253173828125 ± <2^(-55)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000103008047333741192735098458078793483450158546085219557053610296929145968081800440210464994400843204137088340376307631491495970775858747638162869433606852961631320172196314618577981534897992580188553834627730784910319384773260481566454494251271723988119582014127804997362307679254365091222181174570992376955654035660810172478949719119212827125459719939309619656876459560351476586334109508468461991195936187908813409029710797825984876466182138249791911599157350964282163947486925911637334239301376681909103853325725918372685575760565887213679960939355825001940645292572028219926452264978971421051355562795000385432368465165272101123628001317911184742115437984466552734375 ± <2^(-53)]; dctAccuracy = bits 53; getAccuracy rEd = bits 53
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.44833223648234827936662261701057931810043856812284928560827410383305448872881048052391084941572253888026325629855348567756252383983987603852476936765641951476797420294712609375018982643610558285962333312597398811456122668222611567022343842144837828495267365664144521691344489463360904041214479538555325348400416698462175092198481676821190216717010689153258496297435454568720695554894516043839779571104217386620906611790365956160267926210428554436543533208818990318313357817839210340943116769167148290362317722266556229325307106459561223678741447458393108338483875131581345578557532413304852532199046484596310796252806098511353868080465607970975619217708640906749906207551248371601104736328125 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000011525451964822928427020092263337908120840429848355080272312715302979794395841669641025424538513096985372297379771343144303566396127905693823179618795959705245862183321979257417318112010367295157510307289311380405252785076157308443635031419581509202717612055561023388400122900547539739335434205713681876659393310546875 ± <2^(-106)]; dctAccuracy = bits 106; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [1.1556210558050561963685742516007704996366652495666832697329682473940967272029986232609540951642410842226851215596740429791822180050075985491275787353515625 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 46
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.865335565648177669163074401134526801741417439514694547481653941716340677602821250613116890527157653899565403194081187309605977950041314875434098712180372083011608766524011598768653267676327622903635155423601101812658043414953321376710372118877443392991726013598639658086606081532909939824094180949032306671142578125 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000024385161253314954697009487483293961659805157429719898229602170406826434216526815734438002909824250035165696349755504701782163740912862887209278530194706120742378064690489393959352030623866961771514945631913220069162257609796475078782067232393706877498760326961486520076549585137926158646319045855237639389932099271427372505827437947911918500102430111860754665041256063647982161422977618896150419740048806232321549384684248274146575320667652147977562989306797192685907085314741265344561222737457426705745574188958130260319850013107800964194671333729047546512447297573089599609375 ± <2^(-45)]; dctAccuracy = bits 44; getAccuracy rEd = bits 44
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.865335565648166769457866270832456753907714696783045484938825675623805782688612268107062203721939817151993601839345520265638310079622720338066476164581177775974489434292338020887065859458505820095086424692464429885636296132567986902164656802392837510986528005967000933621166829722131931286865551817805969364709280653744255427325834730317603521906557540367335124708238274788378486694096257180751738157080559233143821612596420705396564492722610227886615192900120081138781103913482527221725714428681612191308000481118408456342478506218102195144927576556483595187904864527305044685778767643569153733551502227783203125 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000671189637263256992418272907133879890514905293981829167817068987051963759144919426427274249894231297670431466357988859725858023189832905255444345100286481885105124626033694491198605474134126949314720656721890632637099862713554318611217024333754864761140296573775512380309339702524869317315879074492205744787227554262952058852072700940796084888008990246846983278357942794844062548525029688558827030777237904593349627404969928198451054951740116207412530125276040619644152343788223992102434679381597527368346299417364439972111549776585046175086347389756644922482740012040965843053865881241930989942132452909066592300636325228282783383958014222780974478155258111655712127685546875 ± <2^(-90)]; dctAccuracy = bits 89; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 74, minQ = [0.99999999999999999999971983546660611747068283943524425722497070983091570348868078229959813048758828800005005426991544492665298093925230205059051513671875 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 41
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.9999999999999272398801529844905645372837615693650308136224672881167399257500463942061776401567597620686069507169005601497607874900376563795009194299130372927877105043762860586461483218234470224820792324787848307317209045134915302687608997545886221165083567628173851974969301215252388420378621090412071737919734611033898543232138717588253739198787259584087667598957407348335038265207312332872375684726963385341555340813302239253132604703779833836906175817443152110399873179824606565717642325829230564142595556742509899095239234156906604766845703125 ± <2^(-41)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000418704093898715097396590799583207968736654114346016680069664721875520075897928591040329140359381183723650745063032776697842365755414071760589613651536946441036895088943139707639094857322708089876789803746661382162836157236259824359200439578728972189742780153431262877133441037621101294427714877764095100979374020240507389020280340259328889629342647378032330287497477342337872317537362902000722368242358203261676147300501967699408562771814007082180831872074689461891758086491446465180978519570964636509223367544823421055903060286301048918689016176131190150044858455657958984375 ± <2^(-41)]; dctAccuracy = bits 40; getAccuracy rEd = bits 40
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.99999999999999999999999937896714545028355829659751969787748782532891758335966978870034221980744903613382532733092814619844849712493117364666679620227834743825730832956870334502855012567079379959620867943237445730222809834201355788364394275891243843989087385308700649417678283013788581726810777043997097331947913618327335098659216701194169958722867031647832211072513214835443937843837163352462632770172611398817259327798991137600670567155646411453120186285302762871083885287053356893286403174496013305676985181470820801333202189114839560147159655372599779710498281922750017647327780423438525758683681488037109375 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000008032993403073713827148122424115812902673111182331163990672638710243499236843103732971062582264735100021835562668161011384549222850564468000221993609361543056469620485632285536862119291294757177344379410590510879208618338883863141972417808671044344456102386502369420313691784882257083881296074566305833579278683070942722316325872479526273746259903578012500838175651867283830339646351626251961606302064787104124043862537953012487334998349761351491012304937410755857390705127930927087465739202770572843846594307857874306003201326421810863497872028146435109673269091870987749886821068213820218494027152127444432656788486907573662403059255865400700713507831096649169921875 ± <2^(-80)]; dctAccuracy = bits 79; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [1.1167436515075883137247570943948810764501150495649303672653471490526910728014571929777977741976786410230129621863615074772724256035871803760528564453125 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 45
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.8954606535260203028650903394960860848858190933240621002758297155928683583296253455281423994028587482002740849018985030646411549543633092892753378521323995867235448142336774045983710619862783199641887357095508346038382664047664569382484577352901741254491926587844831042852577697566239950693835179546594194087496588334999190334180060773160883688026587936486257200517029242460799903060412829200575034494285356885636457736948992695125693402097117145215928943528975678088844102210158519492296023609887260571592489111214518970882636494934558868408203125 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000005372664681203284675506949696162573012974397458594013328735882018511625223619865184896602472712163425036154718862663884351587015193762745597880050698542026934859445054403600284431134085640998657287890124220910083160645841906240271390993936141202671041444421250697824936894522804427802458622602727350458043802870246902387919426804244309702591245393951103222641838115651423992928780746726149427052298024942456564170071725500642310268975963659498469418832574767672274987347939185039600025930006511744455148609014650060178365795572433892654702625168994245541398413479328155517578125 ± <2^(-44)]; dctAccuracy = bits 43; getAccuracy rEd = bits 43
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 89
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.8954606535260030207862529523711781479999206908486931775362806869528009373153888722854230015275235285294990734346268631923470523210191215826052605349403901063451335352932015031249705445037265575669258558742856532666227738498702161807129819945712124286611629511132619837954818590460062794679388202386984803948476798558699052323675849600850050124007805003867321858024297398515045642852783203125 ± <2^(-89)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000295741965192106833359309976736480098339938590601095597632046582339054038087642843366156033491781948437853886530272274548045289413776999492134932590627731749898105418002135241503762011316441209210525891835683409175018657088271957493929742135470289238666968333723768432404735052477603943977017242471012795879391827922329973795719110506149912356210492592835135534638499717667776139282074879649061399560131007869498243363783555241948352466240393391245757622530022019218723416709691496384104724990246335759204682718907955390160898883159663790582396243177952761440753955069093813492553119977401024596654489944464736227056088881177505953666562188431043978198431432247161865234375 ± <2^(-88)]; dctAccuracy = bits 87; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 71, minQ = [2.1221706074487510270495474126121892284774459534892150111161930248245206318430724160692556124864313032034581689259933323654649939271621406078338623046875 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 54
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.471215648963392488982324806669041041947429084827723238790119738422900468463565432332110612413169183284300901366714981786012742745906389191183150930523493054657084879854046763105677228111845528569489393539489713497510200599491189370025791740604839886980553727930133286872336985636800822663250443156357505358755588531494140625 ± <2^(-54)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000021161392036839384975971150364124046559548832438067145732706513265362739996496957562621839734377764110612240580845124938693034040883512737277105861074076567570237049239961221324480755058399028830263017970224606993820862355302613807282147403869100741596336046451506418493526309786429948699038699373336926024143743895675034715006001828818414274411278229505642161453992281967832340997625323471376319377644623730550705461856146338352271646946283592645407118851332306334382942031153727396942874760598894718636259377342410715728072825673641734798928991378996755656771711073815822601318359375 ± <2^(-52)]; dctAccuracy = bits 52; getAccuracy rEd = bits 52
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.47121564896339245809084159038009102959178202632386533808054140011684184885642911925584279409262355491965545187299674562546870338369650882812299305611359674792358405725104333307935845191060002556135692434636892491589732916411603716097438117029982267882047045584483716028656065895330117993046305096340289471492595641240782032531039287276269830335231565311063437720591473567566254132543690502643585205078125 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000266990723225988470481068698855225861573247571270128356522240102545601032846268387181162959494740752521872471245564708764685119557975457808317957673838537958085174806423015609634420334860375310691677848225319957079370326729888145131440284341106661258891108445823192596435546875 ± <2^(-104)]; dctAccuracy = bits 104; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [3.956887253281581376831756764288809034163069732656148921122704322252734525440702262481062508586374902540948782510396748712810932602224056608974933624267578125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 63
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.252723905431135531607434631029068902593067927484356016697732341112682076040960580478981684298258971484012805610304381720022526928938620664060490048987980493811640030010132212139773196408009768255875877634451776155557329229258940481430480555859870827271314726984014480369089344470339678245631809159644099219018393022338731452496873629259621904880224632415419728918871700510017307562271088698931541131424329188284598132635797798016044805354445265244690234572519033139840337734172021533350875148923985944504123392351235821706723072566092014312744140625 ± <2^(-63)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000008096130850774809136187984697289042155217665356978439736305893947273632487771872643567607484891913180751327488007676501941805464106385117495968758604885210667341449520812588798517558867360434836414610493663362898204758367838245277772496451109849953231092026826273656814688104491327396742044921758320248835197587226148534233233797527697806358712660222333081717742282270184244300742013186166247284792128295976968845449911340900191705798267160285665021552697512916945393510040716269612168710155782519542920998545472299146844377714291439578063200600810921103711592650142847560346126556396484375 ± <2^(-60)]; dctAccuracy = bits 61; getAccuracy rEd = bits 61
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.2527239054311355317129634631756370379761429348290829200705202358335567034111935421337353055965739892268883218937434197582558936544660346786438178667417332914259865785240430566616125496140557724553498269087750981914130758042290348703372796156735084954788107987476000580413375698496496665439996995335842112843134344811790625413807887019184568574893001086742758222159416241238202448411709344355813300353474915027618408203125 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000009138814952880812451631567114448457104366434923197080270835525935112567229523454636595446648164156369403397662435073026165395947602966873729240926852208020437799402932725191225639606560174350376417327577337187032151094206791687468184604004051152514875866472721099853515625 ± <2^(-119)]; dctAccuracy = bits 120; getAccuracy rEd = bits 69
chebDivideDCT: acGuide = bits 71, minQ = [6.228531923692903755681656277957433782738477574320620367218918081955650897195811225569199436316013294940446767327944560706243226633205267717130482196807861328125 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.160551477017572842035640209488558271506257161462402012089298579969161469354357621379844412317615765420128972582240140603764389477094076247911634810988653346262162778169146719846226820141509289706915638477728662364505512665984050907440867328528016876228017119597969056405078340892371902891850167331699861250626781838946044445037841796875 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000644299367036366340592534933990975889239214481387594895710132722882023787727873918142971501433996931379687554262568297040939561672894035142202087207898111312038610024433353704908136876907874190410531144943741400437117855078232805572034626486282122714876691161902385070743809098793114047872832249156016533389123995467498200855818627996025390137727977570190403354778488585516525477401594698929641942491218521064000547494224075910759330963533132880444442800288537701977483124297562432280018834879752740720953857330835273859153078745071598010854380311525837631177193731701891010743565857410430908203125 ± <2^(-67)]; dctAccuracy = bits 68; getAccuracy rEd = bits 68
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 134
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.160551477017572842035233250084107265151517864584503408594227044580566888057589210815080911584775440652341331124444772278070539266446138440411907594533958861001571394091539773613549123884119727781160031176287073624925628597403966448435595425912360198371142036609579542335356197134060462361953600859362854365441644081991647316236365095804821879007884338379475587866577413553650845935977982685723131073274316804599948227405548095703125 ± <2^(-134)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000002440713367576167865108119923055888573128206060959306064000455599858078368200698750765174448081392984420508407954552469312044030989629250150307970208279385827483264262964004420621820719715582140918547816756384853636932205463356583552414491578019806183874607086181640625 ± <2^(-131)]; dctAccuracy = bits 133; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [8.451304106703497877702237768910377061055907732486229115265315294774822840932991200250930601850781083884461551453300132141777112337877042591571807861328125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1183249339243169650656998565466067001330992873046539171780950620878358940279254696779804815699127001061375309229541437724739987975937531467359911456340435148728538780108117092603387634575618097622630313954514830203103675105932030970966627679603938385007784822978742565169110373413758139005593766927743315823097251016388310605838008907445104595991243226241035286812413894175770099510802313471227020524819690272564317862900845256374478905650306223922611452885048043122575350288526545558803790869595974567582346106443813571473810952738858759403228759765625 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000004095235596421470476388023114153700945396870927981039473949592556663310570155299185039899401513609457245365815330167272362248092013414754698073263704195782100995637588467006907897993695748005522923503719573911625133483973559298006671516354634010764957109408325720812956144902347132152902613544742736054486209034312579093654746302011671727802065128712454783967961168053271994182652776662738948966754285000397935276216860227783225463956249329697310728013167223570507367959272726680202944038751091017217480210973458248881435647822246390762852712654260831941338528126850260235869427560828626155853271484375 ± <2^(-71)]; dctAccuracy = bits 73; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 71, minQ = [10.149854871829357350268633597900107667348140526735419420143428575733844625402549188006964867182438006600826844156681798281294248909034649841487407684326171875 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 79
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0985235762114660829315692375422085492470049748990098733260125847584990184564996413467707299111706256782812884052748094505366604707608295399963120989953876735380759729737155268966585506175802336348624343234578069450825672866960802058651704851531503969104243896767323889303142496333089622936954695560002911829122762554789005662314593791961669921875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000012617611801422706261983982020716690388140800888173112753260325622477793359930451255815121514423926030947154880097426089160728396836455107426696283242604654679114382768259429359264276651350895999258327545207351442762043211574939967445365651071493045435976801254209276309522411949817892737538514373261331242872437327838030017919289897698338073034206668603189867850058191498070211062402615234839841892180470286177615655836983771574025627787402990839825110321050364021898185185823985643362289919317647938713796864597226881152653264328362057220190628561609116998362364360508625082957223639823496341705322265625 ± <2^(-76)]; dctAccuracy = bits 78; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 73, minQ = [10.7111117033432907588681415295216559386907811716173375823052464450709079904201157018306772706706783029349183056485391059287071158223625388927757740020751953125 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 82
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.093360990688563826908102515157964347334920214744028833940468936146127468320294006393777567550014979338757638809771691484152770127904339477003645994476153124506430490660522925785258738707562334292351174876479578519425886281739981082358955888287420274216130548028273417533788047943949013547444943319845637349206103616783281040625297464430332183837890625 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000016317186469825599403475765776797347970167598835962817551963530107203598765482895993583912804817774549113001647968137267814880109912364237111217049933630088086796940897546206356851061467884598397274222707998562794760940430552093344622808031588850053519482856772378673083451854617105627621531916969695937395268462317002503946261699333133350583468677417079653798311762109736940537323322818569961945154910350111146788831227527406818339067772111355800823488049063050210086601786999112477124168454612995717834474153696660308449926733901319020386614497832538730815396746799510185876869172716396860778331756591796875 ± <2^(-79)]; dctAccuracy = bits 81; getAccuracy rEd = bits 74
chebDivideDCT: acGuide = bits 71, minQ = [9.453790698749381478264464426239562049863229731831031125531805478391965148685750744422413380224231878062809604704587289336625843816364067606627941131591796875 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.105777674994675682796161689280707209663455070687791538000987921799810925904141399029333570071870082078561283446532934944518652379267446313413657666911680742379801581672387650847094298096670369859225913582056784208409577032823598784573647347615377975162753836399454295386207838982837768970109832337337041164258837385491060374388641045658706977838796250298085353315922570230872161175663061644510341406975040316319822197883147064013259034575175660591912956654158010044323561133403061276258159452386101239514313207524219551114441628669737838208675384521484375 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000004856947515162373636778701249684669903006385653546223441056564327154986066877344722156971266408691356854116594994683759686545107330877176657232774526512715936724943257494862284702738589782409021827551091400230282083863274970731443698878515805140961332694443452886629904353821475039844944237823179406104136222777663339031254058805013850675938319695600787817258108374141972931767189813334330574308541799361987966589480992374077763117108888701564654855981801301747554212249754066547448680437291543761148613496684527944889418032163352253679949006888707238735201411096442658532623681821860373020172119140625 ± <2^(-74)]; dctAccuracy = bits 76; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 71, minQ = [7.457862414779462864914020376358325152214168678034800134306038848408052383161720185653104051205467123990478385864885506328914033247201587073504924774169921875 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.134086678512367151510824998814070010051192394372954913643845640366416981548162093003591119389500289666349996600228641303119444878332176439105322136780154026657386133743035882056031546754663495831275292980787995614964708703464006468573136273080256379211536335030468124861865780638654068322736291900450222858154347704839892685413360595703125 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000016172958438435095059286904589703949183323083915485685733007032933555553205565546707955201420056807499756701865485473806182837809252201496982023175653247642920851022577670265372862719599896445117280095733686466051456531961871669887279257759938416739360145552431451839681972381083173143008015843892188662263610901961113177121975566050605588751384672511440546876910495510244842582349624381752264413491992605201611129441063105559417951428718316877309839839386444458557444633346060278472702486196205016023668802936319671139349232285076404903882969984687493431919393105378190966803231276571750640869140625 ± <2^(-69)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 141
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.134086678512367151510707110288364496772202040779680008912303271584404025812184577240456574970040035812875065461981765435139889986843584831742565139659039935895440780176700793611609047160527077806142202715471256303635513105480083550852677610775280763672935241524397382543809266220838514054530807751202299968991493488477070405473474104418961709030465199656944785139265607366337745908132190929955050600207186291841557319169207672476430735259063019062708719797440009218445665054247327357031079845523719772973686101114593377921205635501367602591481912021952773483502023098748565273219401916549031739123165607452392578125 ± <2^(-141)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000022736244350626321602503493896796310067950513325469952926688001588479823215151718322924888464049895527627731658195836229119911107107857797482549893153640158476569968149606188870549007601814997285966943458938795091705087648699216973380288209227728657424449920654296875 ± <2^(-138)]; dctAccuracy = bits 140; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 71, minQ = [5.150164285498795330851954948571525923614157376630382307031043445260756369922684035064027557185131957076011341204219867208335958963516532094217836856842041015625 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 68
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1941685632855786904709369999939220653811203339713588604768981787666216938256842946392062519764211295647764919723076756640001542045858888447023771603480590614692925202313124354441276647948161292538105903662943340807952706765760403111829158444668368975119940957378044593375790465131121768500502737547126419520716655156679707758994693086189566250478433629256077051122008536430223235726666737540584786608039408828553582764650943823061053179969196514068621679689177372356849861144003065961483853494993189655434516764816177403218944164109416306018829345703125 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000002458026563661839258240373060667993523387859264196356708461556709152234716187672273982117117393171563793652926877693644407835142385398286326861229763949403502687303197917171687828003304462565401952362759846431680215582315916427155794159228479506376083134534127333758422274026101454755037357818365883545456968552497275132525974815916959021799020557791997649477104240367558306895383449222095587998221000723847353302577560276233820390422364583677056457771895574182401762042097661993807770176634607493676693009747717618894711197195062761766581826115193913778202670916694927427670336328446865081787109375 ± <2^(-65)]; dctAccuracy = bits 66; getAccuracy rEd = bits 66
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 132
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.194168563285578690473739218012454467578113943086212592414005106569251613483440161494472270819955179689958537579211403217899066340716084633371615239379801868558008015978565893578519786690248073070160338438560584653696160813199092068530460736739307773378383472499422437041340971837626527656909170466613138382325662120079800202273343575420531205620088838337155544993816412165622450139141905634328690534030200995052431249469220549905708034818053387904654607110442215910753890418193164083550837923321188277965235600693452169247221063021610383843263317831250940498703954242999732290007874890847006099647842347621917724609375 ± <2^(-132)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000096312753148043703364573017936676062741871218871899225508233843196805139575186295494071232728679692186054450815560936942454205247611293075440331737707632015757282435418532057468083669356302567831941121617833003097280118671023635586181388390514257480390369892120361328125 ± <2^(-129)]; dctAccuracy = bits 130; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [3.0242070026543608996577618344222254381372980111160267948584444267785248828869229454694110399596316358459077659596482556825236542863422073423862457275390625 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.33066519557764902745077099883330341040527447080206467221717929376610150871341404047171689003256394694771901780558949374731356603908945644914600317203294908373756742774449245819410763724082732079102025395202885305479308091999570055650121969379472744562525006540861556637628569976352439947764327854429211583919823169708251953125 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000341588854687711671712371361196609226580481052196671428442909994833987706846270090913270075025052167749694253195769901489521356055662209618881440931256164524202031720017490647268077930379594479689657569916264019736352139525427784790892795051521671900387288963495897126248818045427719578266367678261875055297303887384720100830509364433780226135548085180472259996728854555540522986193766400656477338462668617456864079010646011402418919844355760230659247691049787681341884611169461245078967175528453325072418242205704437370079507117115565104848565517424441306815197094692848622798919677734375 ± <2^(-58)]; dctAccuracy = bits 58; getAccuracy rEd = bits 58
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 115
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.3306651955776490279868425004763351090073118431959127054778670816760556028159394217360922854494977818616317775827768259050015893468430533564350161035842014810198589216938326367481938770999718848575095697357644806131067975033736016377466367490738095205993528444152664166057348548874576460068468801333008031377737912117400347413241171977931669120002883076841801708241488082849095845554603323233567692608300312998513081975961704469143705398220993404829234324212709715061741984804371832328595435788918695106262595441723333890206453084543723905425987755034878048088653018678748952974277841576622449792921543121337890625 ± <2^(-115)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000008190683825456197817842624418538802085307992741610951778571569856045255788684895273523096803602197902062830331524366747926329949616752681025718902943808331175433099330570518560176824872828788623285636741912670255394145477288218534263342096579663120792247354984283447265625 ± <2^(-113)]; dctAccuracy = bits 113; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [1.53463523400785345999421851546308171300140716990549214915893018798826079289214867266276721830626991348245606532172020941562351481479709036648273468017578125 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 50
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.65162064433278989406879201747897522014707766073377858538467891997277182277598700668652380112905504585985941570816096539773005719992818984295143742386715713529656279253278872370134834388730883353627787832104134530878111750906512923849442629427575607485208553136846522607201283507343950394066821819503828099917156395164391473874991152003876713819786637762574182989909274080893895322377945203760210020996695319637003706717084391139109005195596073258744913138550471173621619851641379157882489046349970957300768055475703732781767030246555805206298828125 ± <2^(-50)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000155792890536207882662767361258931328938409451930861869213403312983429104113392139794704977750774478994127805746912302048177965150155435761734838809297684530142895412632885280443902810069196426840014101078760136389391850497588516541405510399928323562261828911295457031184619122910350647485797271641303482256466965967605227500691411329279033196269907966939846290517517177694043302632304249646848889891912054615858093668312025032966351066935238660216857442119931070503508644476003175302489354494883924467121758420351442428838698891254481936584352919084039967856369912624359130859375 ± <2^(-49)]; dctAccuracy = bits 48; getAccuracy rEd = bits 48
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 100
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.651620644332790370000284187287707650750609631352479187975403016126733162160719286882495299426175789847707127134885177049786682679249230365147925290587329460507935397007515686504837746672337463789919049937338514853043981369530366988933823117770673563310731968440883991393792522976711431763109395111919739863153110207852802040953113324207588220807067904979288629978851928529172892572190813390543301759778577440940375156632310556707642621422980296996521482796829447760168465503483214799844062153525739279194154201243447827601515666232210942685989256181247420225892582118704977889311891203760751523077487945556640625 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000012363326907297304857519841390117313026654683819999037588720687860689040164433715742279456422873738060936144080376223972502063816778759901834449341821066044163579944947796817538889231905717585489902442239991391935192893840271117490730201905679172468139658616780332927599860936716921947785918475017154060000364721507867947102490482017535653013828793536214670704303007615502254949057713230779203375045014981461592094262992251290860069060080379962590990212115565412610543375377462629132840293109007298594139536611396890562377488810732196715599034816559006289350073160797472065625112997765360635331477002736995526022946454668351212487573329555125278833571655923151411116123199462890625 ± <2^(-99)]; dctAccuracy = bits 98; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 72, minQ = [0.9999999999999999999999796623163187578065674045559553600171222484504786607002776152841298693493926345220766544190545144221715645471704192459583282470703125 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.0000000000000607722629651192422104167182285578896265609954451007964850187117788492555233933454948008130838483626078400861630460292353792367321283117862263979431493074031852419902381677357387448064535555912511389471558572065735936448317571192388751097661444826648679982324411109640982748787128089387835176643668587808250765428934268656939450025080952716423015397022960343561383297741944958140063332301544657084093364253745823908392877384304132031635879987141778321722662521733851968022621721844503802774611726789100174528357456438243389129638671875 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000094678431473651394617414615865090823365455063814440170114536051154087979969672091766881109280616428894919316766834827185944703254398424257540600191966684415122629565870715863326337699809583919869193364331653103666565254316810071976482886376579849189494126894727007630786785565073322843902287270144425948105062473008884216414103414809057215110148048274546879831866493951890748880729066601223599000156036773939047936049532190928153273903014232608986992608772183955104172255184967957268266587061775614742684663802475692024056342129292209298767335479141138421255163848400115966796875 ± <2^(-43)]; dctAccuracy = bits 42; getAccuracy rEd = bits 42
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.00000000000000000000002203398634753834503067810800507205533173485986488733138623501722132150116551924018862872353723062430873607769914094202518690339610722906088961221257666606743642192803592128851505057781049278846618034408888019649372696733644976189935814999511506217997997301790168179327581746420808065199411865462667948676016485425913205064956727069986422459728232686968575481678795535324385035707330848319222474276973099967568451875091886064513607415328962617817636737968401857083012838487307689781371362002472298105083256122706278637264321361251027280041039552497227071992114133536233566701412200927734375 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000175741668315071851717115934248881219140437601066411701008318712327253031122204340522088399507167098517343388623985862060468903969211668158151968217054408038281681159930449642688509357418942963863800077796934533319389168214416221433535444325078049319420510139045762288670567899423465556415669826528122272752976747140113949872106963810341427162131544916215675651781292290389893381306667965345097313301403599595496058207792381771065970980509755039854624289143533987670896285240439461368506324720373943136917192061253871625714546610055832776364016052338311101057776278344589313550457666705372638420873681665170158743047432374118793120543191577098696143366396427154541015625 ± <2^(-82)]; dctAccuracy = bits 81; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 72, minQ = [1.00000000000000000000000402962319057090378234684435529175060837030669895862018250135912767149875428694636388441373264779343799091293476521968841552734375 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.0000000000000607722629396626257126837265635960958303573691007821219655443000601316127964477876981131219956540676506774602911924807749666521590733757659419194087492583037529645041821235644418508200383697170104629342146955618510960073082157526090496453199838363790632946593365266108558359018489840218569993559877432086386821122286424453989256142951503140173398971941408837250636279275484606684547081921558807094232507907758243185942500918309855754619548137479468480119066967903468212591549856818303045630376944818973328210631734691560268402099609375 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000946784314736514037029473606495967147601826992125659179920321109900284100642639492142635827294742624036030259530847862500230578425862198573146455246724361785934575362094195390247073400916653531879777277627798230029618891334576700984221250529402336435447794214461528739203838261417781728732165418911093975869319780009311589975261596170769678072312951526921580236636253213864583043786579697384294169539423806147772014919140545355514631855601690777605340301689184914331659890740715860547188355504941133238889177457022193053555112469588822023125462834514109999872744083404541015625 ± <2^(-43)]; dctAccuracy = bits 42; getAccuracy rEd = bits 42
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.99999999999999999999999657736984966885420076651300595599890846911341826481947827494812593194441875061530584599458457950227773365547841344508964934791256748182054532110792138991634338946628389081910459483679932466181863077513659897342226320939548168133920076041632572166394730757489278625247073936434013795419297637104480077668689223340298577631657384046093284268863499164581298828125 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000017574166831507187240724867127496106699539969360457370611960800352915644897270709990391224327525887850789391734420068939749641540798383671760835890720134272932507058110290375336575883188832234265548058860204552055288349566690314972003985406633273973942427209843690198181385387676540861049813611093978204819278597374730630451535789965865053758674748459150356427733627879715244211768276008005882839200284190362130977391618204786276455756077143699375279654762888642297742054686839300190441018801407762977314534248035854173956383837322003208568744224661519774887358447508084872272175301567146451401738410830811387327489710309720723734050462638833778328262269496917724609375 ± <2^(-82)]; dctAccuracy = bits 81; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 71, minQ = [1.53463523400785345999424993829184530901603067879244642684153569750554125146385877434979549700655598933047506928872664999641273197994451038539409637451171875 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 50
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.65162064433278989406877400553822351893501950719844198843723317515257250162555025246060639075137161947234392367327455763991325100354083280324646267778704001821989958128660137465798076456724176269912041232529983977394758581219957478801712473405831463494060980305771520795562871432304863361650859587825834751129150390625 ± <2^(-50)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000155792890536207878130271233103478731482188474315397400379076524617815407000771768926114669557771686013236854862336331778207861963243680634290899030724959808386616486323204672650735451594093474087210763788115523138768176026580757435777826290950042537095440454834535415591533803506573632826481790683574702159932419960091785239426322429587402917258611319193556254420929135585618686503581539885429304939361543883491588233905395271094169676801399327113119844905252229081781588004282012532874972249985086807879896177179994100794385890841507738492806300900639371320721693336963653564453125 ± <2^(-49)]; dctAccuracy = bits 48; getAccuracy rEd = bits 48
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 100
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.651620644332790370000266175346955950720199066505230053281757666846963071356620175709931148961476854386981412288410904913518896845657016749636764619998067550772644626468761327989397103739022929609586101184757765171320048928306606527887616207101645921918477638422179629365643076477266134840364878290814727858255547127891066684368309229072617713575397673376847496040653595628100447356700897216796875 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000012363326907297304857490674379073082577699705771724992015970377896077102259044622796848123164740690299291739632574974587675201535370458261206722898886354438580962055568886591903396210738358145572160447770171199045401960304962501863793512199070643184449392187086485445037211130390237467859812201641728118484011763863998893893397807101272899014285261426303724620498069082559226611189670576305899793574306972756628554525757313026732635838757253717575120819108562696389753255126751580568974008631101220457806549871996886073979416891806742558176272443761952664589274916466392446912052622759326219692173159366310753199979692307036634188059358459808867447549118878669105470180511474609375 ± <2^(-99)]; dctAccuracy = bits 98; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 71, minQ = [3.024207002654360899657767909162232940273100116132053970334859907242319879033834972943092571973630877619009941752333502085203775777699775062501430511474609375 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.33066519557764902745076872446640979823064796415370981024948877346325225838582911792813822952332291699748411898948044067961584558080658429856164232279974845006699237997865260130018177615269641733655366892092549248785696554160289316759480125321624430100705917685421954533191525109549069347520474427035542636354518603008485529184132355149839678246111640056175394188068921810192421171126358449154731141341144737332196297052979749787125242802946366210151354248348746686310312558880037472755853379578911112066726303571062572927985456772148609161376953125 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000034158885468771168751445535874390282599109942373075242832751790525513047587900088696131760881098566162182631259956131398904258520733519871241223929101506256038385445899879231017621585835149970139595674554766961303391043605877551416229803060099385526203830204104480358164907935628244593671380725864690759226224844879875175762594725297802255551624602109029744798979503679994969397311366478162262416220040978248864984709435910126570255571920540267010502399834098385776489543588511735237830487607886486094425636905618935485955381998077003247407220829466589773204532320960424840450286865234375 ± <2^(-58)]; dctAccuracy = bits 58; getAccuracy rEd = bits 58
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 115
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.33066519557764902798684022610944149682618591418017679291181209510452077866175289299683057829470539764048905032701465950875148204545179744216697696847829910976591265273906823802799743626396196779015437740079258946839884134954751536807599968127343905126536135926965993058201116497226028393102877304493759006119994411435850930838215042353176365588309767394281003410872388895733013647326714590235496871173381805419921875 ± <2^(-115)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000819068382545619781784262441853880208530799274161095177857348747068013771311969830944301331752523509562240042901073844680023116260687835128214862867976041396929137416321314820022103109103598577910704592739083781924268184661027316782917762072457890099030919373035430908203125 ± <2^(-113)]; dctAccuracy = bits 113; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [5.150164285498795330848711968120589959778172772882121740867986406073092713920483579266889801593314870867028628219843494097374136941880351514555513858795166015625 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 68
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.194168563285578690471059244644925354873779456599757052666515610240307027404014437420000888254885795076732518237945177157455434420140813933079710942621521773656706739965705815905512740661475397551773637831738091307523125578062805149522834149336033679246774935130712662269192972256951038634816063092880522589211977901868522167205810546875 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000002458026563661839070178075616305154112712949943399132641854348900576337442672887615527723013159743837700082658835852453500682400233840658553297133192762144243316893786564796531718483953433059144664204320762379342643536939341457475841834202386208440343529125852203367064664045410260488681148807844067651577821572509505149385166980856133536810999067893737514693038011264050123131806993152869205595913206522816966210261032756904590459249701319035361411028222233747364839443999569940131393986772427704965368274568557594491472049114684609444850800205125932013333449333014613102932344190776348114013671875 ± <2^(-65)]; dctAccuracy = bits 66; getAccuracy rEd = bits 66
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 132
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.194168563285578690473861462663457757070830338047327718723783791451590136511891490296611080364146366501818194133470759182524513954479171712353267185986177536665547481714696997153148390618065611167294181628460350316962446913112052161875624065273156861410998277706884832390453333963059314676791898044782436863750259336733974076380411633037727766634139716768654126511457899470794604039418883301149065800927928648889064788818359375 ± <2^(-132)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000963127531480437033645730179366760627418712188718992250288301844763240308744273155149427519693813022935300792226362184671509577161937289680088977496869335511885742747611220464165291175570136124796447520759420409631877881573652441273003521615692079649306833744049072265625 ± <2^(-129)]; dctAccuracy = bits 130; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [7.4578624147794628649114554189490454876714811361227755515602157578870846183886333857817868221172623766174548079718503897084236342607255210168659687042236328125 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.13408667851236715151087098637897632056089649209354192241350738028615043881954324688202393427967204061989445933188756073498138515655634175851596687197525153988419106202658399674084296304702619906307821597895169949944310583736092795556010029527395268122827582657832574680408848866626861735064951728631812223028019271444216669962958705654805653601866992833894081829176217522131767049252139232064464403356613184860437854709247601502887560562544321980895008155827744980943864148416943527642958177905675481003599936315022478350300616511958651244640350341796875 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000001617295843843509512913425965978331056120181853149022355371877343854262415561623836826893360731600837618642278293269052787497593171910904252748496583592281960977750503946266398943349422551995561044617642785917119699423972965741655387938148857009759038944810083908834998547774499281294700494187876890051740079457794915685339973092902489406942164428529684552481190882716995439170983778967196950492356888272167416237579700886768795816681549474867482676362904188542795231760760434396052640016497176278435398652071260782257214491125322306197928867687518794435505738171787726287220721133053302764892578125 ± <2^(-69)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 141
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.1340866785123671515107530978532708072819054720510748264131942866263599883952573296754937827872779702603491159829198132057577253432457292336847100692162862983751226591802554493527717531569839319062249215025972561104074795997625400651776733911462264261977027762106643223421537874081894748455948565117562427397089836646572423604772713926017457720372284339698011882447115341458381596297138344698860566305172181689187027586740441620349884033203125 ± <2^(-141)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000022736244350626321602503493896796310067950513325469952926688001588479823215151718322924888464049895527627731658195836229119911107107857797482549893153640158476569968149606188870549007601814997285966943458938795091705087648699216973380288209227728657424449920654296875 ± <2^(-138)]; dctAccuracy = bits 140; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 71, minQ = [9.453790698749381478263535307561603946689104650026936315575934432776120821442192381940507005906488555448134028578836829392884055778267793357372283935546875 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.105777674994675682796172142223121350645412261283511022158785972395402344780124788134521819790389883555756037266728207331697936721906131514991684078203360124755784441844886722809377197262016688101679238251921938968918206263031662474352572686842957851487606110106070908500889373824859943769324904827124956586958948179244544007815420627593994140625 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000004856947515162373394564333672230620449725204078964026081517169526860378864595424380905899026475418316677278982142617527268815105744545322057867277312834206719203762722501754622858191919063649965547105988238609058383553780564469860941455330006670453752310174354404415404340960040121034937266961740078225043350796219596478664457212210800616209658664580134708128853072324099789279347773576148760799259222131750168891560163309140870057781573358261292802026811190114542247930029546625420363495393652281558062609565026382414083588370949153821318613782423160548911019417095413786000790423713624477386474609375 ± <2^(-74)]; dctAccuracy = bits 76; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 73, minQ = [10.7111117033432907588681186135003420985476685232824177530245507749822022756490981363543863478494101803580102137602374050284748108197163674049079418182373046875 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 82
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.09336099068856382690810271247608013339645972068492098155501349459229133614753538152766493717147279686530346911030572234524066310261390757583597789538003632331149983154684856128090364060770183510386125537028875495406617060992610568503516988974837845296521708141518299853659903040279197314208720146232775766737551049114887845453053697662021891272464215044791733906028527403821394262310240436241897849245449064587982020030744528997576565012199487074293501418991057098786736681121127604820276066732870724792125161875695760205218221017275936901569366455078125 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000001631718646982559756676856047417855944554126298946685686405422412362661480367821195964956114134088349199714623275760085787432277261805739128006482394329582594793487757399880355264466775995049034318042265847699552281187073113467733714729090759108484881452460624591107307459219752994072995997698067941772583963427593384444833728071496677115385492908637274794252400245225903246208225718965960466636212172338856023971266075380355115828314797170007342312668500035294983792710076885257106513964196808107635376548600805892691236186188116233241402957585804355411735200877176225724152214269224714371375739574432373046875 ± <2^(-79)]; dctAccuracy = bits 81; getAccuracy rEd = bits 74
chebDivideDCT: acGuide = bits 71, minQ = [10.149854871829357350269366080293661061987460898750332726458514657410423433306429064803207140969481319869599485474181803368320942126956651918590068817138671875 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 79
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.098523576211466082931562102534192768667219535160921122196484705425508675075336926607966779122424177603562787712843056862325234282074029150584322251783709982930824430278564485073247686394930889163471364973523953657699234769702794349337623130141720455005229241257980030115977640801041284289808145641278628404207297663561792450388970107311943424075262921992317898807259561607048490632966491501348326564636634211671472903731566636569297331211189584793772839005773343192693125425231800884317090827226998937554320692777144741203443345511914230883121490478515625 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000126176118014227048472883717500460300373664877558663138326809271541177174496702066807414603925920518345143704045044573712478845596978058960439327736546958485408351125362100353510869020071055061941481951152062394193991914490085810415847132503445083807671372004950005019427998373672101056738143431528337678772075526869759907314975296945853242285149520996335086241094016620307298305289514841200344553710662728942829946445976912945574733687736444646728887048888978768029505567181044752609287175478762832315174383568423971513495629095244250453685613177706797333708582469456727093159997821203432977199554443359375 ± <2^(-76)]; dctAccuracy = bits 78; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 71, minQ = [8.45130410670349787770371965184882593007684832009690716245106944650593418382037171076957404535985376448000224811215284892451649056965834461152553558349609375 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.11832493392431696506567897007148768110281387540478780915657893725378307511538836789388872975012064549815639089893878154600655215418845384232166341437517908280488649662995404220871153145422073684402725016606202545073224233451668032963190412956846676309232026177649276194316728381412036394561073673024897967565038925386033952236175537109375 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000040952355964214707114868551253026496236372886596788324802035756285627228369315527440371524306361643668078076085715760214852884311487165656394434128793586513123482867594964412217852476447090339725395771023884031084047162274656249105959147324569861582303512033797060829255123937460255244698630450598053469718782642677354644135015597249481870016860847583588963760681896152665894022952950784743474209123626394970638394114254134146035091041836790645540647200295368090156377357594640581146816289834210187012801616319857652481758273082508016830389033170981278504933949247135416271703434176743030548095703125 ± <2^(-71)]; dctAccuracy = bits 73; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 71, minQ = [6.228531923692903755684392127170913369992367442508888206678528918247819239413584591511763236398003338570617092212589158313484904994083990459330379962921142578125 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.160551477017572842035569883977841231831647144186299261255309853171877812737045827109990461556989528747940031842484136867055198579727894665993993989593778121754015582479637663680411584419229599283217802498936905627005718466036799383911489154058206892225973205541911274776927990416684391561053526483010170912021460677462604075665238928855654259238180830448225641385362331896920673424745524250969182625550608230256448599897805715687318238468394715126156587256997159021659686594193420160236222107189879188362648999334469923638835098245181143283843994140625 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000064429936703636628416882761621179053143280619131968549981340326187506701505200702825711438619282015263639704529472503164437452561057104853598838734889786918142358347053867081223306861430815833114474759221798427110132541691743950236271978516292058458793848963294931869978109864038876136292710835756456762846738574095879698522586435166031140938627254174081558913515778884421346768553348312167421962381759083019628546801215302007941646481127712175398747962893667352549598701052499179029307232997642199527007139183423057308331215622221844552453656062358344257050800363284537297658971510827541351318359375 ± <2^(-67)]; dctAccuracy = bits 68; getAccuracy rEd = bits 68
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 134
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.160551477017572842035162924573390225476907510248015782248043679705338837598995155620561555201610139268641098572122876391669114034480548556666452482076015461875851768787601626033449885555917003256497402489456762276474498386423417627801523928382420407259272980369529393140137827237841629864247382494179409809314337638718182610845122727855122118505425411714940080930809683309383517271446416807935710332098657323856595493393884405633410908781642834348493781825337920437641639587496047772360167490035132702715068167719041664885134309186629970443880566665353122091941005277542791501201036030721525094122625887393951416015625 ± <2^(-134)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000002440713367576167865108119923055888573128206060959306064000455599858078368200698750765174448081392984420508407954552469312044030989629250150307970208279385827483264262964004420621820719715582140918547816756384853636932205463356583552414491578019806183874607086181640625 ± <2^(-131)]; dctAccuracy = bits 133; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [3.95688725328158137683356726156367123364365077717085585514930357618632413994612035139249707908600090062185244317864880880808442498164367862045764923095703125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 63
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.252723905431135531607319485092971844664236106633696055642763055821354527714243767511662878444926688197569666849492479983106182544176750262407135595484596673390722905762273976262160231250139317273462632665409901900090247608884406251602861206352920573844828200383039907961079619002786819941148988011292431110632605850696563720703125 ± <2^(-63)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000080961308507748080528443568058020991421301551671178267142658966788967405590654859674563306996639112713230738383851821921138408566360015502241188325909775396441919646511416181118504585541758893247517460124427078929352329230481459490020037433325380013606919695777634590652101916374126858330067568244188405110538528294230843106031534458627464391191626363877323480272080131017455294113727225520241983361578352034673416434283693058507841826840902722329328060179161481561781299521206512355317602019933712031471676968437527588598852579529528965490324252996835741047476631138124503195285797119140625 ± <2^(-60)]; dctAccuracy = bits 61; getAccuracy rEd = bits 61
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.2527239054311355317128483172395399800469990196132129296537756671982057524666003621892854108758761523543963486600179325557415971101419070185081740383655042239628730104403550541304236908483725362692802023034054363842989648450996394759175706914100469189967181036048282044754954803997194413210048961860579040036297079425656932153031171957125948568825175742434653696586782769336556845281519939614294269629049054177083844489323134551044488824039044782287661463639502653071863479507616563236045313242255948974948608977535188930622556903716401703924696022668227936337602240374797073207968622909902478568255901336669921875 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000009138814952880812451631567114448457104366434923197080270758821349717290252131333199798786091242668627020593762980205071209347427997940063472051897414124708683468409627020005623871357831886464143560960158210484478209639433909502125551183038254521306953392922878265380859375 ± <2^(-119)]; dctAccuracy = bits 120; getAccuracy rEd = bits 69
chebDivideDCT: acGuide = bits 71, minQ = [2.12217060744875102705016699773211119617538311055648831174919094449968357743669677703337167956887254711967807766816174197543887203210033476352691650390625 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 54
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.47121564896339248898218703957256754833370468779833304797786703547756974411747950102920704616854249749619678110195384175154128211969043358388381029147641139842579712953276516730868727067819545496462275286666491467432961072157782043364751942020682395269304472447617610372617630552923330526076613377336617244825504206171970390539207677146652864805108797710447928002908044275867010738380949485893725378604002818941969522354599929508061419391413911588850736975172721446350847091572448479737384549566965795568194812215079281259022536687552928924560546875 ± <2^(-54)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000211613920368393848480216594115343421507111540135343848569643966218203807605373314508972973020354100847922667015945541143597110730730682237181798067234755922593068449349357391319519408312759708541347359314363842557954067406632086751689011765549786222388800926845807023178286402788483147405602906464024162106596907769827047760215454518850416399597184165563368764840976282706820921218710471470129205948135798319205406674210051577525555893362502408256929680523393585935763366644670575563424586497075434042892901919961864056928603802909344560353836761645851538560236804187297821044921875 ± <2^(-52)]; dctAccuracy = bits 52; getAccuracy rEd = bits 52
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.47121564896339245809070382328361753602587609173617966776529870719397022469843635415889552769669622430475238030144362318569933904205666473031415819987907124420574626469180364124328126480948700545076548419016559605146261959390120777075343174492704254268844506035272165117907870671920817154472167630029396937927368892047900602519737648748668807522264413650519548698705550442635751991232842401342728265501125738034428891491385536197875562022499191109616054037607698219067257680236871163306941881238598846112783240852451536513620792496149551029437245283151172734625434002672487998619743621020461432635784149169921875 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000026699072322598847048106869885522586157324757127012835652223983407955214937684751475613417118279152731477413143191661672684277338815684021448205751223550466649403464794644564148481414598982630308986285093935301362043153163818305748274106736772637304966337978839874267578125 ± <2^(-104)]; dctAccuracy = bits 104; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [1.11674365150758831372483484756667404918178703549059888348338985957441584951637720419380877927973979396710866920645714717164054263776051811873912811279296875 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 45
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.895460653526020302865030358992813161709495675449536601288173423205547202474598215392528962984917706243582783062318524431714569035582193964438360302188810089903791032830815534980356021278136541919856864283903994149653146679940572104904186548496079137222292656717312139073839359626472145237130462191998958587646484375 ± <2^(-45)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000537266468120328459236602565126106930593176221005573517351514956129056655806677926866847981456896277036176961914530826836738344472632753351029958009858490761238742642936308016845756222683402830606951947751583463093808489253706014912600066357953930049966452920059147879287940513236606797073439421486081201938824208274461695891378511633129926984651438700611596856074862548740607830462186790631615696730230666707882760318675257257662727932404426227947703673137232706806004222814079061501426073294335207824490155469187399948720183541469710216016697490459819164243526756763458251953125 ± <2^(-44)]; dctAccuracy = bits 43; getAccuracy rEd = bits 43
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 89
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.89546065352600302078619297186790522556462923313322027893902169889380200102502899879523618888312825263794874367426769650166036428116317137794948365394213678406471895469810361189983640915427465790804325217352015417313257760895411663611293673687524503726484031136671014184054254590374841714731280320571849012293118563640102764844983740744765672307911523949280417826945888498523741699093577027032125866755708352511326646759695096401288847016932045748132439125236622392458461783321956167881512115444410184342792957933764981300522643792914278835687458185223658112959880077939313347545891019763075746595859527587890625 ± <2^(-89)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000002957419651921068871687760083272592035471067149238628420939057044551539694518177553842895368353385701048303801440408938978013353340072413674240316640080754306192375779592398405061491941271178842329836907423538916043756627723989438236838026289855160383585149114866116511870987645135679141053320793422958786929396209026084906291484523347421877216746227576831581657752240701847661016458607252991356451941069376476334916520122393515877971290635795866213233986603506612501831899484056699556021638364229848125355562498397319978118080827445689543644009264934560254308907244185657048751779748759054477449270560864325433802455951158636758362673047084712152354768477380275726318359375 ± <2^(-88)]; dctAccuracy = bits 87; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 74, minQ = [0.99999999999999999999971980116010844127784311630063584580000611231271564378374196572564165304956289363349419675275168983841211911567370407283306121826171875 ± <2^(-69)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 41
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999927239880152752895280244647058957235647012833228106838915183116443169526622146426817023697970040769994412639273856068189860606107208006036240260791028903796846908345845428973534213573628584741565465605946200005136226156797356243977898792838231563590982445588265649936844334058652766849348646012621506128256666202963472613363090602346018983185583851251994836329141686754049055887874419972146834272548825779886343596944673127958839948792530149093418324591566845071483472660675320855826334593796471394977487534561078064143657684326171875 ± <2^(-41)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000041870409389871511636753684702526197513585631487707477863931441563740089260073773260522026859982688457817729181173445559537050609336464508292352574334951980214679546651077295534885879320062940631255635280733377209648329542569098727778394209439086265791379107653431878129699169428093472774930280797534575517488026752430674675577351342151258430182357046098656206537610792161260108280784354421436906894282812461218688982173741662905810889952131222305190680233946129994186289432204143497821914844114795805931546279775354896253882628750424103880600767979558440856635570526123046875 ± <2^(-41)]; dctAccuracy = bits 40; getAccuracy rEd = bits 40
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.999999999999999999999999147371861151107496672616206356526153065568785922086923098634967568079980670198097000413982964509141424766256741071119805632021775286654263877301412459377384283419518245030726600794897963227248502485993444379182018959037078162827846479331079076767062667167862000996984657385869052623994574173923537481913843898467673261104441323448053487777173580263499843487949739987461489350689070690635224535391193697045416070626003102629953985329216213755481155268096145090754013822295580263335275725266449517806635065826831186737537553617617385836025224995289757690120069355543819256126880645751953125 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000080329934030737140567366036629459049776888165143831025448899146965834470004769387386133808718425150545949484534956776094778451018331578115714454983091904896049973125323000680280539926122292810956721269820914475366761937032700818377786247547750836756769704480306030933335601831405625683936812992013693132570252363714382664147603863270642699074393864713203000355207552579884907409957004815164239438727862080675366376604821834039703084266709064374896481196284021694549489845171631978662073823987872442744898580100883400558346968746479179272768805975584948124215894987656705365668593037969467272604927478275765911571126587589915767073645014306748635135591030120849609375 ± <2^(-80)]; dctAccuracy = bits 79; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [1.15562105580505619636847802509590563518916971842681428411602566093077200904035448628152735638960843864606673666033283265353048818724346347153186798095703125 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 46
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.86533556564817766916314515516773350684952813708159680630468956913748156244903680201741282763077381322598971035356630743890860061039589851858571947331475489500133565139645964194543913339936586029368936376392050864995255174670366656151460629200104054085385266753886837793415477516556453885085006628255757698995081307785779682723767055364010972705464068171056089389993961227347718990138896254223814517743604395600434942424575460137394593181563955983512032121528185580558162829691280782201713175101951588106576063186281544403755106031894683837890625 ± <2^(-46)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000243851612533149559420710170047168074637785252443747104397714171959945291870918735152965972822313185369816710300627546506788975694556179611912308860839733954692321925670518951461428973439199605746789644527827170118272437269938208923804322236353280019443172606979801220458978583280483759319640560010962692135098379017813387198481922205580878585179424765101349723562573521482913640069941476595115497299697489441418565607954283100338006705904045926029489310132008277288529164136272181595842588709190649356768955014193157211869529879164257362388068539615915142348967492580413818359375 ± <2^(-45)]; dctAccuracy = bits 44; getAccuracy rEd = bits 44
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.865335565648166769457937024865663432127639287337805704689395813235402450596954394246131915151730268418549622489904977309965223766704926349689746901895132524954466710945313940034120885922704671250447117901818444428742696167431377165125802953905388943253640182945692444549675125245326920816695260876830558465447339121896213257619959459230488002545213233052123769084573723375797271728515625 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000067118963726325690399233136917285904307150300126825553401787178583642264126534979632053271499603422956188496737371813172579424061378272763893629824597342468618803107953980083063127674868130185538830895207369770650370742866751823485103280527253284917914613282498243210777782454095308924211985155109439779463533247652751871110359128804438858697535287830973744788708346573014051302502046102610893917400847370549049306543726079237680132585260467299372357657898722970818258830618648506222476742565318763616858954064775684920385956791565415071554762553747025798837611260678863313371614799213573765198252213288856975204340109270630189181212899018902362513472326099872589111328125 ± <2^(-90)]; dctAccuracy = bits 89; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 71, minQ = [2.230488728283476809295994326233931113599994078376936065007934645186419255218589503960032826306419141263545443515737071022727412298951833905873202145306038162461683380620433145227276633615947219377827204223052603992982767522335052490234375 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 55
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.448332236482348298186397937284450860804748923830340340492773439507674838763690592993079892066622766815234681531203689525823294691398488753297577652003851823374753102567611218261555289131748100229671163187602586020032084516202424749719409663800873028607792521209182453732823395450484280066471138120775152524198154155521067078921625126408656569765298627316951751708984375 ± <2^(-55)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000103008047333741189653610547059216118669674044990118692976115111618631973032274933159620093558549862064374327824749436817991940981529110510897705673859396995638253560302113159195589833696213460544273318759649146850547065782177519692328753855021616866408034191451979229682551721393382687701277174166504689104973948091110590192548406111258272079586050273190118837847013680281853410427389971180829007222590499621574168916847478094457060118463718282247550613883015488064175503168160033168600725762968222941168471865001787159097174988163207069320315701482114874297938606292378086215770130200498051755186771587740723365698484646917651268160920352556786383502185344696044921875 ± <2^(-53)]; dctAccuracy = bits 53; getAccuracy rEd = bits 53
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.44833223648234827936662261701057931882997244194379233386095943363115741546603169645225881350127541714967022990204189873714102218413973831380893125290442624759988945043496799403160411241589323667541931416548040964790144919661838865601170298451996219660431614867915570566955514271027343258459345647164644915869667469583345114925303133639744203616498547911188450111607466205309497804883756524321246330812072605526315272062021222154726274311542510986328125 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000011525451964822928427020092263337908120840429848355080272312715302979794392353548940090747468762780981022501971287731099556256028650104658582601506287603395201159968172528483341442091644845968765235705963982038513388642335037797817519571161475780256768955318186291863236464191357077968547173441038466989994049072265625 ± <2^(-106)]; dctAccuracy = bits 106; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [4.111481817101659287710864175259277468157524466212085734311087443731058427753085934301785257990396956617970876735122624789919854038089397363364696502685546875 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 63
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.243221311557432164224444380454750974634803254546079999988634679545767605384830582007410380267988901186737972016604422288498552644300628815812940042509402803714425228564890243161193227705642028464568215258686186848366437983484065135281231031102294748999562156663616320889351368708565156250109469404652173807335202582180500030517578125 ± <2^(-63)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000008117265114813390973756312361210043977474875960591306027958725070928313193332325488048039214978159750268359702070636503025304542632185138463143489768931038881746294605384705159780368102280856179120884095237195597974351014442236413223401105040075577924826822061915878203080743637876892693609114937950298937039870830085496597941949045686662398665833949318577965230179867471511754694806608664684367555162450508523025789161158624004045593476774549827980587338887015497937640463818186975053498548640492885960500160347127626467786826726642973891524170527815573716878816412645392119884490966796875 ± <2^(-60)]; dctAccuracy = bits 61; getAccuracy rEd = bits 61
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.24322131155743216429527215063157982813934528266817066543757068152907638236752539474500313104463753362157929020928021690713022633450872843177279439235378386539789929439495145939632433017241573034345151155167757206911345837534352742538008502423738194537380175566164134175763971738497145602687503546259389697726990196066366097668737955668394000757566050902372045794199512659086899468707798632749472744762897491455078125 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000005116003446123965787644869825784845704779473139286533470485353994557519154371121138156447165048889595437995189610914347495008109735152067957673838537958085174806423015609634420334860375310691677848225319957079370326729888145131440284341106661258891108445823192596435546875 ± <2^(-120)]; dctAccuracy = bits 121; getAccuracy rEd = bits 69
chebDivideDCT: acGuide = bits 71, minQ = [6.3963422501766179403489857857466736410533815444071838088856897542605681810346243796602155826008197182445985994092818887835029010769182026556406255395802670302001584719339230623225473328638803426592074341527904834947548806667327880859375 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1563393515993281419122696218620450611847247938763575955740795156693481392752650938501490911718340293926096341523788276848348675657780840871509127013603264208552073517020056356626998975894755557732551640591902812055763696185244484870917098477692738857442698336071972470202632443883262259346427379819842667917089713535035463600306965899384981089070834059384651482105255126953125 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000003289335663251832725233626913566937308875487227525117210706752019660190615316352488711999744033056146520539544057868248327697390565299218080544838822212585393993999972788141607873778983123369378211678625711266991900310998747663273121323168849092631919728066792930723152698688895538371815737626260753053464286495676211426068916849154255491209552711991467849427618702857674171891064150413034091297564464675196215380352322144625396045404227021154769668834760062255888678739912071809579776904229596917340638898706805968713750208789613614971912595679236125792717317029159462236887775597455833435875991633269824892851907138009354110672706464541838189408196058138855732977390289306640625 ± <2^(-68)]; dctAccuracy = bits 69; getAccuracy rEd = bits 68
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 135
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.1563393515993281419118920265297681591094867396576832426326025420193056733209030508402980230882426126897755903218467634620853570751521271002503429594649218410148045951746352334686834920394911110936576880668860253709129802218394416248470997677442457050476880790297540543422426165714949700126504837820698081989999399728270162987836024590383689269282346934964440578496859875423819675301072990638927836609307328270059603771116253209043193972416219139631721191108226776123046875 ± <2^(-135)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000143368571885731128924132245604313611538902167767507399519029825417913159863823951391912903621146595168496027579150736416836743833401594121033697145201159968172528483341442091644845968765235705963982038513388642335037797817519571161475780256768955318186291863236464191357077968547173441038466989994049072265625 ± <2^(-132)]; dctAccuracy = bits 134; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [8.59644327058342651648800607149226232873485815341846727653787406366032819218626514850520808524243435598136328431727488930125247179603320546448230743408203125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116327179569944586960649990648892378758580790416882402131330808705563075593878019317635280393805080460510617921148899373653854091990582044341115452752273283933009541302377585332537319956540207706467410879402419185688205016253499568405060645142833418601788680999371173897494320300345557965017065005686354439706775565355201251804828643798828125 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000039789901639911572370351495721071405959282842547673164181993692293196533339980178920008745131571746020359115864378965104319638410087900876673937393195832695235469330365616411861740098896948587610502819626209889469472101654899765758863585250931495854298677875176538357796473293983798337081210739721905983308268990518342439494854430017546596436157667006562140493488884555734278469222803466281515233962800218646799689094379338750947289350332331925174906246330764833980049553443719595351514481833698177596945378539696640494968689808163778740623247793719350076524911112574311999878773349337279796600341796875 ± <2^(-71)]; dctAccuracy = bits 73; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 71, minQ = [10.2412842687676404142432082649060969915284400062899725907078099163439269754770182467942033665890634066018153998619562473679428226981075477914782912630520890356525060885996919580115331919881451415953177441764410104951821267604827880859375 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.09764400379449017325908279620718150097007027118504206686240703795697473240032222837365045693451840716825053498821253611145648016609990711043698916835688627580039990012292363849475857187227357134731602416946180088673794848439361456822130985881865868486272288296772688312111544483731410470267983896549838928403460447893560696122067986184638870993286741128969197234255261719226837158203125 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000001272614307856855932203517337255163305231568803585877171430898554173528207670142210128366652678904467259233355420657523535926338123098662437658490692092504101045651274567547956337730119128219682372502860225402249723531240120764866094775994671420560772491432869923566801619215483423682834516573333381943331409363262232077781837296696988746673122977880443529029040359045429966143638936893815141543351852456365036669571720396913954746039215765840868361191937346143329313612942261850083509759352910997905745184296730504135326744531716121240586652308904667498767835583225697537220966837893480750399662903819125963170928299710591479624905965260288289060686128806310080108232796192169189453125 ± <2^(-76)]; dctAccuracy = bits 78; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 73, minQ = [10.652131360523767597208157355935252454573416776206025818344234212185334123971526684943257350634058306057131752133510481372891121054635732434689998626708984375 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 82
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.093877926037032065313237076486211089478986727662032958658111725160442421307176967998622352991055378414772652667200128227713688191229906723390213576166669693487760633723004798709660219829422666499062482553699406291993501028492904813375398819192806718523806894696115457013547504182677499493485834663523948045104654482550706415982713840605439585909303442325415616862204079925019119003710145245888076936410683475179077686413706901149658206730143801682283557231660663571680114813560810048845572967710376310728682849697512846631752836401574313640594482421875 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000319444706314374662302652196723678548098214203927303840295865816413252577111216623875140602270218954561402765918755282897067279204688456831439860443740722464291085035654264870596834542945552894219946107139685175388085398503056378098595264294727031073496026400817792631917139482558533385179846298728298375214686500988558654795645791955953082241864965866272702390974861456067816971632030121624376725065744340799203054205115109060500236444534925399613606944405742384596669547953316587760462824030466216205810884335660261536116031297306441817787317369354776565062214240160731737461219381657429039478302001953125 ± <2^(-78)]; dctAccuracy = bits 80; getAccuracy rEd = bits 72
chebDivideDCT: acGuide = bits 71, minQ = [9.33027612167868759659962018976865154490931271446231574009005785676915873791914368872441422764894863698058062764118750177968691690371769859496578851046564282746553775638176375650800764560699462890625 ± <2^(-64)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1071779641844170503385778821291763392290669543688305097507559737346079133404804883345402998514468710408730759110276734287486084402660156444785441400040947464515265887139144753256182061312122303154622995389430716394619053862372690075896904139536436102241051298328287163833441820511860955018416468849241306479902190439630317369089585017421160086832329373724752925129541213952340522403936046228287570344573545822066806214951784707200399424490069294066625901713876645180223681984647820507399246979174518015932270515321072089804721243582328711357995929205038628951865602121556363610762225929167097172867162413467667647637426853179931640625 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000102785712563159333009772231855365272823606132525609574700391109147843122639795834816366961704088641684730967622642507024558261068239801413293936251888467113678733985113687903482616904284359364823850476699491960351171752440009486986403337253052671830544549243134388511104836842784473068374130245222498536472422239992421315672782529516821522835736056612868519699776249582915108681935056838573184938941884514814015546976766008691042391714524948908831226911913758481993223163486414958022725782087341326598676178928313963023066406884669665486131116132942024359529438199115347292637240144661306680139294443607919440359384170180176198319952000537918536393622304103701026178896427154541015625 ± <2^(-73)]; dctAccuracy = bits 75; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 71, minQ = [7.29622770138382693213773018385349121546156072962860808151331482155863168860283447400919246442599921864180834271936871605890306824448998668231070041656494140625 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.13705712608315892576732480333431759797523125590291282794772790696218454533318562625228236681536784585618405294939407503390896349171154120519020310054988655651689333029551185459967476274765416289664157084405085140368009948170369491469711990175356041614956837006218270109342361075318359049962171003969166190037348715712584836709586031007555969752101787324022392681101207684627299961388393648056810302790240789907081932904010842210948574777433525732229437455698236199679198986921262609929690784397630530116557085753246914006098222671425901353359222412109375 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000159919779858914114457817663524558524924901753566201570913900833437072020773965054712830052093795531208931672494172703973286375535334648183810540250215972211807189643656070158033876612483449796614607268728972057637091100063991672032205930817547949860487401446375398099156394989694026577441940495599966162679859774575341274749078215872332840059501655137023545764165840311427258898263880419571055981232850442469022395287453691206746185843676141734655254979569720853207008680118662829469661900956608351117247413392418540955860518235498604310851525066813901435687668428631269534889725036919116973876953125 ± <2^(-69)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 140
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.137057126083158925767178282060988907624530562471956216498582127639268703616761458073756359053933521551716659933157474015265521860212074951356523394654245389901746221296141448510092968259168249591852746399813971301288933267133547842990492443137428195926737964287300366471504023041295929495305786578141018944444680226581370093439588337277708042456322751299486938321924336385275861788455239509248384234909407859586668983148254849329803524631920494624982056302609757065263053934150591957486589975838970106899091418997720000165243146885403291986577148349930486614854205327658398148003848771026014219387434422969818115234375 ± <2^(-140)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000004877615753329302351159861505652669797669475877258247225505691855092243989363581038489472334823336832213275082714769014154120497826459110082009195825510944985073318129780640990164004358759410433189433429675803777355169792186704615100101278812871896661818027496337890625 ± <2^(-137)]; dctAccuracy = bits 139; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 71, minQ = [4.9849756809062444991417599771507756033200853314697449583186222482984910832860487761271067903796641100803832062768525782430372765595868581328385731366908926848237619718073876384778486681170761585235595703125 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.2006027840477257514761165814223373433330709622791717181227881054668057784192724647146386784162375732782687592429405777617175663418676703342727880335909548870067306939695854554102955352380060154317825333259746388458842505764250862435805758636166475282677449537960196007625604615730255195806257082971217601773348505647240269349315137111849688657307899021980980253073432883746884889785702998076436135605561582133718445120701919169688249429482627545980407013542983098945324893670935140384931584794233404780990311482271927869498225213115666498559082578558168041145121386148820658834335043183892221922703935632625871221534907817840576171875 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000005020714050113629134410522392515874182315158368142965710385374202462891411720425153251250085080029005897299813726304634857789820967170698559336809923265521091883456328379298765613365974102488874151632047705280367842002254733006986904410137828555050447666805900080145222051996306369306037981066176881115225509816848771072375410844046457947209836274961731267301858944560272226383908837357811876368244108080476234789499279733787557387943177090346218807442689224769006108456406063361669659804554615566596350975430882283028077053550692180854193388497632367860696050719531822614543188373590378308594539029970858581857856630755516326453989184135096035532797031919471919536590576171875 ± <2^(-64)]; dctAccuracy = bits 65; getAccuracy rEd = bits 65
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.20060278404772575148134446629364556942578951238473384343857973505345782161841540385260037787715309004121476668250442936653529074163655437312813279639899212593294420229391192063715731722143893570559008287361529768681340462703879365930428634854994405142536256839911717807301662284587387510446784692679767511315582231878315682956058096026791833851007171590157846641914348425045052177801670253046415516059380249787383654602713916515787302895781983834354306341295636897402859288279660381915591516903579253857801628065235007529823819921185786529592261798977043187282511948518940781794859658387200316227250196597850223805842390270092582903465390594527161320276861626588082998523532296530902385711669921875 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000301568664443440503212438623278107638316245154046451835555330167513742315225726845193550380449334569722826891973177314399774057959713184564066678155022351107574725387037938010182760663196137300662664670945932071370559755313057730129052864472974328368687365762581829354595230885394130382337607443332672119140625 ± <2^(-127)]; dctAccuracy = bits 129; getAccuracy rEd = bits 70
chebDivideDCT: acGuide = bits 71, minQ = [2.8907907661736029509109069775733266559337914385190056109366716447989964873533254661803297998668214775342717934845417071532125419253134168684482574462890625 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.345926108420378912218082469193378229603114575368339103139095965445625170162777814900298853277182212521729228643224256379744583401000292893708307729615939381457946442105755718512049541564425778053219546181377821158063852028904800579155426397844093490160305555461003814800280907460457520191298310105047466072168614441385623869201184964204794764163194631829736778676813415737329459995303733902436842337369890157313610184058218133340059056144789480296534648136971382993438850567434844884892591216774627062771206749414165670941656571812927722930908203125 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000032658048296111187615185556949621426429814662241448401296977433618644975433927636394177859900436021467697125118589360208110899717601864630862111809210836184278587597457328466867364358418304338180837328737591823636812030446832812983177539527498955482563686604306869794405079071793190068450423133231403258429227456719458914192275732274146568038116998858430951402423779309185280839084702695293900094955712299384462668291517487337275994621865521914838548035285457056819043450885078224844742465613037015430910565866442876490620557716440584279294257093184672413599400897510349750518798828125 ± <2^(-58)]; dctAccuracy = bits 58; getAccuracy rEd = bits 58
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 114
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.3459261084203789126054989022166249084178903322672841499618920203275149368702304821308078014877052312939146441486138205567742446633392301533945653041966028738582007495153371146466594181230388292464072501907493378517860559610728870352818946595202279054412743329765358848335447271693234206384316283220143263751631239912552225577476509679012456286250325384228504964974011255922515071536875036576555473488398215130058103640335193334675196286818325972601102437435953104905287675238733981675685744962636746486419709419308085251844335005014917113885095828657585482179549078151910117273626354972293484024703502655029296875 ± <2^(-114)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000001842971807107025841026250322750469336640890876037073858656270273146702277489987968465567065986970636290661792894576055905334414061247754697443295779661791461666144436404199263216798362918734919212135490481703674262443820342380760755017499175067996475263498723506927490234375 ± <2^(-112)]; dctAccuracy = bits 112; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [1.4615229739634231640415100329836805774566962672579989807518504690539906306848211950907513802280300872964387850121409371649558891724313692248095860788587965523217804264533015157212503254413604736328125 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 49
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.6842177768086354645661342614277460274574638399574051365330055192455577220717755618624430727776509217838837638392496221225881218373256662417172103145614596198033068725512536554833494394329894528760116818317577299259389476499683639039127146931502918128084781901238065075173879182453308282857449392454080713375886769963030085920699509517997256251679391267157437103683441429521011412078624441855673004398702245213979125439848647452161663523487263955287145609383019465052410544830056057691643876698511105371843475061656523079387266523918485886662067435321151347974458454708547725274413820061481135426095789853206952102482318878173828125 ± <2^(-49)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000032438220697908510688790089713475007833789498624858407302495801497211475031233402427655820883443557184097771120566436188575376369519624105884395075183119205334988928899526727628328986472522376228283988395808473840411135646513737157563464472676798155328126874979441932021566682500400580346405613789065403243126437912039835692067303748702496133490112673098668125641377249049298379985872402833869055035252677157843609255480274389854820993139902176774451189630206354547230681496344079761785269292183700967419335003432511284356222689724707888305397704720104153195107522972508681063546331154761488762204357960686536929098777604237556493327332418630248866975307464599609375 ± <2^(-48)]; dctAccuracy = bits 47; getAccuracy rEd = bits 47
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 97
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.684217776808636414484588317546591413808089946637295796466841395901869764932304067671104635370674928011021123083689266373000921090223995314500570654102107974786121116902217087553061553862600319982429489851155243155958429853897688396757431783982704873372188600944500658340568076130046820832396520945987599551012622848638838848668058280558714117085049923186779643083242002639127292826806725378843986953344782723422587845571577224419969971125290333595916498808116290014676844818279849094830770970820920222232726862784976612473489474607022042804106352829797709738096538908465785124293637383426709238248461493694113096954425005641311470324974956493733683796326476567184471377913723699748516082763671875 ± <2^(-97)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000002212346492394095590155412089292079165526567512398498615018404452715420364747112322222844114602989826992349479401560233491322143281831632079373885602654509169425492781954969619252996195277029421082663240774014321482604799135118469022234992061646002090266839722018074633385421815705762533367697958038357152510390962746560534215155660554066406485396564982097850260974494222544556467751691684168292479049894543746347347909741230724925793013837347718779958721846883975881472555970422494575546783751502030214577612864197807901363507116908688395480839601992569517402326023103723866494029025563558961232531739400225934710509053270224219064251461072816544133791868528583453318151304654050917515101627355206986547973973297859557490298298976227897583157755434513092041015625 ± <2^(-95)]; dctAccuracy = bits 94; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 72, minQ = [0.9999999999999999999998093499652754373938771002807094209686514888187723241831292105157271006659682274046187754057424257325692451559007167816162109375 ± <2^(-68)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 42
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999805986042010430633736268827877963592360451729579679176254676388502370438087947820916830430578433101525325773851774421312776464289212179694396430308716521311560593004266670572827257619699921412210245166729312679674868050870274712884976524667850906629228740393476212074679386097561472088635086096885278527580081049142714533332639213592806637542506341748762226777366427633923688362217739400686821851777485432747871492835747305675452061269540907184289320567674205996117008683486305086519175532879487311443966746082878671586513519287109375 ± <2^(-42)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000407493303261193417784281039646308201710807703155230433630237098126107678332397537074114295377601367254257074294511348150506213710868078855431029100616584839556705293479458277584631702341869673388237806471425416788867339111872061120852790609035059223489024114086366345915360551717572020194210150907504563052398546051168847970295103732282422290812276981765980221145826405662170794285335950765101343419681346853970656691173216938390889483797886865754172723558711632179249144045491551989344183414387681793479969405187709652805170030425742366819719109116704203188419342041015625 ± <2^(-41)]; dctAccuracy = bits 40; getAccuracy rEd = bits 40
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.0000000000000000000000182457735061987658887430129515086411885509799224821870526612434695633506325869107945002412981781118288711827690473368672671335703770712087455097001730963165977426137390481925242455440711081628717324422113909433468123371164896832344964533001184085758734852468165876407954921304170884434118189066648876407406957518747307313876617421528344870672975362321807695993075026689531659255361008985296715945158548041578726399888746071357411136720298281969066461717905068231896194605020150912891546588556687533840152744268137411947671130036988197620883756411465370650404338448424823582172393798828125 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000001991379808766166891152787000240813828809666200657147896709387439183881512520638970356252757701778278992621171451655194077392378017080950340584606048445854957295880409428287566981514867889032138345141390595724680102638167653419485411765028037884874265641485392725129279298955737470887112727845532849776308053987549144053832822488365815261904048485732227162593839475035198433986083369227663503667947094456554606640876471939404400272042760378435049114962560542729288966436879350609978019018051207353484593371190557885164459521521795717263093821935608802290967461778733855671591864443162764393423708504434701665688972849585142819322548801697081444217474199831485748291015625 ± <2^(-82)]; dctAccuracy = bits 81; getAccuracy rEd = bits 68
chebDivideDCT: acGuide = bits 71, minQ = [1.0028270724949762139432983111511155535729928117843456606304870940977388385360328718447688606085761641644603579768832182888519405173446903088123661752444158185551229905309056904709186552932796110642992004624574065019260160624980926513671875 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99718089731263288633858604852776053170331087144227317777306369602148163425812973587308561398595878896831076325392613215617137076642536749797560886125378482585910321995949936588614826123646006455357239867678494913311812080975282673560598465617245631990820615737459015596716800283205159398345761890561641449662184087145144761876736083650030195713043212890625 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000002205717595610435038934508454399634335973644517110048707054280742824958722542925507567452345843690391614645410806387997691757391010270157178940268266544629227938020974978087537234379220574036169530257640504670857518690258557896331217287505667324835158815665760302418947731664499736418049106510195972019988399262560636437727553295730742775827355688395669839998269877223001943318652416323074516673847558334879597325101619768461591865981609870202640271520825132076923609180063244920024327125145280221463620327528154991975473633974912333895549332152354208557892589766017566414086487501778050829089252640520413233888164159760165994317304694050108082592487335205078125 ± <2^(-42)]; dctAccuracy = bits 41; getAccuracy rEd = bits 41
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 84
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.99718089731269158919513389939986882076626049770880303172253233307165261224054439662018982793704320806625920901832855956310565096460798141885800419961464270592951784415452382371420428440985658281408559071053473164259308736567871389813032974352567834644698929915341809997982590918942181032134108947372108116106552039067780658408210638395034842660158541960311821672991037693131657246474529136814890506457231822423636913299560546875 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000001008415777282196016940555958245327205716424191687046497443181837476651135473030356881341055064376475305067817094497362191063980098626043731223576710528961711913937823163313754773193624493001303778286434952702478324892298609337864204542634139906942813576283110029423950359775229281343547608990429519692236803599950988040295798477809014508365802710877534143651381641968004379639471716275468180617947201478105957689496593083920209224334747403192058292346476737858635091037351593189700482485728627892831901884305318516110067355804218095620884728456450335115215620617481904750081681912442273631013615558568227963737817367381291706578864068846003194086652138448088955749840249437190257210053939925182599506357590651828802508216398337026475928723812103271484375 ± <2^(-83)]; dctAccuracy = bits 82; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 71, minQ = [1.6127970580162726486515536480858969109560503182494947116837291007409555361669903240925309631094948394581517080344224002175224086386151611804962158203125 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 52
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.6200408135850592683696242142353287076212409963708804097586762896860655613753610870087999782348837498912568784120002346026586395306979145873944732646392965199569694447857893223336437224404807661439537730386346936588366287883446024987298297121966318628853052481823162022871352640381037435446387462434358894824981689453125 ± <2^(-52)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000007248511766060457499251900246349595031317672782822200317186745237064669139900288187789799031242861023917622036759950320127345809056575254627960785609630144200475999975434461414352265306708058035260863973181089259138095627461722706250559036998131860174611144430413563439804692971798919328313023735078162198480945404807049244176748506641214776568153282986964889120198206620988608908102815921902693812009700682182724055362575873614459543475700422474538282989705923771416235477196495352136571934118842976483769330367589487961525932553072140189444512448080359945379314012825489044189453125 ± <2^(-50)]; dctAccuracy = bits 49; getAccuracy rEd = bits 49
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 100
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.6200408135850594375841874072348598678548103164109910841200916669875239683805635997325109610364937524527534859289626049621801272474285855352564669542822449790057498105967348298405750655328935968780018335903750111540674059206549857115381016530951764481557792871157335747896162224744616337703848009773846263518955866389398176504629287639325004777816041141128857415443231815288527286611497402191162109375 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000311271663654756929947599473301611230355626676938188402940990375794009740126968655831032005935522861622902755858037701779774742045366313477787032706655205666403440848963305264214462159600093054711963734079007934367963112717677430090868951989452585215656136253191161753834024082260440961957964352656232571620247506145295441339462780855985640875186105445522710397285891920733385999125225959284062872904346605751858779263431307544291325984824854689452174520847610268889784449876649655112523272078805280422642715822237591452422387404398768011269357602316447898564104676037194049352163988328830171671764013770743560561594738847001120187488743527338963534845106551074422895908355712890625 ± <2^(-98)]; dctAccuracy = bits 97; getAccuracy rEd = bits 67
chebDivideDCT: acGuide = bits 71, minQ = [3.1609883521485343211729716388575986074224793399847304479545599593963216994400672032425449718556984075685655698671950038561648050617508374146216789217626143674579053652701322317770994766777033303036155420517872016716864891350269317626953125 ± <2^(-66)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 60
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.316356749407284802085364716501273061048333224634048786321936823649896623416968789312297583176265025960263573168775002079542741155200978926809412317674270105316485253203942373075332433163502916438169761308023600659726949106166522037922124789234066906214269084591836598827728794862903791869038371277292675269440777133224545233751434647473388395155780017375946044921875 ± <2^(-60)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000335843651993535674878890132276703723332512196524439420115518050941422315886505412786802476856838211025122755334289657113622726499807039273613732872055760545430015546012193467946779575127795862606356371182187295413893416299375863155224752089066617008496457832735510495846681320414584272249738484003108805881691954698466625174078849179912959513022734175893365822226297672984708280090596576497968516416816947908993466631064613073017498764175703674189997100270699687287618199822995508468898101379434622809837908200244226396297771829962584505845465822796322335766923797368657979493016037745011387180902717011928472475554761666193217986391139628921109760995022952556610107421875 ± <2^(-58)]; dctAccuracy = bits 58; getAccuracy rEd = bits 58
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.316356749407284802604138496358158863391170689418442047523631996049220423124913287351603388655387664461866145354678360163323137972461247438096777042384526809437023670316771141352392216195502608200850999803936766831674458731890779563659068837012628768285533323772973801662237833426914836764098035576610917226640879353536621678739718340077697722643323281641114002107625463045331840029472235746311459919048373217706875679990086158710482777678407728672027587890625 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000299286543902525677939804466993402373470420116100003184916016590234173294673071505663310913420031091317624272472337132432311013511812114434686750501378602682132908967046444552561221931279583536476079519760513511848564467170637566927615486343736756919404242483891509819522551427706247295645880512893199920654296875 ± <2^(-114)]; dctAccuracy = bits 115; getAccuracy rEd = bits 69
computing integrate  (sin(10x)+cos(7pi*x))/(10(sin(7x))^2+1) over [-1,1]
result = [0.02835536579762054920646473219402863584363659127991285597889653270890912182096460724852382569299833895605124761899208215878042975016847101367805724158579330967123180250184743145454814115995720622277212651486883671989605891363298876980028800335989774429463307429057827779231001803492575522442574261275470701908279409262001894223674910067880598219343002286400741374860177376323337852446157385792369064700027747158443544082111292654324273905396481325796631061257103589694887594076665026996454439399923139526403336366176813125425128153684001514651665092593346724026909579922892814853648650420197833952259164120275801067435002110068609227672212965036971894291706265851804591449081272003240883350372314453125 ± <2^(-62)]
accuracy: bits 62
precision = Precision 696
	Command being timed: "aern2-fnreps-ops integrate fracSinSC lpoly 60"
	User time (seconds): 487.38
	System time (seconds): 1.42
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 8:08.83
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 55096
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 425633
	Voluntary context switches: 1
	Involuntary context switches: 418
	Swaps: 0
	File system inputs: 0
	File system outputs: 424
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
