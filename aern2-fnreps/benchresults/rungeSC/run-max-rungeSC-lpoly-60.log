numer: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 5, minQ = [77.3671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 52
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.29253761486416582574211654034e-2 ± <2^(-52)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.58339637741856249068135454708e-14 ± <2^(-45)]; dctAccuracy = bits 51; getAccuracy rEd = bits 14
chebDivideDCT: acGuide = bits 5, minQ = [57.0546875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 53
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.75270436806790811381985830904e-2 ± <2^(-53)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.60102927767159818225526503213e-15 ± <2^(-47)]; dctAccuracy = bits 51; getAccuracy rEd = bits 14
chebDivideDCT: acGuide = bits 5, minQ = [39.8671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 53
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.50832843425435062455016840544e-2 ± <2^(-53)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.00470003580871993130981577239e-15 ± <2^(-47)]; dctAccuracy = bits 51; getAccuracy rEd = bits 12
chebDivideDCT: acGuide = bits 5, minQ = [25.8046875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 55
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.87526491068725149860406367683e-2 ± <2^(-55)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.03908966526336908263357896616e-16 ± <2^(-49)]; dctAccuracy = bits 53; getAccuracy rEd = bits 11
chebDivideDCT: acGuide = bits 5, minQ = [14.8671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 51
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [6.72622175512346431619461059896e-2 ± <2^(-51)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.65381533643554155190115847086e-15 ± <2^(-47)]; dctAccuracy = bits 50; getAccuracy rEd = bits 10
chebDivideDCT: acGuide = bits 5, minQ = [7.0546875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.141749723144994257468553935710 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.75774605385266099205284933982e-13 ± <2^(-39)]; dctAccuracy = bits 41; getAccuracy rEd = bits 7
chebDivideDCT: acGuide = bits 5, minQ = [2.3671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 33
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.422442244109968785538605238806 ± <2^(-33)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.37576826684644416716717000242e-10 ± <2^(-30)]; dctAccuracy = bits 30; getAccuracy rEd = bits 4
chebDivideDCT: acGuide = bits 5, minQ = [0.8046875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 31
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.24271844632388178719212109062 ± <2^(-31)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.20993879152637827838008163468e-10 ± <2^(-30)]; dctAccuracy = bits 29; getAccuracy rEd = bits 1
chebDivideDCT: acGuide = bits 5, minQ = [0.8046875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 31
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.24271844632388178719212109062 ± <2^(-31)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.20993879152637827838008163468e-10 ± <2^(-30)]; dctAccuracy = bits 29; getAccuracy rEd = bits 1
chebDivideDCT: acGuide = bits 5, minQ = [2.3671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 33
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.422442244109968785538605238806 ± <2^(-33)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.37576826684644416716717000242e-10 ± <2^(-30)]; dctAccuracy = bits 30; getAccuracy rEd = bits 4
chebDivideDCT: acGuide = bits 5, minQ = [7.0546875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 43
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.141749723144994257468553935710 ± <2^(-43)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.75774605385266099205284933982e-13 ± <2^(-39)]; dctAccuracy = bits 41; getAccuracy rEd = bits 7
chebDivideDCT: acGuide = bits 5, minQ = [14.8671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 51
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [6.72622175512346431619461059896e-2 ± <2^(-51)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.65381533643554155190115847086e-15 ± <2^(-47)]; dctAccuracy = bits 50; getAccuracy rEd = bits 10
chebDivideDCT: acGuide = bits 5, minQ = [25.8046875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 55
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.87526491068725149860406367683e-2 ± <2^(-55)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.03908966526336908263357896616e-16 ± <2^(-49)]; dctAccuracy = bits 53; getAccuracy rEd = bits 11
chebDivideDCT: acGuide = bits 5, minQ = [39.8671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 53
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.50832843425435062455016840544e-2 ± <2^(-53)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.00470003580871993130981577239e-15 ± <2^(-47)]; dctAccuracy = bits 51; getAccuracy rEd = bits 12
chebDivideDCT: acGuide = bits 5, minQ = [57.0546875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 53
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.75270436806790811381985830904e-2 ± <2^(-53)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.60102927767159818225526503213e-15 ± <2^(-47)]; dctAccuracy = bits 51; getAccuracy rEd = bits 14
chebDivideDCT: acGuide = bits 5, minQ = [77.3671875 ± <2^(-2)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 52
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.29253761486416582574211654034e-2 ± <2^(-52)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.58339637741856249068135454708e-14 ± <2^(-45)]; dctAccuracy = bits 51; getAccuracy rEd = bits 14
chebDivideDCT: acGuide = bits 10, minQ = [1.0 ± 0]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 33
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999908835237405841712698 ± <2^(-33)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.01133965649259015194889785418e-10 ± <2^(-32)]; dctAccuracy = bits 31; getAccuracy rEd = bits 31
chebDivideDCT: acGuide = bits 10, minQ = [1.0 ± 0]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 33
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999908835237405841712698 ± <2^(-33)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.01133965649259015194889785418e-10 ± <2^(-32)]; dctAccuracy = bits 31; getAccuracy rEd = bits 31
chebDivideDCT: acGuide = bits 15, minQ = [1.01627052843105047941207885742 ± <2^(-12)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 59
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.983989963325838622775686625957 ± <2^(-59)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.37109592888655366165618153621e-18 ± <2^(-59)]; dctAccuracy = bits 58; getAccuracy rEd = bits 12
chebDivideDCT: acGuide = bits 20, minQ = [1.016428530216217041015625 ± 0]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.983837004051113829068050982363 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.78826819571441205853831432066e-22 ± <2^(-72)]; dctAccuracy = bits 71; getAccuracy rEd = bits 71
chebDivideDCT: acGuide = bits 40, minQ = [1.0204313813128145782549438536 ± 0]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 82
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.979977701894536981593093056962 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.0645010237012905464927017746e-25 ± <2^(-82)]; dctAccuracy = bits 81; getAccuracy rEd = bits 81
chebDivideDCT: acGuide = bits 66, minQ = [1.02057806130781116317176412297 ± <2^(-65)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 108
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.979836857083287113010582134655 ± <2^(-108)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.04295623732853151727641150554e-33 ± <2^(-108)]; dctAccuracy = bits 107; getAccuracy rEd = bits 66
computing max  (sin(10x)+cos(7pi*x))/(100x^2+1) over [-1,1]
result = [1.07156087129067772231349234791 ± <2^(-65)]
accuracy: bits 65
precision = Precision 414
	Command being timed: "aern2-fnreps-ops max rungeSC lpoly 60"
	User time (seconds): 1.79
	System time (seconds): 0.00
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.80
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 13396
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1030
	Voluntary context switches: 0
	Involuntary context switches: 7
	Swaps: 0
	File system inputs: 0
	File system outputs: 24
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
