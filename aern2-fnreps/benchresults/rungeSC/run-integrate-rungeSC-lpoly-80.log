numer: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 87, minQ = [96.0624999999999999999999032392 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.0409889394925178919973985762e-2 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.60032866669414866137097260149e-37 ± <2^(-119)]; dctAccuracy = bits 125; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [91.2499999999999999999999692004 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.09589041095890410958904146578e-2 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.12675332076146429074395824476e-36 ± <2^(-119)]; dctAccuracy = bits 124; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [86.5624999999999999999998775966 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.15523465703971119133574170575e-2 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.68251482520540329587641053686e-36 ± <2^(-118)]; dctAccuracy = bits 124; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [81.9999999999999999999999406756 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.21951219512195121951219600422e-2 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.53052099580738641750860476304e-36 ± <2^(-118)]; dctAccuracy = bits 123; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [77.5625000000000000000000002197 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.28928283642224012892828363857e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.83291781205480657747199068257e-36 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [73.2499999999999999999999156469 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.3651877133105802047781585687e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.84532087878076983997898578631e-36 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [69.0624999999999999999999733363 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.44796380090497737556561141875e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.97130700482910501103728144096e-36 ± <2^(-116)]; dctAccuracy = bits 121; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [64.9999999999999999999998941402 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.53846153846153846153846404401e-2 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.38471969058675171346437590568e-35 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [61.062499999999999999999948941 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.63766632548618219037871170714e-2 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.14703887854099989811986525764e-35 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [57.2500000000000000000000002132 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.74672489082969432314410479698e-2 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.33834778349491213328194891861e-35 ± <2^(-114)]; dctAccuracy = bits 119; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [53.5624999999999999999999280546 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 119
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.86697782963827304550758710516e-2 ± <2^(-119)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.19095543685582282907776489255e-35 ± <2^(-113)]; dctAccuracy = bits 118; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [49.9999999999999999999999772654 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.00000000000000000000000090938e-2 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.03669275621756597578220321631e-35 ± <2^(-113)]; dctAccuracy = bits 117; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [46.5624999999999999999999106838 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.14765100671140939597315848203e-2 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.22977812709500835578003510627e-34 ± <2^(-112)]; dctAccuracy = bits 117; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [43.2499999999999999999999572128 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.31213872832369942196532020647e-2 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.83561504538229752580455602987e-34 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [40.0625000000000000000000002132 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.49609984399375975039001558733e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.60350241905078880659901802011e-34 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [36.9999999999999999999999404623 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.70270270270270270270270705168e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.2944209856612066915209667733e-34 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [34.0624999999999999999999811945 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.93577981651376146788990987768e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.9790673214826476481026048812e-34 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [31.2499999999999999999999272274 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.2000000000000000000000074519e-2 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.52411716903059663222494002071e-34 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 94
chebDivideDCT: acGuide = bits 87, minQ = [28.5624999999999999999999653747 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.50109409190371991247265194665e-2 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.89085136242657131302524449265e-33 ± <2^(-108)]; dctAccuracy = bits 112; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [26.0000000000000000000000002132 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.8461538461538461538461538146e-2 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.50905182137425333541693791284e-33 ± <2^(-106)]; dctAccuracy = bits 110; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [23.5624999999999999999999921571 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.2440318302387267904509297946e-2 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.42349942975924136199082541288e-32 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 93
chebDivideDCT: acGuide = bits 87, minQ = [21.249999999999999999999985126 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.70588235294117647058823858799e-2 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.4438156973170383947336733852e-32 ± <2^(-103)]; dctAccuracy = bits 106; getAccuracy rEd = bits 93
chebDivideDCT: acGuide = bits 87, minQ = [19.0624999999999999999999789222 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.2459016393442622950819730136e-2 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.46566606252668688913627654509e-31 ± <2^(-101)]; dctAccuracy = bits 104; getAccuracy rEd = bits 93
chebDivideDCT: acGuide = bits 87, minQ = [16.9999999999999999999999735455 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.88235294117647058823530327143e-2 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.42961596124345895892768295117e-31 ± <2^(-100)]; dctAccuracy = bits 103; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [15.0625000000000000000000002132 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [6.6390041493775933609958505284e-2 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.7160607968690880783784085332e-30 ± <2^(-98)]; dctAccuracy = bits 101; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [13.249999999999999999999994225 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 101
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [7.54716981132075471698113536488e-2 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.16610874718820723537159812835e-30 ± <2^(-97)]; dctAccuracy = bits 99; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [11.562499999999999999999989262 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.64864864864864864864865668066e-2 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.23594261913904905329424876056e-29 ± <2^(-96)]; dctAccuracy = bits 98; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [9.99999999999999999999998512609 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 98
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.100000000000000000000000148741 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.38306190759299332216843015769e-29 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [8.56249999999999999999998181737 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 97
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116788321167883211678832364793 ± <2^(-97)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.04232294738576353967069089417e-29 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [7.25000000000000000000000008403 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 95
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.137931034482758620689655170798 ± <2^(-95)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94962024727591975190912526031e-28 ± <2^(-92)]; dctAccuracy = bits 93; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [6.06249999999999999999999631004 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.164948453608247422680412471310 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.56758631645134042162254554657e-27 ± <2^(-89)]; dctAccuracy = bits 90; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [4.99999999999999999999999341491 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 89
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.200000000000000000000000261926 ± <2^(-89)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.26869090139391672832810235618e-26 ± <2^(-86)]; dctAccuracy = bits 87; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [4.0624999999999999999999985593 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.246153846153846153846153928537 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.56469901108933271953941552129e-26 ± <2^(-85)]; dctAccuracy = bits 86; getAccuracy rEd = bits 85
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 168
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.246153846153846153846153933448 ± <2^(-168)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.14729556302870389621023275814e-50 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [3.2499999999999999999999962955 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 84
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.307692307692307692307692690650 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94252438453286241306248269966e-25 ± <2^(-82)]; dctAccuracy = bits 82; getAccuracy rEd = bits 82
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.307692307692307692307692658413 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [3.29258783935661353302024352572e-50 ± <2^(-164)]; dctAccuracy = bits 165; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [2.56250000000000000000000000686 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.390243902439024390243902903691 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.61603011677952697166365239739e-24 ± <2^(-79)]; dctAccuracy = bits 79; getAccuracy rEd = bits 79
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.390243902439024390243902437978 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [9.51415303073308994825319058742e-48 ± <2^(-156)]; dctAccuracy = bits 156; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [1.99999999999999999999999836184 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 78
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.499999999999999999999997986279 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.16187561138068232573961193943e-24 ± <2^(-77)]; dctAccuracy = bits 77; getAccuracy rEd = bits 77
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 152
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.500000000000000000000000409538 ± <2^(-152)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [3.24226423153942865596488136427e-46 ± <2^(-151)]; dctAccuracy = bits 151; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [1.56249999999999999999999908234 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.639999999999999999999988287536 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.71675742419141089570855685822e-23 ± <2^(-74)]; dctAccuracy = bits 73; getAccuracy rEd = bits 73
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 145
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.640000000000000000000000375870 ± <2^(-145)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [3.23326335684529193479652818238e-44 ± <2^(-144)]; dctAccuracy = bits 144; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.24999999999999999999999959373 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.800000000000000000000178864845 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.19147763483856425751208436876e-22 ± <2^(-71)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 142
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.800000000000000000000000260012 ± <2^(-142)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.98316942087359709385382732255e-43 ± <2^(-141)]; dctAccuracy = bits 141; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.06249999999999999999999990351 ± <2^(-86)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.941176470588235294117493424364 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.340496367954018775451634766e-22 ± <2^(-70)]; dctAccuracy = bits 69; getAccuracy rEd = bits 69
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 135
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.941176470588235294117647144287 ± <2^(-135)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.10576034729046897954324843299e-41 ± <2^(-135)]; dctAccuracy = bits 134; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.00000000000000000000000000462 ± <2^(-86)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999999999996800953103 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.43335138179811651930258117121e-21 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 66
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.999999999999999999999999993386 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.35185085652006557997469917474e-40 ± <2^(-131)]; dctAccuracy = bits 130; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.00000000000000000000000000307 ± <2^(-86)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999999999996800956637 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.4333513817981152692431225864e-21 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 66
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.999999999999999999999999996920 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.35185085652006598780622842465e-40 ± <2^(-131)]; dctAccuracy = bits 130; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.06250000000000000000000003594 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.941176470588235294117493307058 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.34049636795401871772062833059e-22 ± <2^(-70)]; dctAccuracy = bits 69; getAccuracy rEd = bits 69
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 135
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.941176470588235294117647026981 ± <2^(-135)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.10576034729046923443795421418e-41 ± <2^(-135)]; dctAccuracy = bits 134; getAccuracy rEd = bits 84
chebDivideDCT: acGuide = bits 87, minQ = [1.2500000000000000000000001143 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.800000000000000000000178531678 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.1914776348385645973507660065e-22 ± <2^(-71)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 142
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.799999999999999999999999926846 ± <2^(-142)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.98316942087359709385382732255e-43 ± <2^(-141)]; dctAccuracy = bits 141; getAccuracy rEd = bits 85
chebDivideDCT: acGuide = bits 87, minQ = [1.56250000000000000000000063331 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.639999999999999999999987652262 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.71675742419141104264537782328e-23 ± <2^(-74)]; dctAccuracy = bits 73; getAccuracy rEd = bits 73
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 145
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.639999999999999999999999740596 ± <2^(-145)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [3.23326335684529193479652818238e-44 ± <2^(-144)]; dctAccuracy = bits 144; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [2.00000000000000000000000042651 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 78
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.499999999999999999999997470111 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.16187561138068159105556022233e-24 ± <2^(-77)]; dctAccuracy = bits 77; getAccuracy rEd = bits 77
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 152
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.499999999999999999999999893371 ± <2^(-152)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [3.24226423153942904490333623059e-46 ± <2^(-151)]; dctAccuracy = bits 151; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [2.56250000000000000000000000974 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.390243902439024390243902903253 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.6160301167795273619646035097e-24 ± <2^(-79)]; dctAccuracy = bits 79; getAccuracy rEd = bits 79
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.390243902439024390243902437540 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [9.51415303073309116368586204467e-48 ± <2^(-156)]; dctAccuracy = bits 156; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [3.25000000000000000000000248967 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 84
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.307692307692307692307692104221 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94252438453286256915314439532e-25 ± <2^(-82)]; dctAccuracy = bits 82; getAccuracy rEd = bits 82
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.307692307692307692307692071983 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [3.29258783935661400779863081371e-50 ± <2^(-164)]; dctAccuracy = bits 165; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [4.06250000000000000000000579713 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.246153846153846153846153489985 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.56469901108933296219149875033e-26 ± <2^(-85)]; dctAccuracy = bits 86; getAccuracy rEd = bits 85
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 168
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.246153846153846153846153494895 ± <2^(-168)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.14729556302870413359942640213e-50 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [5.00000000000000000000000167379 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 89
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.199999999999999999999999931571 ± <2^(-89)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.26869090139391672832809751336e-26 ± <2^(-86)]; dctAccuracy = bits 87; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [6.06250000000000000000000559033 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.164948453608247422680412218812 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.56758631645133983868229134842e-27 ± <2^(-89)]; dctAccuracy = bits 90; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [7.25000000000000000000000001534 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 95
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.137931034482758620689655172105 ± <2^(-95)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.94962024727591931673273333639e-28 ± <2^(-92)]; dctAccuracy = bits 93; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [8.56250000000000000000000456484 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 97
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116788321167883211678832054529 ± <2^(-97)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.04232294738576424031993956797e-29 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [10.0000000000000000000000099415 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 98
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [9.99999999999999999999999005871e-2 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.38306190759299332216841559088e-29 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [11.5625000000000000000000161453 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.64864864864864864864863657214e-2 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.23594261913904915839162501899e-29 ± <2^(-96)]; dctAccuracy = bits 98; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [13.2500000000000000000000233097 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 101
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [7.54716981132075471698111879834e-2 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.16610874718820723537158299114e-30 ± <2^(-97)]; dctAccuracy = bits 99; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [15.0625000000000000000000000153 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [6.63900414937759336099585061565e-2 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.71606079686908770206140124017e-30 ± <2^(-98)]; dctAccuracy = bits 101; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [17.0000000000000000000000066327 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.88235294117647058823529182256e-2 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.42961596124345961578629059076e-31 ± <2^(-100)]; dctAccuracy = bits 103; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [19.0625000000000000000000140774 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.24590163934426229508196333908e-2 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.46566606252668699861270200433e-31 ± <2^(-101)]; dctAccuracy = bits 104; getAccuracy rEd = bits 93
chebDivideDCT: acGuide = bits 87, minQ = [21.2500000000000000000000223492 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.7058823529411764705882303448e-2 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.44381569731703812104250632298e-32 ± <2^(-103)]; dctAccuracy = bits 106; getAccuracy rEd = bits 93
chebDivideDCT: acGuide = bits 87, minQ = [23.5625000000000000000000316332 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.24403183023872679045092268424e-2 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.42349942975924163568193172632e-32 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [26.0000000000000000000000000193 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.84615384615384615384615384328e-2 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.50905182137425333541693791284e-33 ± <2^(-106)]; dctAccuracy = bits 110; getAccuracy rEd = bits 94
chebDivideDCT: acGuide = bits 87, minQ = [28.5625000000000000000000523062 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.50109409190371991247264129088e-2 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.89085136242657131302524449265e-33 ± <2^(-108)]; dctAccuracy = bits 112; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [31.2500000000000000000000182173 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.19999999999999999999999813454e-2 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.52411716903059684604611682809e-34 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 94
chebDivideDCT: acGuide = bits 87, minQ = [34.0625000000000000000000762945 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.9357798165137614678899016812e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.97906732148264807574495849595e-34 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [37.000000000000000000000039905 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.70270270270270270270269978779e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.2944209856612066915209667733e-34 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [40.0625000000000000000000000193 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.49609984399375975039001559941e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.60350241905078880659901802011e-34 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [43.2500000000000000000000647139 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.31213872832369942196531445947e-2 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.83561504538229773962573283724e-34 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [46.5625000000000000000000223532 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.14765100671140939597315333139e-2 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.22977812709500856960121191365e-34 ± <2^(-112)]; dctAccuracy = bits 117; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [50.0000000000000000000000928316 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.99999999999999999999999628673e-2 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.03669275621756704488808725319e-35 ± <2^(-113)]; dctAccuracy = bits 117; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [53.5625000000000000000000481768 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 119
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.86697782963827304550758291817e-2 ± <2^(-119)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.19095543685582389818364892943e-35 ± <2^(-113)]; dctAccuracy = bits 118; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [57.2500000000000000000000000193 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.7467248908296943231441048029e-2 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.33834778349491266783489093705e-35 ± <2^(-114)]; dctAccuracy = bits 119; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [61.0625000000000000000000773284 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.63766632548618219037870826385e-2 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.14703887854100016539633626686e-35 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [65.0000000000000000000000264891 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.53846153846153846153846091149e-2 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.38471969058675171346437590568e-35 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [69.0625000000000000000001093688 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.4479638009049773755656085667e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [8.97130700482910501103728144096e-36 ± <2^(-116)]; dctAccuracy = bits 121; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [73.2500000000000000000000564421 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.36518771331058020477815594465e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.84532087878077050817016330936e-36 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [77.5625000000000000000000000193 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.2892828364222401289282836419e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.83291781205480724566316820561e-36 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [82.0000000000000000000000899429 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.21951219512195121951219378431e-2 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.53052099580738641750860476304e-36 ± <2^(-118)]; dctAccuracy = bits 123; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [86.562500000000000000000030625 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.15523465703971119133573966349e-2 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.68251482520540329587641053686e-36 ± <2^(-118)]; dctAccuracy = bits 124; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [91.2500000000000000000001259124 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.09589041095890410958903958371e-2 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.12675332076146445779175262553e-36 ± <2^(-119)]; dctAccuracy = bits 124; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [96.0625000000000000000000647139 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.04098893949251789199739682637e-2 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.60032866669414866137097260149e-37 ± <2^(-119)]; dctAccuracy = bits 125; getAccuracy rEd = bits 92
computing integrate  (sin(10x)+cos(7pi*x))/(100x^2+1) over [-1,1]
result = [3.49198980894169348959456130661e-2 ± <2^(-83)]
accuracy: bits 83
precision = Precision 1328
	Command being timed: "aern2-fnreps-ops integrate rungeSC lpoly 80"
	User time (seconds): 57.10
	System time (seconds): 0.24
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:57.35
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 12784
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 941
	Voluntary context switches: 2
	Involuntary context switches: 48
	Swaps: 0
	File system inputs: 0
	File system outputs: 104
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
