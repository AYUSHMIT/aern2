numer: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 87, minQ = [96.06250000000000000000006399155097263808073034401974117411032549325691634326748879006405086418821036660113565377901264990154697807738255905018687923283407835189835481336023285002734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0104098893949251789199739683533765695709359543044340380320816875301228198201308391179762596580379833127643582749332266985344834251642212413415959866290779280798223268548130743909431169877909811455277444410208156549773970446492835667547241441330759918512636219970877269662326749548669651919754336165736606655408682839951878726749757101096120656071063611104620384397680605444444002587784353647481257065149965578161817878706162207355713187487005267511950092690094296609061680429801284438526569933858500425766223844629572449068798207171514247360022409338853321969509124755859375 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000760032866669414866137097260149164188205200117884557687043958009556723984255388206875915337992462912329679378087944535043882763788967900089971308234729775001018436993116095589085621117751205757316605122011522743807887536604539491236209869384765625 ± <2^(-119)]; dctAccuracy = bits 125; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [91.249999999999999999999968559866580882431510087774684050791898543909155940569083107207808662960793225999652320060208138437218838845410573412664234638214111328125 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01095890410958904109589041473590368715051114339223292216072782577657516516533105372355992169283135914766787016698207860388337559170125163486854685983419290758635454342087314010516282127122958970015274725969366440254857758497522880777701670396129727260008967262266114716947285775198062681594258822659289398837768418342985561198337472530899956171939796499606447790880275528433130411816370327782535957205400377759146283369374487437486465069014229811728000640869140625 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000112675332076146462483954700629254465120580294156893541654760215582634162702495815757843667207561241101945489328517097451682869241016635977127062996441709028029506981885521558472676138204420304955665356766935441273576895624522095815879158306375923777985095092511255042635458193810323035410903003139537759125232696533203125 ± <2^(-119)]; dctAccuracy = bits 124; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [86.56250000000000000000003032877355406772352225927490113354144053189925597789981408727040909623980489835348964385761423299639407606096463768429961231712780099262134484937097503752734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01155234657039711191335739672028924665739462122463705844071365920769345258608040632706231342295700417333043096366968583635100329034846355636868877476456866095098593435642233770056922936199502675904407451214017801252747354279914573692453399987860191726881909582319357916497171503696909637023935097951972076970945231855542119766933648684696551843790354340705480875555129534971719786988570589826719042919819871232084845465181971846956552894513656714874407438933336313451905378440199377940071742819417167738447384432374670144259097407692105097254398060613311827182769775390625 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000001682514825205403629971999298390005409478551019296300301461565774543908856646018413318434278378712888289777291318073586997436917231350712589971308234729775001018436993116095589085621117751205757316605122011522743807887536604539491236209869384765625 ± <2^(-118)]; dctAccuracy = bits 124; getAccuracy rEd = bits 93
chebDivideDCT: acGuide = bits 87, minQ = [81.999999999999999999999940435725754079490564459887364405244280531322329038713359959539528947776475935599791392036124883062331303307246344047598540782928466796875 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01219512195121951219512196007935215225201614246974110699341220559191021351699845143364116519924343861219213452013665477347165938496773471828098124976452816428456383412125960044101685887454701376791925920094099220978588231249961192694733403064526699194837846243238268823170574502657827420544230525515053085180211108400596576464931015343594661269661987876176233573467775230204118145970408356831378743587603778568846644268113856013346918416573316790163516998291015625 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000253052099580738675160419352456979949769565011182832753954909176438649882049303855330062072008833732450320670576921841185328950670586544086276237797865025416817704189131312935083605682922652182973399214060161264764146137374713257489527494983825554266791057055506753025581274916286193821246541801883722655475139617919921875 ± <2^(-118)]; dctAccuracy = bits 123; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [77.56249999999999999999999946338525783245892948672566725029724272944025889696286596898560226030304201079550911152258037078847362001940898854737361394010433977602632097890283538908984472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0128928283642224012892828365296689246443631118901692584742548451434539243338655342867518247762793223415117435683727422744641385435175522151407750566310203413311447965807545834274355006466167296011123259976024691389056286376287412785179919954328532078912880693249035469483639105170318088039350554508614663489328297397575992285519368745288877284367076063044333907161728800770236353339745844755968307110963292928684676881374298188678609562229293425019216749393443865334755862802523334036787660855564757769519862309305236014311256916345903300591402285135700367391109466552734375 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000003832917812054807245663168205619238634146570811954300429371767309429109698086052030479739800474713494024795818234404884544428693110879139141224894705388553125891132368976583640449918478032305037652029481760082400831901594528972054831683635711669921875 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [73.25000000000000000000005571873510514912108651900582127474337392213233380022121260136748790892261089184462546346647345189475191372917591154145467595507482437316910676648523285002734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.013651877133105802047781559600708963798463910865699983466489078498226934101484986312028152068276213213664469219735797621880067696958510929851185853874146419943613021138813908353355592228938725660213127294285004274620583236447353828296792254341692016433622561474363681821362021893295286436899750749457282778521217959130717880523115264080169225853941765777571433167623456288615354657159251983272965213675538927175776498541205926944077471190809288782561636485970281417940828291578079151364583606992373862444339583643644421200097612630226795449317478414741344749927520751953125 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000584532087878077117636134083241145344291115494282102230867950294484294645491194027219576192974604082555802885623801688021201449364861069069247848117604733125076382774483707169181421583831340431798745384150864205785591565245340461842715740203857421875 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [69.062499999999999999999972695769643647569884444818144400606166372969710444963614357207808662960793225999652320060208138437218838845410573412664234638214111328125 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0144796380090497737556561143238353967664465436934798129348770674310054915431117246612598005662492636324021384895128939730865560296329743236087875309425265830874649351205533002138947666244402770988407896277062791873138725068886028405811405745230767332619608393882014061658944625848044030463266719792983130014605718730901782206779681897860746533111921335090807043959308980562147533873668442159798514925170536418560753160757713364770182806751108728349208831787109375 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000008971307004829106347419636487058882390543112471850794186171172440756071764379558222191561932161404654182180186933845142737591120410360661294143566967975381252265562836969694026254085243839782744600988210902418971462192060620698862342912424757383314001865855832601295383719123744292907318698127028255839832127094268798828125 ± <2^(-116)]; dctAccuracy = bits 121; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [65.00000000000000000000002619186074934390225279130444158398875678983522793924806914857384614097420542359697945354507503498959901171275799017556740903936854701389209680249597503752734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0153846153846153846153846092664275370326291008233987846758875618261778800366784562784586064872087321979555528047292895794930355431175200378359373726173363052853874799771569958842252720836163932248167567842643326940584480987437046529345077205941368478756870795709183406263754255800891981298873652076181838855078972686561352789355565893963427279752597679944155333669546674009087063223461060084963093827139468058303472220257949519642757474494495551547940578582950261793007824580591864647102339145199428788183286008307633502683924316242931873421895261344616301357746124267578125 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000013847196905867519807408469149011758473278598818045313069912252120683258755196643080635008782811789139030848400409875773159083234126504139141224894705388553125891132368976583640449918478032305037652029481760082400831901594528972054831683635711669921875 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [61.062499999999999999999948707531879609767313173974285104872816189443438047502422459539528947776475935599791392036124883062331303307246344047598540782928466796875 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.016376663254861821903787117136566812284904763442610946114619591881006642347410054147714439116772726261962284948803488718835210663410547497652649292336295054256141729623846027891818320940942532942439756603520924255802848295711512303154265602378916163632266599644852285351094256975674954191897052443026445910554712966929736481627117496369619658593312038428260130002507468908732609106189412631863304621753089421529523320012790288391357762520783580839633941650390625 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000002147038878541000165396336266861732011693577476058633748453699530486640563626108347907722061102661594696375010182254000970121208474415073477127062996441709028029506981885521558472676138204420304955665356766935441273576895624522095815879158306375923777985095092511255042635458193810323035410903003139537759125232696533203125 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [57.24999999999999999999999946237551587377603437579866805055882681643678536270565228028903930503744253603899892121004117278167855567120234103864141066234508579729707293202783538908984472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01746724890829694323144104823014755334641584231046443731758305776868797748734542824767330560168880392185364430682384643163920776300698293261512159450926353766727055942231449328309519761030373369748811279589085117668868120907287417712800449132491914282377432890765835805237427139909426260329616395972356927016342923155024118597710078217093372092727154638782748991048750976466293900277514541473508581053988292322009208462974717315838629616119576321759925222409632268242400127373341746890109931941725782739972887537410896340781313773767025043781586646218784153461456298828125 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000033383477834949126678348909370590970854241633010982624510297906333910448531459175570704272966600926423985573598567827636983671154535416036038717721764070996876145741617255607537721323757470106476981180762262963086783873478680106927640736103057861328125 ± <2^(-114)]; dctAccuracy = bits 119; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [53.56250000000000000000004744591923766016144269399190137537642235100775125717493641267092495365701141708811527315393425388795684938096926403272247267731557039443985871961023285002734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 119
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0186697782963827304550758294701309793796289771397731721953068788304739955037534450264967560210579157740311725307655593347599859801284259699395069654983435101979630582551457550431303557666236348479419175964507188818949046084376449999916585239094804063138826484149097249024290711621704762485005257754219652693581570907764864238399449248844972580493729057774671834448364295039709934500009253874809655609997741975404313893760779579064711900523649911763711295607380544787659288936232530926455294133947404781786853985831493910253452692994680095495141358696855604648590087890625 ± <2^(-119)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000051909554368558249672895329663137287602609415734027125917834520332561968296633646795134424142991554008662398908525260814902233517573147587589971308234729775001018436993116095589085621117751205757316605122011522743807887536604539491236209869384765625 ± <2^(-113)]; dctAccuracy = bits 118; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [49.999999999999999999999976831672706412708258801861604750420434202030264949358145607207808662960793225999652320060208138437218838845410573412664234638214111328125 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0200000000000000000000000092710467663320073143203390523915401128437266184521870290109667336683903835910727496917393254893792780251445427666119014855611449511631987542998851067916418261097772613595610436477577889969622304572377040705220098893849250871244259144146174799359270707145913905375788571522651918977098702239491634269390131714054719409406133103701319818930064700886098458875705666489314003624138520766512745556985064521171580054215155541896820068359375 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000080366927562175681139939712900734160405792171414999091323213544452581322648904713398072872966419865930966379935358554001398054628732820587817016503971533672224236055855084172467781409105635362439645322854135483530188615164996176766527033266451007390223880760740090040341083665550482584283287224025116302073001861572265625 ± <2^(-113)]; dctAccuracy = bits 117; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [46.5625000000000000000000222165066580093442010716559922036981624380440253582532104939890309773608022162095040086564577494360138410454952317962806773721240460872650146484375 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02147651006711409395973153341827861548508676835194319889833680703345248651894753253353395443316262399654994774292133948699605427813797754461493008397906029897161949806645431458342259252833450941985860995928581423239604710220346794178825575265424302762748935980367927964024503770961704219960147734493497728931664514086893801323547048663819646845120818517503153916272185648939197250075780980649030990343997630776623978686761537560014997514313958024216923936749680620610303195829205611206558846032354287708869895724724878293088477080631515381270446596317924559116363525390625 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000012297781270950085696012119136534790090799512851645689966917244144416602618099351787367253701688160097550532126246895955115190078368518448448746413529341221875127304624139511948635702639718900719664575640251440342975985942075567436404526233673095703125 ± <2^(-112)]; dctAccuracy = bits 117; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [43.249999999999999999999956979338005140044061888061205804501351847564547056291484959539528947776475935599791392036124883062331303307246344047598540782928466796875 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.023121387283236994219653202194501179970802426008275011418530524805577438067918551397837269274133991649965652317686289329652922481403904920055545473045516616544123308868911963880545602319678611073793234372343807887320304661211291424581030502258216958544611283406443654397691223959328188609271679781908278852209550258754579747916003731951957200765858339322375862627829219539146754615511537845839550645314178620016542890780453234356173197738826274871826171875 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000183561504538229773962573283724817011461494545308068729988276021984202608300060857814938581246942805619205983064108431215829817324045320587817016503971533672224236055855084172467781409105635362439645322854135483530188615164996176766527033266451007390223880760740090040341083665550482584283287224025116302073001861572265625 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [40.062499999999999999999999784483200693619574761515689145625049748388848414803236309712825762656122373782550951562695990033975321741033237543661016388796269893646240234375 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02496099843993759750390015614719484495325748308346769648927176540697482066308897247880276353434426696921087296581541509195456453452823868232355476322379058046246077704313821353898034919150378285901599479996562552413640817114686559259972216229765936111029179296894278570080688720652770825701297506491291928460703317837663788716287841583469817902548307344585276054620308602489300958911693800618189062258173024516600962965967547776494517140112889860145967447640019374162658323445797362236320719009147461364911344365246293207616143220752003006879249369376339018344879150390625 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000260350241905078923424137163486854611758226906794045086879637524468216044648792482484158639351345217095544478277913781532523083126948147587589971308234729775001018436993116095589085621117751205757316605122011522743807887536604539491236209869384765625 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [37.000000000000000000000039496220796949728234365622001794305205709633393596640516735418282611799882583879946875437680310831257296001750578540168135077692568302154541015625 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02702702702702702702702699818015966028945374459153928817197023339974688760206141293869683329697495887771946763847566794368955012172285082515763971281811808246588324246360269489274984928906311239702781064055508790658907616089004801176150079179697083676614489134659084649690125169681112801169413385857839052610742120444786968075892034511456482261928693589256419957936526588739765009065879602510368294916400413214437770767327494112365456363626758239013649364111121058560810006919490665992181105460015875825494341086072191721176974951550142645118057771469466388225555419921875 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000032944209856612071191633203880599337107761362029569834771032065280449481383782918457632333828188853323629305957298878768747824984521111069069247848117604733125076382774483707169181421583831340431798745384150864205785591565245340461842715740203857421875 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [34.062499999999999999999980967575769177846633158905065100234702031090819453752676857207808662960793225999652320060208138437218838845410573412664234638214111328125 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02935779816513761467889909898048563248891473500125131987583402581167799357189432033042270014228946146392324388276835329608362481420384001451632967173859456832123354720998961548779646898357137482119871778133042470906945280289888394668025051838008926212001275820691451615324368170335053444531398498098262681528918362320821198955540585607917904236336754721096068411851075053065572416122581813424772800918671956626180598315389858043999993242323398590087890625 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000297906732148264850338731211071101041145914862353256422252460228465996573465095506608342045637959194265200067136407732840127913027170320587817016503971533672224236055855084172467781409105635362439645322854135483530188615164996176766527033266451007390223880760740090040341083665550482584283287224025116302073001861572265625 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 94
chebDivideDCT: acGuide = bits 87, minQ = [31.25000000000000000000001807959385328552293160368553265479800914277984977227249064813384523044300647408395907291999663897600888301634469515810300248385003905643360070874597503752734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.03199999999999999999999998157708510058370222034409413643967326428928877937770413281598334530452564507350586791852748472957075181445230615286160900435607986567351261146289964263308237885285445771627257911905834633640541464620668230751520101634771571475464676114592035828167538754544232944240621789986997286729857115970357094552999683963057930850315560977536020004502415334548281717108861145819430326253255464956749527278445105304871024155259188697424756002515211993322800302459615165089319839188431874337710477731035740852781864619093499246815781589248217642307281494140625 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000152411716903059684604611682809064907631477351469980561401118091868545503518016077203297332976594157425806711853340810500351008282954629139141224894705388553125891132368976583640449918478032305037652029481760082400831901594528972054831683635711669921875 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [28.562499999999999999999965251144130670320810602148126504129887505685656065080547459539528947776475935599791392036124883062331303307246344047598540782928466796875 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.03501094091903719912472651962942250013486875436267309170240646099579905705556605744424306571067783942900556732674770340933781719436342702302433826409804140839248118114519697157172351238875248058182559211804321593754119470104930799433429093710930710016247029482691966547658149729015006266749599472061546723571942666826019691346481163229103985998078982088439485066682937881523510668366843231960055117416825586066004595553469158630832680501043796539306640625 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000001890851362426571997253010276255119077986617422094697055609913750473074917783824597125678256671803231510950782925090759853736126276660360661294143566967975381252265562836969694026254085243839782744600988210902418971462192060620698862342912424757383314001865855832601295383719123744292907318698127028255839832127094268798828125 ± <2^(-108)]; dctAccuracy = bits 112; getAccuracy rEd = bits 94
chebDivideDCT: acGuide = bits 87, minQ = [25.99999999999999999999999978852216852835115520522375279240780536448740398276905961419057966150333294135356217118837163809378031548107347796393668697215587380416808031489755584807421972635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.03846153846153846153846153878664277856859217692871009332788459833244196189824077305808432855459801192978571325591250822613813137686731624885165966100374633414343051261010983337924296481964522837038155412591429966796135237075823419459665279020306307733549619568055401586908018888562257972822062069842810437473150699432490059407472858957064284115517574693913803916468068475562576885391689831458834312608554625910190118729553353522561761870603543073077169645024706823833791073223642362881316926466309425548664965477422341800129392181718801513312655515619553625583648681640625 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000750905182137425607232800104724954867072388192170792273080749885055183806474784181809575793855648836475215172439261284039526811172118518448448746413529341221875127304624139511948635702639718900719664575640251440342975985942075567436404526233673095703125 ± <2^(-106)]; dctAccuracy = bits 110; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [23.56250000000000000000003138496364285003180828893009208638637871997661990206611816613717404312581246757509489252885585787436672068455596901525806612179706243698136262586023285002734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.04244031830238726790450922740133400874489580165427926112259990609078695009629004985154296252957800537403721858348218293610295675581045943050844899575265891191174545855650470799921352394021665629027422588810592316273650319667981826115535365994627422556484718081640240404541190443249985514795870682990595630421604996123417665134744175001217242186225405591165599601110143979692238824231312727369779884655040611135796069277652354386722688881817462191417289912418099633631266047878375096177270547265330330350483725953768091085008054021664170019079165285802446305751800537109375 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000024234994297592421830641443532073621058580772252545520461944371307799558779073962841687521920595537464841562258477008401448514738049066666036038717721764070996876145741617255607537721323757470106476981180762262963086783873478680106927640736103057861328125 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [21.249999999999999999999984973417756777386349134126611113194254641563573072334877350112030620267300054211292361356624238865654543791413460281710483648805918490660837814356299131941404785470459612247697746324210123960020239752832793556081014685332775115966796875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.04705882352941176470588238638629297883611206587362263600651036977490398318224208358804793229120454404399146242629420627894821005845974548780541685697359465740251676117387384959326661895732984706754329862903334066625377698168305572831017691078005143054131134720870979390354740754402077670423550309299154585103975484734626442834329679297071786350513931584600439914608026008645321222098235308811687425754104412642927065776107100137284021458808227320453870056416113344525045286217605753647532639034977005125945835981206488973424472365379711558119879555306397378444671630859375 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000844381569731704304748314072539968084970414512714096060557575731144659409128724365275874474299110910177677307654734676517221266798031915624413511949475061194149225124464895008889909350616620309071880608490952132264702179837089528363892065616064092917983715006518413015492019135020978798945632541127975008074823830292295917815585928430435150735619627558043731746730808129945124524366187175968148075427574051894925002211593909552371607971077632064519721682908894699794232850865111162952341820044675992029161429535777680752659958053836576412173207955296740046765797155083124979024881692112482523579312931882867587773944251239299774169921875 ± <2^(-103)]; dctAccuracy = bits 106; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [19.06250000000000000000001402346040525633327100987607819020263531925216068878470139791384477517740699932744888260745744096921381866813804764937079920609078507770435266187097503752734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.05245901639344262295081963371774904855661219410710518431112736364194530502384982245915865113186891532674212506114436512255438229786084691189242091505982697108414987421610160818690638743554981392256977705084745067608183330499336789684267927776010187418177009063458103447176465074373292838175204734836145427196539472997935209409334859999169368075691755644170448555775693942467942151803201593648279705629730809309168744367761073727491298567870602874928192169586197151976496990144891116269341674031951658209179805331969258606598740016756232673600379712297581136226654052734375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000034656660625266900639527744166265049038455524490568561744814697643911498924160613190103378688835650484879715812491127401059722352676147764665701598605111004376243229302185859123085216949570478127133271754091606952435199427454146353209243677086578230706881725508862219953182486199873707675289968118124093537114501095228429802787724399311610739123030614431814764801670725878706538028212758756695749930934782673781148399818855306854362997461944324331444627470906979348048060945918968203306430363032430585965175898843461658682507884658949817146995903683456768163641762757933004959229514360487624098053523191698133132376824505627155303955078125 ± <2^(-101)]; dctAccuracy = bits 104; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [16.999999999999999999999973392889181034998900934404912777732758503909554062810495998074145255937986834927056185023674386376466439915660868093243800572463739952917671725298376768660154785470459612247697746324210123960020239752832793556081014685332775115966796875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.05882352941176470588235303350552482293469077547398060152662797184148931709604463150959691953334946758395554441056377749363804369179123710489198327270119883204779081114605506434646493217957541503864051503810190435739858252023239214150929140008916709121444905558845160374331704714348502521003315578825468537374096104395192693344335404530848219827861374568484267301445944995244734965857232326417753939125384554049645268898064119964634048849140688305356419745687429539647114313453894745181222869400169491929765156360826044032872792453880972374236080213449895381927490234375 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000074296159612434638853682778605033990018218159522012081249955156538221987774415185271442088383740272898739319583132262711336590616188645847982198983374601233565129372427230151333441031064153100033441397830104862080818778344458273969432768000688203433764315745243664430207521145370145319643523618338044090176302720585698473996195728561941730257607222648217562499884357164573869191309304930233202458162345478491634734166343793257241925869663081548592668987526888183188638748882574903083775302736872920838215578505213607209013323072650132155679605289562579573971288876502310366265997150349054776855874104857235806775861419737339019775390625 ± <2^(-100)]; dctAccuracy = bits 103; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [15.06249999999999999999999995411984975234595339725382656408057998846881822676176979959609266663761190807162703650421449616269991690673782637943105209671361344145945896386124332507275476055889855952217631464421076102332152681084753709228607476688921451568603515625 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.066390041493775933609958506708610029381476267898499505143984214776131868833559006907431201265759471242579783375933257618105781259411844576892881284058784738276522806880186348124082981661745697579558947270883439306472476664692872609590282324934413410553971587230895464369220867501999121708102976062159514269659440479319539642364909322995173159783469337806768836912732285996968866232303451465994242351119763952452366343957962297848669278735999080624960934342015984429846367911609564292640125854123506106631964852053357024570651970414580933521619954262860119342803955078125 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000027160607968690891033596417658343062672467440002813637470018374434132173517665632518416334233613554887688834125358917592042265327600637428741124833047379429368024020026294805625129087920038395719094069909803093355048770007486789163162364687377911635822463130308157741038254716472008286884472712009135352712692498128183773868856120075472547927757242009954394953133732820809331327936390155277466424336903165344641957246329347841853446478921355593208003931185984842353045053285748658837667427826998682348839268637074054328459498263771106446088952488992027935448275257521954267717736809549477396542697948955691344963270239531993865966796875 ± <2^(-98)]; dctAccuracy = bits 101; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [13.250000000000000000000023112147775361072164463916172165485922404456906420875875734978281701268683634366926494812601914817667167305337283522703728522174060344696044921875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 101
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.075471698113207547169811189161738257639311609168873621429512070178686815289572944158127989351422685815309099511342400871433503182554595681628448939612270232601893797722281341393318759047549553171427307514179836124189890168872191914567687310389671937769844212926761157265250712192884417926364126471717940530630566307165176431158701027368373735950256209786311044525412029667750877325574474176523666620706694424111941248683550740588602208758919431998235750037919191052620665814300977353213606885833218706515838066181762123629868268918918783327853816444985568523406982421875 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000061661087471882134536335184447645061937157328808466819232116265808137391776118431992103542037640693296415057236271710541783421290997845706884497430118273747133197267822367389426071524661662043649837444314364332936907834763041137451389302525565662943289699334370110177271988580466492330449305631283969974721294435758636322644396020934082868434214762159091078188335419585650584132444647959240448054889457366024831250528912233778053623005129819916864963100398773532658700162642229823995633155876569815468194052947198810117733707982699389760049506793780598070873200154832997593049943860037931703970727481678437698064954020082950592041015625 ± <2^(-97)]; dctAccuracy = bits 99; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [11.562499999999999999999989189090434278473437254404043921458049789365307801731904016077984476045409495925261276812351047574178755476814739466817627544514834880828857421875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0864864864864864864864865677435991468791634985151044796279763343170865532614268828336988571744784236369968662600041227556406521701338688104547198835735961617546389557933646057603498723586185463657384835836170280027703311567916516253956195788379722445152942328008148789694367257775975838617337620538676756287872239073824601515852330606839148901729207756065587471125583253579430649948425101977495754156254877584712307726756209082792232430203512130838825381088530128958137597411859583951760426970751494237683450720471339205814949508722977444818980075069703161716461181640625 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000001235942619139049648846265086701067435485092080144758757975736961734956493878790166489198250033954918326376998599582299421320658606835531922173939454123569994086876498714165354022785008121933298379067928030640476742107444380203511546123381639484449944791188159383562689582853474266707336123403818925223280340904008576795216713702293747986853899557348114899139026248558120649303040875615007661484149040782258512765760839477046061970550286025164197472642998323189351177538396851367106876713121054303939726727867665039182489360628060818480386337695848934906640914586916622769816650711128179520562238302705537762449239380657672882080078125 ± <2^(-96)]; dctAccuracy = bits 98; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [10.00000000000000000000000992693727887982780597898612118312860653645630212771493430345556306991180752457093869229491824296241875431993140014063859592833153109897510461499597503752734472635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 98
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0999999999999999999999999012581171675340349492098171952052528561270318966528861136990231269358158630122188085584917204074192885865232321614740972561215027006561263504011297989969959092591674341946467231754240749249736515287002739126979642156491283944574066890997479954027367869147543311745332146661392312797200955079889366093234351657248137757244521447748997252354755359082969274520965477638527505636961694884832267359024830270548877972730373223230597174158129083682770583733334125774749666134838901138192837859716006581047598200141790503181482563377358019351959228515625 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000004383061907592995888670000963093673879407754203607596832653786548162656946976090455446085217977356923183981825097032682601817822534315305271370126032986566367030763044587533146061220461953962535381600389445135341935250729730533274755171749087688367556327611996895365335322932488836442463385596622136371195405013756181293591466937770429613395800742486238513465227658706294355069621179817942752248550891048415542087438630736852242533033421863033441274297687318681361568898577936856007286852746023196161989521507489928161949948566945875715445031952173548002551524060812639672838635067612145075296482821247678884901688434183597564697265625 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [8.562499999999999999999981744464921301224363411725805953021312015117951735800461104330659610711386047061821470492483183386659036437970839356342105489102620921011543795610876768660154785470459612247697746324210123960020239752832793556081014685332775115966796875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 97
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116788321167883211678832366502287508070949186862059608703703666405733611836879231492760195124025037238170753379632229569286340510014738749351480295476062167786613978916309340404795724933359368506904774652472974753246902050162802992497346958129539210858980561110659251288284437506173322147283321814127849561587108891500924865555973283943887739547618979410861672524404280175640036824515160567693665589154155458581579799858676631541213498468208217144077274168802069948548729275038233765920413006217388892043384230865308998575537017573788833857406643801368772983551025390625 ± <2^(-97)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000504232294738576704291758961473971214945633334551183138345860580142476739494906670644867053967355164229000093862699759063057800813610240237240463182289785401639443815584542265721529090114332186216503618941910826201424617994643570540642639498273208604184391196965630609846510046791780687410849280885352174252475139774778276563301964964843891123367725120330546794251452014855012382678266861360058633031448407596601640265871505209683368141038348820032227625674047002356132661587772432624979482309154538761901641306876425991789094541394200485432459445586627119407292079338985605978751058157442889624821891203509949264116585254669189453125 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [7.249999999999999999999999993499786140978862723407329906820819034733514170086533685257543614670617889991621133679188700780893463924737896879965406050460510636884649307376759816065674743455962742345188908547368672524987350154479504027449365821667015552520751953125 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 95
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.137931034482758620689655173013084239759188793370627732175484625602234478312554255545590333485717296995070838253571538151077407714125133133574038742624208149828794995241709432668226114571300465173217483924717162008323233337281188047225230026251608774789187649810801659782532561649846385431050895392705347830367160101047521843230567196529947951018606387977039830234558353455475068800732150427828029081006449974859630704671511127861272860464102788457914276636760655680699033322476906886453077862717923264144233667879380169700873830056220281647938463720493018627166748046875 ± <2^(-95)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000194962024727592076084401791346088332962015028993755437931189897747612679347921524061162146973266917631062525971353250592420595991187372364237873612084725909890817783698691199765631928435028592118734324989691380865412172122327848978933189829972401773460453464682274289305271464457464959017682634752403171563733376035785146809489496798840655538791161267072617837126713902316322172292708684220417602773536487895686530435131530129606809910128284994055805149760327634347119601829614536432845675676359032088572680673613846453951155368777108742089564505537856769242431268325384556005047472453158160198005699470513718551956117153167724609375 ± <2^(-92)]; dctAccuracy = bits 93; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [6.062500000000000000000014882245941116135562853300286217502541727554753947760451005784892574128084159610416304500062716810872102957130636013971525244414806365966796875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.164948453608247422680411966688657283667307670363503638255769914960039232611497563751661933874524915531687044603057847135623167510838520038942435813172606308153868035640369987739944289735507155248005078209649232387071595023432613652637052780917655915192626721648606728718498692002563315973233989360783048069610994296942505175961625740658089050564455784753933873364820112073380845532131552148013080458416423753387406089296486550159939553631797314601549531618689136495088313251339704195167863904983222645514943856432040531963888305329313244129707527463324368000030517578125 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000156758631645134078035473954401265547528672742812939786600340225872526648189778969169105782504555901768314686226654426045152923974666252613978595291768332795743904683150434364657101048059693832118589090777715974617279834123970161015456400486492761609234604907057065244603319827354994646778846907227710957640978314186578808410287169110122517521689852041039192903769999427141000552417473669487500866536119550754779571485164227830968962703307555143539319825838055661296286277183055907501676086645197717720662862695468317275951102286568011587430771372674386863363021880657652241129954133819148116846253770972907659597694873809814453125 ± <2^(-89)]; dctAccuracy = bits 90; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [4.9999999999999999999999933668977883289519587149185056133585964471992420850942336433611101589438087080600265622811598445843713519991247107299159324611537158489227294921875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 89
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.20000000000000000000000026438617095826441723110580996355767983064633457031669740639046401912179887926719240496006411911698394979458555250017091072783042359275874384360410295737022030227958193801628321431367228683977887840114912401373716142224839466846020298519267990184012302495061882181079439747072527303649168482692504223507185861349468179968243202353643942408515624980953740046715039938684718181102340351516206278238320697927792285961875231487681671115408905754780273026902811572930875514769084893706018707621396767445804657122032654825716235791333019733428955078125 ± <2^(-89)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000001268690901393917505268763862677388423062557811956209327847755254518588736499051207178014966425340028946301368340213461976320205225921024364572854009098595357587839744181125477343019336098898617760783073507726615239272818990238764526768017755042539144201038855794172504747892638749115470213519218312367202378291390468993243772259701575297576127405039591993376837010002413574412025235697571704356470353300191952631188897323985541978789222426825263048101846862293647701032581482642552325081399889308730367419695798608784523769046303296235541175402990442946919310006088372879994117937608338365917948209471433074213564395904541015625 ± <2^(-86)]; dctAccuracy = bits 87; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [4.0625000000000000000000057900244741560065365110156616329233923475924216363921642719176229062984043171834632474063009574088335836526686417613518642610870301723480224609375 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.246153846153846153846153491970779386088128406910161925281583503211686983535707603675079878976653098607817674177961902766577397170344567486937121070139058812715186800181428381055331266801193951814707942787317680831990739096443330479233925321701470622810084412669521752877690543409805363094459227109999343491458406464375034241532535858590849357590151914511333366086421876170294562120243829578887228103735928102060935904232236262797445882116574243552531183616555785751893954198358357874543445835009056190400160941247055198266251835846618600811552823870442807674407958984375 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000256469901108933408272241032650583078988586799034995518222072425048230758339021507409314293591147167818383303234622226270856962163587020731997497550850313511953762609518605060135353255068794401607561680697432503383163949872067086001277132165773197938736225807467393929658753810930239712067350472962356037020819539175871134692206948924736238262263245619214711242498730195021569017618221877658152726415452154805310338051214135232339496062032429698083193351963045490001856515369187961700074563186623581413977226113114537159839888760455425173433578595399513454592431447909673636649651533281867032965095631880103610455989837646484375 ± <2^(-85)]; dctAccuracy = bits 86; getAccuracy rEd = bits 85
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 168
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.2461538461538461538461534968811152431881110264683699440997741298682912691271047903805878242600053223186380894575913310277200344146626234244388995123099085301986159333983709423593976352695104680725059543956778531312268625358735299315945385346324269027578232512479270338083583623940579387105674464906745794305810221594789763806276632152348502814385620353952061508005797642005648735280287724412440484157065257360386962382164922158638363821653116034918875262619537721107852948314977077452316573292698437582889950472620886446174753822861828214611026652675837561525691796100151217528029903125786639027372526555836884654127061367034912109375 ± <2^(-168)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000011472955630287043709886200461323986522569825995151842165833060982086409550251525846069766941337180962695816483928554684356359127790849131185825295900577103638902696348583239231183339564277784644552277700071155985655474199270097146463598392074345611035823822021484375 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [3.249999999999999999999990065748402806962972561236322221450874306875222300603942827408463027984785259196586755961291980396851632960280810619440410405741501889105415865923376768660154785470459612247697746324210123960020239752832793556081014685332775115966796875 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 84
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.307692307692307692307693281372393261125050026460671141070649792457652685349005362966899243612082781972852256888275889660991745968401216820025694375710959417981839742329562625584657741747595172110466952617078920935012012584474288368824360913460167470932421786706867445741037241926441644829386135461309452197203368588995682503444891726072654276511953791284058010374765025390379010903056902659840530479692487733402639187466858567816493957034739989934103481811794124929195517321106619457132671476797887893960201414551322883356707961477471968692043446935713291168212890625 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000019425243845328637044993029374442226493604662695516903663134636620934581905394047779719463746413673580012557483946883464973839194198666499674516906341895883958604872542602934127735918773978499045103347579872179573344446710533331755892586297085890844249388385484499295604753934445296237105573372436014134084151061199865163935088194957711066600396985712274026267788660704071809691529601523951200750886808113190938469176442632333571444778138777866162815432967644424352096937635228103072875679716998658927289983316088989704582607327449242806153880617231557842037064278228461439311164764298135720910210011425078846514225006103515625 ± <2^(-82)]; dctAccuracy = bits 82; getAccuracy rEd = bits 82
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.3076923076923076923076932491350812977122080156020403571559673086788200045091327004806590073181065292683707859817302569628101946505007332995859807115468499845250933461323800022314326136183263182208866361525823666807071524803175793788316702571765590915302877650882571840549188120086892697816161662460778018674817860476277890386741983788412819186113751618516894620694794076073265448205602194195188958875193550570647594631269066724199578999332516104914247989654541015625 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000003292587839356614007798630813557739232267686268189816126259407239806188778191533475754471594061285810615089170765266340684666115140180198570806044233977478005710652438724296929525139460058796925750625455839855965351751801599758905092496519273481681011617183685302734375 ± <2^(-164)]; dctAccuracy = bits 165; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [2.56249999999999999999999999375222163064958650113909640745654579670809310280982271602781737945289621061851113850501512073050998306930907536618968072053973182339221552004720642180468847635302692516820150245052658402665317349811147096261265687644481658935546875 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.39024390243902439024390290720516640182160970459360817758354701431771068090622480251154649473745946792979761356141130078765378670510190683936000371843312008225765942804051509992475613396765957553332015130837453736953257612717314085897775926769932939288281300896139097724980792462284045563110407689949279272115292245358334575191166517481303273472950091967924877917712014401372401796639572726473474181810018424746193725264643465814668795480541691917601599927277792580172775769288549222553286061493356232157940180006512590679329586899892756690633177640847861766815185546875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000016160301167795276833886515645452368762279487982910702055985731916156187288294711233164996307524565316827252531230659245407523620056670459941648001770709362280747045037510737090793645685056338757983404902565999172621314988279101981590278384594531067748611572876311040372422900567845516231385117446169510858752822903340668119769854608566988549449185434245263352186608086384001784811696667409243071133819534147441466452320315032237239318165445579633230969940646642542319479141787708425767872347922428482034821505999442776286342645250246110471758541523906008427847734555389671022408520049962188380732186487875878810882568359375 ± <2^(-79)]; dctAccuracy = bits 79; getAccuracy rEd = bits 79
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.390243902439024390243902441492461487112599305039880603489797770501237084795940627756870693730325992035954888917443043002860360371437991540542614499665812326479396685198476249856320694695185832477337353526006422775774034250532369732924993436107856662755198985976319574991249713334337806476159952266195368377040496425032808227093471705735700725437706296031462953923858679528804909626271148615563671580867983997922226457149516893973356191725360554185175560185214608829942549189840610755984913027665896836900366205796413164524478021610651289725684873016135337758511877282629930016932592382722898294300506449872045777738094329833984375 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000009514153030733091163685862044676819528942447176716958928143460719394061930862655617544209424205836305242788665034744602947021504351356392861800815932141268050217882188536083239231183339564277784644552277700071155985655474199270097146463598392074345611035823822021484375 ± <2^(-156)]; dctAccuracy = bits 156; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [2.000000000000000000000006611954428523883156805603897727040506091384431997063048432353222196987484684853906114187523518804077038608923988505239321966655552387237548828125 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 78
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.49999999999999999999999592602708781470465508657129786585515936001343338966899693942057156545411964293545646174295926978008703315142375560951032849151711558364237954608724088069439315199099882860302193999655166788140705808477323896271188216480097682500589253426403755343128103387259172698008010246986582349596274723033229895550038958146598410564013395778581442124587854972673901286430680136045912490909693466068533178544354392616381688263242474971758711860942209865533519779452802565126304884343751803137347639427699358694384625285966894381317615625448524951934814453125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000006161875611380684437955582365718244678520411763070668742349093898340181442554335467563862149445109362247270050434970639960233384734926912834536131085479024184999955334707115823002693915357343264364248739324674860740465852270332968925360896460413517332692603916290736777843805948827135145487292851624715557343982343656399656394889879238643531288139248453752526952747775179369737649071306310696687754546154500654927733009945812459114202708600504917772345344022168654841564911093975006980085223846125411478230868177699048653219923817301262953551335016144176377649409222547509881824016712836833420396942528896033763885498046875 ± <2^(-77)]; dctAccuracy = bits 77; getAccuracy rEd = bits 77
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 152
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.499999999999999999999998349286467719686608845527910866756727312587008917032378655791428454662948809171151633813065231359503167866185980711908677745412317058748591776904908937736686869194729212464177702401576581595059406513905121391375653623740427360976428670159778353549649779710494461092854635958354745141424123986380235912017633459649693735542691033466819420860922714033640557421811291283189772974130147247120542794709047426619460060740270090558474663739382603181026135508656118269133270682473568569506773984523175254318494477983390892225860202461856187216797960827447286891994322394192399282297767371119334711693227291107177734375 ± <2^(-152)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000032422642315394294338417910969181082861765344345670502853519885691312591087909319104046043693905117023686958610195142462567833763198850323299490285139435072817256676820424742350916711528452796760003159830084174375231779343038254260524200223159141387441195547580718994140625 ± <2^(-151)]; dctAccuracy = bits 151; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.562499999999999999999997516937238515650864624940121808202297184886106975041625419879609092209587045443171848366459491221924221864627806013765081264051857359271957501913519590925779785470459612247697746324210123960020239752832793556081014685332775115966796875 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.639999999999999999999988931104002461912104107376430766825713564989234646079762191723147005270899257456107146347113688127417812630570162689276410086368671289358601342805333675472059065444267417225261183036100001288038670230316533282902400400151156100790612853349297998898877588554203084825044198473552449110040144467352217727707244590357388500521070438060829742391914171547674646441465589478971287116374631358114635162404336333867116472335043584911658093094207291017612925678751000062058389977910173864412781064922304749079400194855526962101066601462662220001220703125 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000004716757424191413907913373401110536120194531040288046905449923441691279699881979552038155666910839132755209114744006837847092308862174672424745226816476860345527201719075841497904562735292400814641483161876999433961261010543926596528774995425610947057855486062986469688600896539179875241882784982876148793527347903781771790754939105275432711076954496845290412143455716509320905350717740049616984779958464039331282003290028741816205979338600526525443122384025466818813703433432381026564182083740517100668075833884694606589333160904007568953512461065283390250956824067049883331299853228557594775338657200336456298828125 ± <2^(-74)]; dctAccuracy = bits 73; getAccuracy rEd = bits 73
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 145
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.64000000000000000000000101943806642566513222056517308998286485197917418715399447927421338127606716803128947675656800901462565364364759651345170560713197244221365456253644998958559950362171182647354447185310028932675325882189235528811138738832888271975876016862774769443443632423889948933013445017618227194160358215263705849532152189439168555163278599870916750356965569893917605111205848572891861564802509204489579242025598659893148578703403472900390625 ± <2^(-145)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000003233263356845292432637750411272137569106010547392380606424051733376569733920141237659655643624861371747287843806674380193250994176293398161388880614286078998729254622414140206242942338750467320833848341420827505336698924160564945257285984769879405575920827686786651611328125 ± <2^(-144)]; dctAccuracy = bits 144; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.2500000000000000000000016531116694321852670430452020833707086055283935977404193332210599510328048424269530570937617594020385193044619942526196609833277761936187744140625 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.800000000000000000000177550209702977553529700309145419634142034004741242024159957553114451973436173785694531250201211083489866423176428002749913861767488195153314628194069631740373480622260009403446585766130484416274870999179559458126823726357514459573318882049982742788104687031772363290690463396000054735002724429920964445059798222344637398022612437159450409542079399936561478037832780408133817002659157693980539277577738720709172445621769062092918839184065070655534130316855641962494277928760512240636614379066582726358317252668417296490588341839611530303955078125 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000004191477634838567431346788198133593935957435350019634257056775314438535425019409297081893696703740625815104842255705935838099256113164664636095564769738429689245014112173129913569377261806946203970713279065297846256824715096438168609422394888243264029961102242072406097455613938803939422607368170364807737680947965076958997891518032151292502839888501721514564405627443210976130401976799041682894853646700916142100324215248962074665281465055765802904520472736135882124674334682749049757091820259325283511317985580296193441123886038447780313419762234226267511293925516627096043882627629528769830358214676380157470703125 ± <2^(-71)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 142
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.7999999999999999999999989453770307375675671711247598224193309924320238015089995948398213508651991152541214494124648307808041208436128974541008220296479569633686289243337857947413774974966744159690909261050657848504794340118005776938490819686094823193514505480525198670266384189687110087154828818050714249541161366664703627912296502479122433767278171238427573034220063178386040025672703857716322322142084465782913020791612956003607998004757176358615361561558151839473419124559417841739251421981494376796780909514651679387062036909271173776693835197602133057663369503788757627403305881645147190628364342046552337706089019775390625 ± <2^(-142)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000001983169420873597492126805105667846025272768408387739328456443081226687202078876244690797580676478705906237526191184587465851442181005106504278872477108175444303250513601571134026993593194496368981538704602314167259633213795618327250809553863319933952880091965198516845703125 ± <2^(-141)]; dctAccuracy = bits 141; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [1.0624999999999999999999983447489397928553489406781873748176650474022244097074431263600647738093775525243489809687460801993204935651793352491267796722240746021270751953125 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.941176470588235294117494810840249695021438406585247663598206391310801830638801287866986433476388248578046001816084771630213840333349436725038962917872459115990048702881568795627620213857010295286662946915497743646613182246380287413277586969107847526606341416404989017331594298050053488032989807535764318326975781931605527145079514713794576031441341457981979997259278027616065831770511635742542087307089348671671129123695927287602892162854196440266882173344837266559185481728074397954624605638630367076677681561600731944346349966412645926538971252739429473876953125 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000008340496367954024417825046882648762644626426911038066329404168594991765412950372233598984395132428130719142264976629464937780840578392023562254168259873406668267354946085508191277356301771053564208327793848976346909545538706333282966124050864684286896670456419526200686845063207456100586236701309151117171762711297118773191268180587196325441781387120637648793706702070985243100139004809516660033436579392297910843834124432944216420366347239442546833219072081304240475278668463375941804131168569078170496498144149386342317724605891996081040818510214349084635988742079631247904047963714901925413869321346282958984375 ± <2^(-70)]; dctAccuracy = bits 69; getAccuracy rEd = bits 69
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 135
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.941176470588235294117648530763165060434698761643645111530052369687697947074388953671850975719132052004184278129578834713254248438210421514214906506615205689919883700098220110311333481109451336205118602855768079268953554009027278025269736308159690889688038014029985034695014202669539564969535858721709591428454030933809616604330928250140176026719058696050551371367178464701033967917463441869157053068679907870119905055616982281208038330078125 ± <2^(-135)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000002105760347290469234437954214187039839168175826155794923882684532261439365256897011626703856247776429696514765657455091002456831809541693418981360815835218780775942256676820424742350916711528452796760003159830084174375231779343038254260524200223159141387441195547580718994140625 ± <2^(-135)]; dctAccuracy = bits 134; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [0.99999999999999999999999999968445563791159527783530857506959694295544999642262721984029328830754969276819485845334565020995227278415354633473147800423858262259573484179096324535858253457729297087395465092631606190206962933401946269640347964013926684856414794921875 ± <2^(-90)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999999999996800966431735083282306145162279913696415192375438022492158186699342228219290085812682824625391186401384010472350501646054251753708480310806657240437654993475036382171025972622876506248707979484783599312282907635450232145312974898899061044392411850682202668892741269742616001555821176122847117165137192355940686937954906666847580907792773720060172152788955867066066911411755086626422551229627419708354786413384977323154628049084545298128001834265008606496345309001156945619282253472767494022751133770236298993483448072083774604834616184234619140625 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000643335138179811959506232548775541910641822814796621609487438943513930789542726754663633751191499633757000431233836294577925742450195681599574957531552123935195806043975040631932961245929628557554430261546566555508320259779364827052946552775719330855068357033636289332755469413108590289423171021458104195839625757453553050725783414574938968151380076596982492256954302749545559562708434867496869459317597780587653363694558846207034882365766308667411513546430965796846873792292217104532336673747894299055763575060081193991873142265895614480672536873104911899485270059382248310393681567376233942923136055469512939453125 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 66
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.0000000000000000000000000067147840252414611853560671770628638775802508081177949241804198855589934707788864748624944545592199026939749762807674014152068190888555038615743737953044646273985370482059373100657430480401295570721810905209133252193160739989475473845466234143328871823617085627029662726082397129580517413000931506898677785184205897377190536025704358424900243239729344177625763757504406848633130443974567463167226358370794724521365480095635932911156747799592533374742715214937513243112490177632119348823739683210010239796717977859631901350963511494626825248404965886993698207020641634257263064000653685070574283599853515625 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000023518508565200663956377576745588255901479250548402924064508599203176504884275690040828291041909707769751849016728716866225776832614502421110631751440835218780775942256676820424742350916711528452796760003159830084174375231779343038254260524200223159141387441195547580718994140625 ± <2^(-131)]; dctAccuracy = bits 130; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.00000000000000000000000000000000000000000000004377454042188998029248970625900697021123529450236048757522061224660300894208722101430542039679494337178766727447509765625 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 67
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.9999999999999999999968009660278382998091482352293226210269073936235606558712683782896479364738045149118414059908067054642968126706705653575036861727959615072818887472933339935816284906714333581455359494094304596870226447338650151154616910430731195559445017876970457088879637132942063332705370897890798781531827635648765602548337043476697595860324024666670343698883257752272468089998183348818019848002589665292639458082890304165554495362194768160501394455641469098873057160914547071231409326238693345925805917532802838889488018792039980553454370237886905670166015625 ± <2^(-67)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000064333513817981197166471998817645302888866924141807756200931755349973135440363732572200314171826139140048410236313349988345765962753168685239008592285800220316905132363000674145579348635566915132810423457750109040449600702578199241428580239742657841305584433884564382179874264594912199054311421155717791802297341668562232702050548802200852989015938418927541899227139316190640677695925302647255957135696788653094265546585075172201832301143333004149902457313606642514401668491615481924932976114876527922757084912043080393162354524912302088818772034690477619113292537703115820356403187219029859988950192928314208984375 ± <2^(-67)]; dctAccuracy = bits 66; getAccuracy rEd = bits 66
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.00000000000000000000000000631088724176830314098526214637705060065623912675976915252411269498382431214588702511399322536781137129411237298319742557123876128109980631035063905332880922758393018703599216793435243859652417838802261377568676556790315536611706251639724502515895840095304606397124127916356038985088579310226807744034011405851920281950740839375942477406390708342806788427510530265642806394509045642138289622380398213863372802734375 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000002351850856520066395637757674558825590147925054840292406338499687805037728575828618150220866513010216844124502080779955729928484621274250523383932803141170675444303250513601571134026993593194496368981538704602314167259633213795618327250809553863319933952880091965198516845703125 ± <2^(-131)]; dctAccuracy = bits 130; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.0624999999999999999999983451780801252955793628221663779491457102466256401385180652141571044921875 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 71
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.941176470588235294117494809766918450359205264625709725143941881517962196756363797171844233979530092851761410703189355703654802182664139847996229809741516584810590412233344973775713895503274122336270562959216131701394943647055342725492920177863515562873125889268056972310300085502686851346547122256692877000083807814689862425439059734344482421875 ± <2^(-71)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000008340496367954023537247935073011108446341766110734350274372711394248357440258227340800186055852254233289402744391388269305280340586799893647352614515180807193710474240152671783432180455437637450791125001391218024625159613863524362695860065338041646809556989581533877358717031074431450052426929681431097000488855010920118931157191498985430978615345831563840071917576983061976981061299733648467206273411629153924227816679648153956366466398362658221243774238601307009239918803571876658893470296636840619909610941377965219651522815454537806013138329990852528421275623017361964942929797306447881055646575987339019775390625 ± <2^(-70)]; dctAccuracy = bits 69; getAccuracy rEd = bits 69
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 135
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.94117647058823529411764852968983381577246561950946092670113684845206341319709651662395929346621396891887801681138746331523452732267526155181910721583514846407648227886917091709856039402137554409939940898095682812722068935767609007308338513098331191160092904365112017739217907454048841448421779520129318202602251290770270540552044818197632406870544732094048327183988995217236284013065792067976205533496712425899535870352337896656046221839231037607770127890446057062773498652085348090867777880410922012165854700368805234383489201568254305823388374791872496420575513288203469222332114073355908111240264446450964896939694881439208984375 ± <2^(-135)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000002105760347290469234437954214187039839168175826155794923882684532261439365256897011626703856247776429696514765657455091002456831809541693418981360815835218780775942256676820424742350916711528452796760003159830084174375231779343038254260524200223159141387441195547580718994140625 ± <2^(-135)]; dctAccuracy = bits 134; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [1.250000000000000000000001652707772648712108998674401067092987194229181113769300282001495361328125 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.80000000000000000000017755020970297755352970030914541963414203400474124202415995755324287950306865579086427444026981468263154635703049942715578726977768202002227281944589109931890392506325390210176589129339340745321129097326095195066456466794742961998605928474925834616545158878218162324748157424006121955957493430133808942628093063831329345703125 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000004191477634838567078698482951447341545336474183345930911457108282913463008236121962279724960604646457288632648372852626902332572248176218026140973940896118277087152909875856524234898914811389978085392826465710268208243260569584341428410903674436160857853878421481758797883748343714357284093489764805100673680609532712729619346481852828566942883950474341011146173934812224736801935877676813198114115754085533552200434925274967474470796747042299167031803723460396669787367742276248189321833036389294258674515417228845266836371274399347589257104735341497850110719965423415936910112034041731021716259419918060302734375 ± <2^(-71)]; dctAccuracy = bits 70; getAccuracy rEd = bits 70
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 142
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.7999999999999999999999989453770307375675671711247598224193309924320238015089995948398213508652087815065126349500198641524198366987955397854334574181857164699616916697757955916917055277687888930235309892992995172100693647251856030876436180476738068298730241504857957564744842792689228326118417503779221089752546901335135009920683529089690978005607909194441413590557103167897605945538371990401672165823913907001241341276909224689006805419921875 ± <2^(-142)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000001983169420873597492126805105667846025272768408387739328456443081226687202078876244690797580676478705906237526191184587465851442181005106504278872477108175444303250513601571134026993593194496368981538704602314167259633213795618327250809553863319933952880091965198516845703125 ± <2^(-141)]; dctAccuracy = bits 141; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [1.5624999999999999999999975188557482371483653357014349870139635623189633406582288444042205810546875 ± <2^(-82)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.6399999999999999999999889297805134818272598275916136635845001321305404446992113605205532161113591371197127892050753386091968593877449703015877919005034869281659380514814964611047957902500067395711227159899010414680794581740793886937215064564017347699457022755550807781509981919524180897704867969086836530507970965953035147322225384414196014404296875 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000471675742419141314479168682119157948995540186681294402661312350303017611451799665127686080617333151654250478577336845430829568002902776261958015690095314887716371951729947626029719979432695392445458654634516771840294254132754616312394160802126342939580292311821485832515264151780416054460770345440199596848201518408917813271625432837078962419076603157561122437085918371142050368987222215040249630305131110723387891579108081081068009777757879671475331225613619170501543593566207079166176864582145270116525772299437830238500343062722040415367449076838060434207356575842853198157582361726980479943449608981609344482421875 ± <2^(-74)]; dctAccuracy = bits 73; getAccuracy rEd = bits 73
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 145
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.6400000000000000000000010181145774455802879407709149691108141201292895903003260247041167699752419346225440372261073503471227966447585461123775325327067801813182427321321610528994121473729425745742525397943184748507663908429718662270172897197694456027473496006677955640493374125788732603281378752266525259619956041878520287496993589183940780191817208934343526592538851282957651318748658052872602438285859511348272247446931753994640123125756654015194326009925900945031511334698820820183749902128398726437729652302204710733011005441155012050200476524257564425624578246103004871525106561874589317095995966155896894633769989013671875 ± <2^(-145)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000323326335684529243263775041127213756910601054739238098095816010875243590638809434635378123682672847528195315077911068902391312809626535709219668375545675444303250513601571134026993593194496368981538704602314167259633213795618327250809553863319933952880091965198516845703125 ± <2^(-144)]; dctAccuracy = bits 144; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [2.000000000000000000000006614933167301997697382838592807842437171217397917644120752811431884765625 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 78
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.4999999999999999999999959248153974642851809534576382993708888201770658303496135140120705457010749840148391327375865650412534634709886942860155000532772154389800507422188250397938278929072343707950784781113384513507031461144173804738382655063558283507313676715480627327145080788982511440936211454072115046770911038487295030563473119400441646575927734375 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000061618756113806845297910793084794566150258438921377125180303623170684954760552576644730701544186186185363628834159822702207108231334972639235273445534044559748792448309203894777006417895352923773758565418815352535617410963201875825537500927735535205789561064407813893574562295334388373125754443105168266318231361237090424313719330957502282083083371445594820504828627915741902745124206812355942091572689538988369508082430114287616683101447191478014313289019625090589973304203761668510407819859488655962499562587288307942749101413736147923811476245730428644797839228361317262443815241657052439450126257725059986114501953125 ± <2^(-77)]; dctAccuracy = bits 77; getAccuracy rEd = bits 77
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 152
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.499999999999999999999998348074777369267134712415503794033388158011735681312913175757409824859488655275973003304630361602302839188932855956467728388446273577705306732617497849641797614721813200684009623756671769837422309299623889122599254723267440599271374837108746780366538369750434726176821700237669068406969089888938480007040135691094741719150129777778314566527587944039480047080151083244311852496692019562544539827697587242028021137230098247528076171875 ± <2^(-152)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000032422642315394294338417910969181082861765344345670502853519885691312591087909319104046043693905117023686958610195142462567833763198850323299490285139435072817256676820424742350916711528452796760003159830084174375231779343038254260524200223159141387441195547580718994140625 ± <2^(-151)]; dctAccuracy = bits 151; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [2.562499999999999999999999996529012017027548056188394312755740589437891685520298779010772705078125 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.390243902439024390243902906467051637497075788884363024706203281689753612924990190961492502694415838498771759426583743640712335625242462512598607087376914913998359384262916476697605923981487060083342897285143846191614842529237285110007638807757878891777015802163695227376574157663441040354255155352691947401552502623645057866497154464013874530792236328125 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000016160301167795277212393913270657294098395483027850003868308403050531392402431128867059943197289666670046064144722398617825638004310228643643796524944966600096578882511726015291712123288471898910026247694266576981615674468278790459243942275621117131906367789822108815010432694943415695074324674270136079693938558039441527126630347504282330557749972697249914172013225586291600105026069808850641347824852872893488850263762746276509117144234740564059841410142199877872751828572442691726988226763521425207577238297727865939402304789595403827089220678498729465293565769563678434975382788331421668459597640321590006351470947265625 ± <2^(-79)]; dctAccuracy = bits 79; getAccuracy rEd = bits 79
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.3902439024390243902439024407543467227880653893307116258262222291470126373228088886863012799095378598181596664810988422519569279637656630102872720179461191329020831155048482837189773865341558733929520615610172990003565604632656273563501274268176764968280829095381534308584378055935401014447166827414021611110746102425035063652638023489093906172876729971042920563376488243668390657635757447577096421600034779531341304296813456142789533487302833236753940582275390625 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000951415303073309116368586204467681952894244717670572290489219944340888789226939479377641336819273026528357949194547968308300390519258846862770658081187793895270247414140206242942338750467320833848341420827505336698924160564945257285984769879405575920827686786651611328125 ± <2^(-156)]; dctAccuracy = bits 156; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [3.2499999999999999999999900695854222499579739827589485649632361496941257428261451423168182373046875 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 84
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.3076923076923076923076932807605732814260650598398266164855782025959841323713564706204843385805989358601998223601972103287665158920997217994268602420077410419641088360323980533165058878499987800186455047258838583019463718509702387033233653812774341762390262365601110668884444153484058567575139752936505550554487436955460044618604342758771963417530059814453125 ± <2^(-84)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000001942524384532863257919539945521212219574140285779147153349295196930379944249065233861899111360302602617025759078147915968357671641023664698987469787417862703128256449911363428060997384550472941872894342369934494641104039350213467254849198321767970159534511676510588245031308663423448424907464802672366664120785506322870032056869093417251032680379328847648208046805038188445381460545323007277399132939134901013096758447021348165978285575885005403140085580978138449992592314102231613566828608000617139889409628467102371292496766592787955976987323172426793187102843767118674282089481179271184263512850520783104002475738525390625 ± <2^(-82)]; dctAccuracy = bits 82; getAccuracy rEd = bits 82
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.307692307692307692307693248523261318013223048981172197203267179284400073331306468784691654304442023666345640139362676859987713357470559353446613443575155792875632061602992430504802195333502096237231430119909073749337453447810432402753667184806536163238793677504639348655315922294455933004624751047669579788462038173052390353921543390734245215914795544355622340959660659205750609757631407023641666813003155620623041683599289880410243324760642397606654102147312071626341834777830319155907747958751933053883782922118184537676835808728518227720592704283499120696977358870912896817832418404890272578544596626670681871473789215087890625 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000003292587839356614007798630813557739232267686268189816126259407239806188778191533475754471594061285810615089170765266340684666115140180198570806044233977478005710652438724296929525139460058796925750625455839855965351751801599758905092496519273481681011617183685302734375 ± <2^(-164)]; dctAccuracy = bits 165; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [4.062500000000000000000005788610835413850483355717861416907255023289735618163831532001495361328125 ± <2^(-81)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.246153846153846153846153491970779386088128406910161925281583503211686983535707603675088666935532946868761415266090893012160786136418006940909116911925587434980095352321812265768872207843168134222304863889277765273821415855298921117834923558301817490761689943914369827436384877110189866108950209680365342356606764089542449536196500048390589654445648193359375 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000025646990110893338674829662062139286960010039970188374175724898854797915161526139837903993036733874782262787313992481516836914734489395690365826449244846200387504173825324408010540967463145769154166210939651636065224650682145234447023689820234069760056530627688948090520338078722490749283546821195749610884171633408106676536406273763991532584221169092120322339954098269255685843514903657985296935985949384197379785916537280592800696821859111539144081960646212501486609151787591171584727445013598161339072278002717915944846516647249050951794343163564693992186010054606523662272407493452862359273325409958488307893276214599609375 ± <2^(-85)]; dctAccuracy = bits 86; getAccuracy rEd = bits 85
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 168
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.2461538461538461538461534968811152431881110264683699440997741298682912691271047903805878242600077118759807752381842914961372837324599877901005168090244557269201299171691806560386857173579409835615233056513026536977481336418778106575344122658767590985326916452568240299574968013552643079267643163049296636255432477107990972853681496355847971870851313503597279815702391723857739948262778272193669026240838386533945360745049228711313484569008468161310787536422139964997768402099609375 ± <2^(-168)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000011472955630287043709886200461323986522569825995151842165833060982086409550251525846069766941337180962695816483928554684356359127790849131185825295900577103638902696348583239231183339564277784644552277700071155985655474199270097146463598392074345611035823822021484375 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 87
chebDivideDCT: acGuide = bits 87, minQ = [4.9999999999999999999999933728552658851810398693878490015800319934413664668682031333446502685546875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 89
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.2000000000000000000000002639984300461301855085098363208378894521274536311373090663589808936347571156039209478480963507089366003696275912416449800647369539688179521567634150508213906273848403770847258064183355780206141955084703541251157633997032227845709794876874696686012651987780908570163817262402266241431601044502655052659267909120899275876581668853759765625 ± <2^(-89)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000012686909013939171588070985029515600830336220245072026428007007858171055325851719573992607420693046127268225571287328585754334750149015164323934905088726078487631198742699459122505652980292574350236583770798625261783711885569021611762426410280345411202432245817152315841525948153863808257837248477558548479681033223530059524170783116281537282240815981835885937123666774543338637550873478445260313105811012625939491752810137809884687538910635057950141063177524822114844997396745874756398990738652735391566667236966618521921930496597764301652476991038440561432411145177776943153279201671507388227144730308282305486500263214111328125 ± <2^(-86)]; dctAccuracy = bits 87; getAccuracy rEd = bits 86
chebDivideDCT: acGuide = bits 87, minQ = [6.062500000000000000000014888001470280628064985584279211923430796815637222607620060443878173828125 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 91
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.16494845360824742268041196633700222465868712625832563948477419896186328389525123943261638491875618004169062172001561567356214467356568327479464267675061253236371010039566200427994632101795929725262020813119948962631974866399284800784204269862109870759053191875388760720593751306666442060378771540100353369961350010683022636001106298042628850453183986246585845947265625 ± <2^(-91)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000001567586316451340870037841702142144411846428474191964423285474922908102313361206947916922404476960951962820716370834115166500217086143356873375909346453249505264985842190282162305861118739870268263336696871152938153529541003070666132731179551617842228568092010727036144129728929521119072129978831848732585484522093969567858580586884408622890983575336169192412471204624770645691660104519149200047929439960343618266705629843802707085300422243095024272874005707913721815550786187900777689717742846111722515628201903258918591569774671348110950172905210777280918331246316596419708243747803103236571065082216591690666973590850830078125 ± <2^(-89)]; dctAccuracy = bits 90; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [7.249999999999999999999999999053366913734785833505925721660656524392152277869172394275665283203125 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 95
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.13793103448275862068965517276719226218694513258840155279170898116445325431195828447304510967773124576835378146652642904512454092987936104345691914915612800694878769694698088854176914610304508305142158759373472445316109142976434285545795704949706674232447182368129036741938717113685364943279657082838170963537658372138494875251864268950185987705481238663196563720703125 ± <2^(-95)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000194962024727592062071417253897499401512453841473238717675226045949363625526988249112371189634452336114793117946559020335392769538838895529078963810541806127992564734098792930552361945974157189142490191699622775626756478851582622148972784088052238326425765401707742549530227662729524217819505622184468359046727183996528016920590678659865554045718909000414883910159614116997810639994243386807375585349128879102655608579434699906802259335934566500833055504345866748086957154530763428921771769954643819279654286513032910547920015584638133140006083196642642479296004310637162159207558845522260276318660121575021548778750002384185791015625 ± <2^(-92)]; dctAccuracy = bits 93; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [8.5624999999999999999999817498165536822437074996389310961412977274420654794084839522838592529296875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 97
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.116788321167883211678832366370072587848290386467033935086770941878969224233845703463872444107424378082523424446983942794750281707484258649881152090489888720860956081414970245711355894602757530571152927845719755416214695591792053194847390325797231807533510506972172410750971088320565518273987308640721057616048073191471916149855765632015192068138276226818561553955078125 ± <2^(-97)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000504232294738576676265789217301311523209565636541514429188898519612807239980043721984481389079730553579086789806041200649325023638162509983227918373862268997325809524491502428727622791873470388558023890235095933637183478435584542909441963680599726373172041549434599775561688895611590022040016402485722547464955852517867837055427589578531938849052978401086665605113156302675354180363648135975848520998771402599566189373927420066995585076686218319436057540388552441754226260462749763105016044288699242523751520032140028037231592838027401986796746679815070849409467745129363503623224786332268697146286040577933817985467612743377685546875 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 88
chebDivideDCT: acGuide = bits 87, minQ = [10.000000000000000000000009924513898178988857712761321766721522852350290122558362782001495361328125 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 98
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.099999999999999999999999901258117167534034949209817195205252856127031896652886113699022733607780688750435777108454659021692979009032424614662852928163254987027326808755241275656471905919668849494774807212642179382037574322403747414092780242747505648943681642300751875024349735035378686593720045779704329565979645444324543277999674251166339900009916163980960845947265625 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000004383061907592995468280461665648552602288879216632757448575747859236379840450065397263821812589203742282865176305772017581885185574813430666158020040119865459335647407536623397695650120343995239754271443666140751038896016384418884639463002635599052260233121578902531848984386325267548592823409215683900923581862734999458590444585825838203000673971122004966279576264960813041487314089385198905552243657194093517098262504368492344137169953914323130707017715299312963702779571568808030446422635288033390689269634857226225449875808446782522073373873005742688997073528459075919316020314786897104524822366133918194464058615267276763916015625 ± <2^(-94)]; dctAccuracy = bits 96; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [11.5624999999999999999999891965625247727268610752638861092871092051126424848916940391063690185546875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.086486486486486486486486567646923545704229657770454632965114579237982774255372851211087476978443264203590462357190084362838919283531314714897999580959202898311610311914825956755645642264743104200810553936406146309634181609030126904983886402689831272524561569852199812732016606776175689660232527163971728455369000759242909249539734035938653988750957068987190723419189453125 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000012359426191390496786543501582271112905773420593703939738572328007867577020882756662281853986493069227397852274312390288431305624184337419115733884403784580604040967519198014382025534031542994612818179574456483838714422198115085798106651228678528198256765521967924525261665884094845961663520339794662813965796179304484902861463223058536712832817181333207308929115440865588061988038775588143038390820744142575796943894093083810915503043392322814788955974092142747374761335467588548983085845861054203251316051549708423339221104145927965120782362807629169467643143084211013058644209410690483112531777576403868579291156493127346038818359375 ± <2^(-96)]; dctAccuracy = bits 98; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [13.250000000000000000000023119417917463589009262590697369073311495668576753814704716205596923828125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 101
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.07547169811320754716981118908811947759721231450249717004226880357986686343138658299045300281896895976010611523238781590101186054180989622957002131034050488667274648649926731349099549006347138038023152714668895302496008556746982515730556300618402654225233131152026746325924375772245709222747181275488787000342056122318829125216973520429153410304934368468821048736572265625 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000616610874718821476735082873746920820729980409257715473069926511433378816926233837644743106924861704233723942837661988391531619619326510250571774855137189638593731846635168524340272195978599446022496853317097645756159943233029974911589590503352149871643401510751038538164074393733344525106872166972872989775589972464077721384258538905463041582777010078684990861549192766839300473254166326986582607043507268103957180563138489719422952866532813388671692422023042304653739194028183595012717983359994687418940738142980143110918516984652959890570465405682494789050199201310547488953631577780024330417106559476536631336784921586513519287109375 ± <2^(-97)]; dctAccuracy = bits 99; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [15.062499999999999999999999961188043463126219173742954588086917500078243392636068165302276611328125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.066390041493775933609958506651642648478735084043441313755839969480705487895402791692582853035856139752410510771726964430467697433181903979142390002192783553292159929947556179457974004550289181357735436776660718603506238681126545736448993177329377810329857478120809245503766956664196899167569294968650289488271528206660545398569978742774055913145048180012963712215423583984375 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000271606079686908912935225687895736061948912495606469246056471198138989392345341780845853034834136073116446070410524027614667324903529668783459263808616894151634384042005206806220432766699509439026224719908884045585979807749196830109817625255718991993163316238924559656932681817498724662424893230168034057291846090365050000849122133869018190233862232829081791649200402859556824754398203537180416458031176044611181007502707475195620881121330337046220697855268598945223954635335781747127702328189524290144733423820358794404313280522862721219283662367336378504003139109725948059124202486822524522090162302223603774109506048262119293212890625 ± <2^(-98)]; dctAccuracy = bits 101; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [16.9999999999999999999999733997554263540425876887085367204603680857388781078043393790721893310546875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.05882352941176470588235303346080268774043106121838959330896099718367377225518026618459637826042298998152223187262332773919132510295098150370190896974899689715017864068106273043795837167352337770419481163081158072874006769141108496518899288777141531579729890570630396519297453762461441169825068665033286589292838721918351717949079645610631350560737473642802797257900238037109375 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000742961596124346377589183592858174526560051675450753144249747296856790418223262537759420574569092737729083299802330533881441862373897762426307829534486089849354669098510475093036505563017434133251980153848360533280498040991224927747184273630396450731627795703388563154016996689220455929763340050687160729027706790327797045074141496371045526326110913736011172506394112144860021809805712854271683132902704239675991148192270067208914529191446819174189945061027673416160633241995461764846876112371831624501765397593597122000056259468993814995543959854414070259069461838417724022053783296821664381792520159830672810130636207759380340576171875 ± <2^(-100)]; dctAccuracy = bits 103; getAccuracy rEd = bits 89
chebDivideDCT: acGuide = bits 87, minQ = [19.062500000000000000000014020027282596811427632724279574057135722142675149370916187763214111328125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.052459016393442622950819633717749048556612194107105184311127363641945305023849822459167089133088969653070641781511021137376506755258270158255875933125735079444132985099166966820658798104193642871246237394499672347455190452010945686555770495397657352316545267403418755700821529229084412073309927542741354063436142384826793294888209033565752703598406014862121082842350006103515625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000034656660625266900639527744166265049038455524490568561722225437776290934773893088066543307301167479808715449520855086524007702086311357600723389754046812612090433569202228299626867631159955088941878989557419672538225773590817992477619495920530428418681397841060317566802172034870952934784885306925625451890428967185350349038915632532068389623222860825086999685055103775636491216355816302435244145551086957384371843049484616385887399843644800530859601279736671639353024015474314626637597566080432633072737911659885318494913468142966470773740881367500359306350442305341732458668674676789643519886851240341396618305225274525582790374755859375 ± <2^(-101)]; dctAccuracy = bits 104; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [21.2499999999999999999999849798801053129568778440594206745155314575157490253332071006298065185546875 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0470588235294117647058823863576708123117858487500444399076637761369400852121639941175885188996825843087195882169809269882189251588204716735622409248429665028620696266167592484928429969628759495285561838111741735537088680121443368597404710664092271477949050199069141818792375916795722274803993572340639671744224875729702073660775063119478776874071712654767907224595546722412109375 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000844381569731704304748314375748375019207854857974476777137930962065350438280800668370824555452911146252013210237936160895271784867757261087618322153844608872858242646950773605175911123028461919247477836118781345990441367345110135412360636866272626861403598114750730155488302109287327212237830458634453103200086734056309867087199658028281196338017302586813687351796050076604468274000733855271809685187231886022153034857285673176233196731054774148637728117684271591992944353217074938000447813766011058482747415627242441539624755571106851330855357431859825479839527852362061092525290179606969307951158491831744612454713205806910991668701171875 ± <2^(-103)]; dctAccuracy = bits 106; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [23.562500000000000000000031396272752787280233531312680886511679023698206947301514446735382080078125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0424403183023872679045092273664144379654055776378685430240078967289837913690012838235676415639733135133672105483597364260519300798998130569854356823307933106989535654931791770724977772654875834621266361443699827768216386231148695380723876294733637464670718922588587975307152182597210570281930961424409945146119147410663902993698550059252180312319158161926679895259439945220947265625 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000024234994297592421830641443532073621058580772252545520429772136373624378040705511757489465866793165082125169588561960107051101740704829629139141224894705388553125891132368976583640449918478032305037652029481760082400831901594528972054831683635711669921875 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [25.999999999999999999999999799629330073863001425420944418172297663005565482308156788349151611328125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0384615384615384615384615387579637170202022566183570733086328114741502956670805497745430691759199727913588039814724724816230111172707326977377068545833934870743101231377417293477896619008628958803610246610092581254927819388860993549378039672989847687147544414258222230684683572180622745645290267786399991010860903886089400168316921537870506256177882686841940085287205874919891357421875 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000007509051821374256072328001047249548670723881921707922714721381383464247695563616275996729911655302173393955389435088693196561613049066666036038717721764070996876145741617255607537721323757470106476981180762262963086783873478680106927640736103057861328125 ± <2^(-106)]; dctAccuracy = bits 110; getAccuracy rEd = bits 90
chebDivideDCT: acGuide = bits 87, minQ = [28.562499999999999999999965251144130670320810602146330406244705550211449590029947443339186633927652873037497700612038536148586759376429616621523590050676248549508276837332450556689181447713471258846621984802233769450830252847444629034866317794263027842566690385328551824733090032382154532797358115203678607940673828125 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0350109409190371991247265196294225001348687543626730917024064609957990570555660574442430657106778394290055672060753400705231140383348019047338444040011107773175823811806459000151988828838509834173364907334597784369387049883187913443319185150489143014499942095435728721328377534240086763754070887893837221728823951871437890881922215276030220459132881741731783204363796193036659979473301783614036332497729253560471007588508048588152857317388817065810153160276969890495583194958421660903590995327948436773407647265553168794111579162083028373017701584537784411209771304232176632407426362306754782626021754872193041399279376274013329548709094806245386931165718194320471707623571543110951864719027071259915828704833984375 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000001890851362426571997253010276255119077986617422094697055609913750473074917783824597125678256671803231510950782925090759853736126276660360661294143566967975381252265562836969694026254085243839782744600988210902418971462192060620698862342912424757383314001865855832601295383719123744292907318698127028255839832127094268798828125 ± <2^(-108)]; dctAccuracy = bits 112; getAccuracy rEd = bits 94
chebDivideDCT: acGuide = bits 87, minQ = [31.250000000000000000000018075150988667318193115606734838914093632666890698601491749286651611328125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.031999999999999999999999981577085100583702220344094136439673264289288779377704132815984001046485168968489578536854637106486182681502477552766871485777430966657293637862134158923046665637994000028341028151412224290528261545199849521261739364475125264872925195733717008716570917141176929015314489952892710983983990188273374805777932435520396667848197491679229642613790929317474365234375 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000152411716903059684604611682809064907631477351469980561401118091868545503518016077203297332976594157425806711853340810500351008282954629139141224894705388553125891132368976583640449918478032305037652029481760082400831901594528972054831683635711669921875 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [34.06249999999999999999998096757576917784663315890309794540807417509525998040631954918053551572638876919294514555336922810645381286422119167689551759029832741249528837792792524670663202301729513757090858061516401578128210303475498221814632415771484375 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02935779816513761467889909898048563248891473500125131987583402581167799357189432033042270014228946146392324391063596562060327597903128609556202350557048615517592036356738183949568535361061285026275167229539981453296759142440271179920549144725217342714633984181395185450722005883293351591607621550627229801965325229049283704278560679813209014739325660721739175077366471886999674166569552818567762503537259715793464441175717264887710679906015534300653325520826228928270799407336659254918672368217222514618963923814609445100652781245955195006428184282472885393692314290866984185776339047108807292136662147282126158506681950267005650863106605434460466161053803902579232933109701884910602842637672438286244869232177734375 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000297906732148264850338731211071101041145914862353256422252460228465996573465095506608342045637959194265200067136407732840127913027170320587817016503971533672224236055855084172467781409105635362439645322854135483530188615164996176766527033266451007390223880760740090040341083665550482584283287224025116302073001861572265625 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 94
chebDivideDCT: acGuide = bits 87, minQ = [37.000000000000000000000039506520164928293764497077591416225594844746638045762665569782257080078125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02702702702702702702702699816599819527359429526370977770794677189708255398891398104627278829254885920201484514349240259233764974281874627458160086153120937409947967878062301215771786121188108138301339080255862131890450976244926423790752508160750166503990009708829547435894500454028631078868970923469658636047994775276694471790500651824728120900011296701137553100124932825565338134765625 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000329442098566120711916332038805993371077613620295698331624203185716904444653603642477295311380702341878096724615464640488771751173092592242243732067646706109375636523120697559743178513198594503598322878201257201714879929710377837182022631168365478515625 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [40.062499999999999999999999799629330073863001425420944418172297663005565482308156788349151611328125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02496099843993759750390015613108934262916797444478333384652968367422921769134328521629056564222847702466905271709197916899707617661628053885901517036432074557821472107280950144057939747328572087658766030799314530091017311043003328588787351154432938496859736511752337586841774558908781267065978533516821322181464267037528634695495024427355976984373164828667768233572132885456085205078125 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000260350241905078923424137163486854611758226906794045086879637524468216044648792482484158639351345217095544478277913781532523083126948147587589971308234729775001018436993116095589085621117751205757316605122011522743807887536604539491236209869384765625 ± <2^(-111)]; dctAccuracy = bits 115; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [43.24999999999999999999995697933800514004406188805898206426255514078695808691644156983853335788702174867418398118877297539246241802031714951173746737156780190308112489744887551973041237457838030962954214397853634765933605876853107474744319915771484375 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 117
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.023121387283236994219653202194501179970802426008275011418530524805577438067918551397837269274133991649965652421225860892463727658698410941124520659469990228078133383384979706386318663361009606200903908745520265105594255974984109020245779749036275837666946391647266030040298309340697961756551830431830114103943186825008941845594203815054691185734461047507968638914008828260861436900558352846868009997667382755460253567597015618544962638408288872755228807267899144469099804395625595443122275930875775640073854918750693622314882550442621166778731620725804691837768327523615802028256652095575419507723764915891497969606200685317879339786769899741115744750453982308033972565942753239764950734524973086081445217132568359375 ± <2^(-117)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000183561504538229773962573283724817011461494545308068729988276021984202608300060857814938581246942805619205983064108431215829817324045320587817016503971533672224236055855084172467781409105635362439645322854135483530188615164996176766527033266451007390223880760740090040341083665550482584283287224025116302073001861572265625 ± <2^(-112)]; dctAccuracy = bits 116; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [46.562500000000000000000022211054051432456567472650195188728361461727445202996022999286651611328125 ± <2^(-79)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0214765100671140939597315334182786154850867683519431988983368070334524865189475325335341815395508250744020193810379825784570060703483275998149415174683680687452047632968777500283686068875500688919353602653896566393122142016272543678638200562168813726212095687832251800671249348209351664884645976402926002443156294372447185736466317489918595052948192825059692268041544593870639801025390625 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000012297781270950085696012119136534790090799512851645689966917244144416602618099351787367253701688160097550532126246895955115190078368518448448746413529341221875127304624139511948635702639718900719664575640251440342975985942075567436404526233673095703125 ± <2^(-112)]; dctAccuracy = bits 117; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [49.99999999999999999999997683167270641270825880185920995324019159473132298168734492567988223968577262619396644116475056606845381927313245264179353629780215966352048966452970700862622018219432983518084651192148713805263327003558515571057796478271484375 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.020000000000000000000000009271046766332007314320339052391540112843726618452187029010966733668390383591072749744447331230464109813778094182327679323164108174796297597897341365840053232602669300916962912111717202052510341906483511715188381851802438705586924584657200940051507726995087672057092855085767028828328382029266161324308910304749469457532456475605640966751147185080383037375174087196965309394829393899024588154251746700410596273980843544321873869626937849536892649409815517390594470780251045998641190420102528709959324681343041966274656685072115940573618969455631491080885696385192512243779982763316137195857017509998496713749935142636842235507283172349576868697093091388483632186989780166186392307281494140625 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000080366927562175681139939712900734160405792171414999091323213544452581322648904713398072872966419865930966379935358554001398054628732820587817016503971533672224236055855084172467781409105635362439645322854135483530188615164996176766527033266451007390223880760740090040341083665550482584283287224025116302073001861572265625 ± <2^(-113)]; dctAccuracy = bits 117; getAccuracy rEd = bits 95
chebDivideDCT: acGuide = bits 87, minQ = [53.562500000000000000000047460257573473458553269155554593834722698630912418593652546405792236328125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 119
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01866977829638273045507582946112089848847898388092026636571120271479611389998594270732252152965847637251250148512698557977024893361971164560901647035012990932042804992370908120761788901267741782323591309080673975334639477098160973233435717052074033053168995425148418940811870384785724490918119013767380913319226003394121498608302410804818617496669656830032835159727255813777446746826171875 ± <2^(-119)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000051909554368558249672895329663137287602609415734027109831717053244971599112408104696106397241805362650466063951001113616195734845454629139141224894705388553125891132368976583640449918478032305037652029481760082400831901594528972054831683635711669921875 ± <2^(-113)]; dctAccuracy = bits 118; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [57.249999999999999999999999476511903295336565928776924078343057988860209661652334034442901611328125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01746724890829694323144104822226077951913349000147520455900314167826973313188690881277657286434399221653752852810138602521572408056495104798515429879291988198628994152530471260260609951295013951013585288634958434966084310032265319554987234052901812316972010623815577823133720232258889717428864752575867983861561209492765149973643056688617818120114362490102877245590207166969776153564453125 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000003338347783494912667834890937059097085424163301098257625194550507113934097878254927362019226304235234939656872599538604086417513817986069069247848117604733125076382774483707169181421583831340431798745384150864205785591565245340461842715740203857421875 ± <2^(-114)]; dctAccuracy = bits 119; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [61.06249999999999999999994870753187960976731317397163372228040473136246658380293569633788008184643556840387530686944811079071111995927586662600376885229619194901103263702137087940671499837966630089351561954490055805637794792884870379958435830581121193513338077065710364946618006476430906559471623040735721588134765625 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.016376663254861821903787117136566812284904763442610946114619591881006642347410054147714439116772726261962285050108727455772071220291615135305503668942993939288114507739678158889820082246537951661164226095043790083844273489337056431448902124361632195146888751572080119881057341358172673882796672717246524919121287282911042152042929479042988500208376522732535955410239607234197345038673396540407815470400108789765868893822061956475392236635418191390942411144812652186828649735000430990271754885268989128698138810152920482982040138999281007976268424642354096612325081419282019015793297150154155348308015265008293592476346961891862486769197947609997470042352273503591789625627255476414401158535838476382195949554443359375 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000002147038878541000165396336266861732011693577476058633748453699530486640563626108347907722061102661594696375010182254000970121208474415073477127062996441709028029506981885521558472676138204420304955665356766935441273576895624522095815879158306375923777985095092511255042635458193810323035410903003139537759125232696533203125 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [65.000000000000000000000026185398400808331724081371645368628009453715321797062642872333526611328125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0153846153846153846153846092664275370326291008233987846758875618261778800366784562784587291059536049618464038047167102600796984906858444822417685306634927153250497213048812400351210354254681057229433667017151870420152286630969903301645436860600660326688441774370857186039915522037456766932215463100703317653121864300998975090041817928481821586418989457334394188592341379262506961822509765625 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000013847196905867519807408469149011758473278598818045313069912252120683258755196643080635008782811789139030848400409875773159083234126504139141224894705388553125891132368976583640449918478032305037652029481760082400831901594528972054831683635711669921875 ± <2^(-115)]; dctAccuracy = bits 120; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [69.06249999999999999999997269576964364756988444481532196107230901436738598296837030217922896364515648319498773677613190403045382568204371360669155500530599191454569095113148877054580834137136453279078444322781026032398443703641532920300960540771484375 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0144796380090497737556561143238353967664465436934792391143310815514899518405291859829412633665746564187942341476850639406853230730285040210544935225100054591521578361043075368396941053273552321368252293308077225211806604528178325163580100382352820984647844309352534818414864353297564630842270360464714105157325588992678373809218458545576229561522263517959013889886320626586259678455549028760100972836682523139970959229125683089427964688530201828053104331982295766514147623946456000387369279096033492064101365618028348058217386787856551592511117808241205885213996394674583288287626153966774663185358016846351205497683664107895355482572965104398693068935727826373072995257739793185935983643730651238001883029937744140625 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000897130700482910634741963648705888239054311247185079418617117244075607176778592609419808250808944762718002726553112253018613640115040073477127062996441709028029506981885521558472676138204420304955665356766935441273576895624522095815879158306375923777985095092511255042635458193810323035410903003139537759125232696533203125 ± <2^(-116)]; dctAccuracy = bits 121; getAccuracy rEd = bits 96
chebDivideDCT: acGuide = bits 87, minQ = [73.250000000000000000000055732063699003735301983242475293463258356752021427382715046405792236328125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01365187713310580204778155959348249104496916129198851825814494452970795816575266384721334127108326400604471826016062470592658212624453192829655993608474495594986162488334742365804978055834981595855284295490141948071325917851241282241749041187622453119778019076310582538822833341441569014114183974675059456346885602332562585268556660909384329327868174384918997787963235168717801570892333984375 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000005845320878780771176361340832411453442911154942821054480914437120023684823363024470251815732118423541950698771286311277625011837885647587589971308234729775001018436993116095589085621117751205757316605122011522743807887536604539491236209869384765625 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 91
chebDivideDCT: acGuide = bits 87, minQ = [77.562499999999999999999999476511903295336565928776924078343057988860209661652334034442901611328125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0128928283642224012892828365232237004317169380210955510099749173066291754418778166247883971445871202133782224218476624959005303758859551836594322749828416370887084865330192675146161372549165634227322968590241031788479527002839809599963021463925012878663824676149051236453656411845055117581338603188813528233930357743713663809484596101787821174748140118371253493023687042295932769775390625 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000383291781205480724566316820561923863414657081195428434325430022183874051386050993145171289928852213582846086071025768583793002099236069069247848117604733125076382774483707169181421583831340431798745384150864205785591565245340461842715740203857421875 ± <2^(-117)]; dctAccuracy = bits 122; getAccuracy rEd = bits 92
chebDivideDCT: acGuide = bits 87, minQ = [81.99999999999999999999994043572575407949056445988428538029825432193797508068942982283722680580578946267622657241153565131646243083813967144153350478657546640513152747065243904356958869293244970484941800659118259220203839277019142173230648040771484375 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0121951219512195121951219600793521522520161424697406999572636133241616043686761533228703385284121812800014278310842600237327103271343454504532905201804839829763737094384101154165108817284304265517198195476200471269112788976609564497826198022136830305697128311618615345291594015953558798142248151672084737824486213500701074331170602290906252630765556024270672872594331057383486044649358914976894445774122099054510375330615803511687295770106015851525062756635907606307619554935405385990098486290717560829318090427573210544773435620448324640783812921694866969996211499886751238923840440188615610293002106683791508672839583897651175796816576867363853390577045965872033644350434507079572465926275981473736464977264404296875 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000002530520995807386751604193524569799497695650111828327539549091764386498827305774297313661871944423270498900862963773186750380068185945587817016503971533672224236055855084172467781409105635362439645322854135483530188615164996176766527033266451007390223880760740090040341083665550482584283287224025116302073001861572265625 ± <2^(-118)]; dctAccuracy = bits 123; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [86.562500000000000000000030321301463573470098438415105718442277282775876301457174122333526611328125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01155234657039711191335739672028924665739462122463705844071365920769345258608040632706189490968984195412567865426314633149506848843727067734086857390668529790679919509063454755048062142645208772625964411733246136726132975917143787282611556496621922002119869892626242611429145399626443054651470571591981350523655538502638689314939947120342257638682566256438377649828908033668994903564453125 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000001682514825205403629971999298390005409478551019296300301461565774543908856646018413318434278378712888289777291318073586997436917231350712589971308234729775001018436993116095589085621117751205757316605122011522743807887536604539491236209869384765625 ± <2^(-118)]; dctAccuracy = bits 124; getAccuracy rEd = bits 93
chebDivideDCT: acGuide = bits 87, minQ = [91.24999999999999999999996855986658088243151008777143396890442643400344898424939567867857568760454034019600903238751324199245383209095497457158957371280982416557089223773327053246539650054839923040072237453413338259533560403724550269544124603271484375 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0109589041095890410958904147359036871505111433922325934643344300135166823987357243150155800025597456629778097700841600752176447669715708174430677646904150332351629336094292083560974913479567724928977817249990580161582241037575181114550315584893243835319796210936951476814315145914664760332006861213413051722754179377244813105574184300476403989547182716856925734075663351305306600881109894613580100357252399653633202620117300021807682151336800507304879083676515891810872064949823771112941647158772140672785690408141758388651915527493608658479749129946991435016047206727770262720421551011085576251101926027991065828815162877246733410020029078043762463515727852564782597743188127283053834304382689879275858402252197265625 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000001126753320761464624839547006292544651205802941568935416547602155826341616805854541558874944291483492025913657493338812171192850190046139339889440975091963196206548873198650909308732967430942134689657497368548088915038269371654670711154108144631466445895665647578785298448207356672261247876321021976764313876628875732421875 ± <2^(-119)]; dctAccuracy = bits 124; getAccuracy rEd = bits 97
chebDivideDCT: acGuide = bits 87, minQ = [96.062500000000000000000064003869824534012050697329395993091794014873130436171777546405792236328125 ± <2^(-78)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01040988939492517891997396834917478426532267708209625291131390207416786640344504888794098749698416823024446952682173640906468587660464280627125169914329024726937290683267270845366650282049330877216682424686205805834203632185317473516522396217787923948596743000239817979909990715968450358252275742646836299360922033329303120305730332029743735891534831407116701296189376080292277038097381591796875 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000760032866669414866137097260149164188205200117884573773161425097147093168480930305903942239178654270526014335612091733750381435907486348538717721764070996876145741617255607537721323757470106476981180762262963086783873478680106927640736103057861328125 ± <2^(-119)]; dctAccuracy = bits 125; getAccuracy rEd = bits 92
computing integrate  (sin(10x)+cos(7pi*x))/(100x^2+1) over [-1,1]
result = [0.0349198980894169348959456130802837160968037695376858562573414849582957651086171559539500867379265054571205657076761121226889420775417107029422853574344532784790301985186757951413616295000791387050980543937257658178749159368312383112213097405838835916933180244206081220001839800222742135591313029494344303299895707963137615511351627595677192583736407828579189044012518035624544615416221238939864786235065927152430745913611843833167971151424689226826404972587007644747274456841169334922824263556318793288611655465072696458970681503461678728369016239236394515160809301827752483101171389795027575337057673199424366978020830135675191947403537566654038822371204206759167178964419452069645188885260722599923610687255859375 ± <2^(-85)]
accuracy: bits 85
precision = Precision 712
	Command being timed: "aern2-fnreps-ops integrate rungeSC lpoly 80"
	User time (seconds): 262.32
	System time (seconds): 0.52
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:22.85
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 16804
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2121
	Voluntary context switches: 1
	Involuntary context switches: 387
	Swaps: 0
	File system inputs: 0
	File system outputs: 328
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
