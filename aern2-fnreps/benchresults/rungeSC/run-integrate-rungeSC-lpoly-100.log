numer: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 107, minQ = [97.0399999999999999999999999999 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 132
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.03050288540807914262159934047e-2 ± <2^(-132)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.63746600240464206021587388016e-38 ± <2^(-125)]; dctAccuracy = bits 131; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [93.1599999999999999999999999998 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.07342206955775010734220695577e-2 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.24089970002035054343702451854e-38 ± <2^(-125)]; dctAccuracy = bits 130; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [89.3599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.11906893464637421665174574753e-2 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.41160471099416388208745690168e-38 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [85.6399999999999999999999999998 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.16767865483418963101354507239e-2 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.48495863727698720724343819976e-38 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [81.9999999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.21951219512195121951219512195e-2 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.23461094441034404982868607681e-38 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [78.4399999999999999999999999998 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 129
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.27485976542580316165221825599e-2 ± <2^(-129)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.11000792323750883130113205414e-38 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [74.9599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.33404482390608324439701173959e-2 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.80125879144323886646437850001e-37 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [71.5599999999999999999999999998 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.3974287311347121296813862493e-2 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.79267750102384642316262801754e-37 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [68.2399999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.46541617819460726846424384525e-2 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.57221048750914966709797577746e-37 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [64.9999999999999999999999999998 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.53846153846153846153846153846e-2 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.57161984840230535063538116437e-37 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [61.8399999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.61707632600258732212160413971e-2 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.93863388473862600057082538798e-37 ± <2^(-120)]; dctAccuracy = bits 125; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [58.7599999999999999999999999999 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.70183798502382573179033356024e-2 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.21622731132121206436169247804e-37 ± <2^(-120)]; dctAccuracy = bits 124; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [55.7599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.79340028694404591104734576757e-2 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.40512530479557620465772955926e-36 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [52.8399999999999999999999999999 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.89250567751703255109765329296e-2 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.4610616291190894491579026236e-36 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [49.9999999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.0e-2 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.85898307643578481617556455568e-36 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [47.2399999999999999999999999999 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.11685012701100762066045723963e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.911150997586153818545203303e-36 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [44.5599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.24416517055655296229802513465e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.98825464580139852692673677021e-36 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [41.9599999999999999999999999999 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.38322211630123927550047664442e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.96729729579647616361774968718e-36 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [39.4399999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.5354969574036511156186612576e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.17063248438706412175760680518e-35 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [36.9999999999999999999999999999 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.7027027027027027027027027027e-2 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.14964698471168640406216886902e-35 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [34.6399999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.88683602771362586605080831408e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.19884692954402789598924957826e-35 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [32.3599999999999999999999999999 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.0902348578491965389369592089e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.86393318750540174499012097823e-36 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [30.1599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.3156498673740053050397877984e-2 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.36404466519389961724068776231e-35 ± <2^(-115)]; dctAccuracy = bits 118; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [28.0399999999999999999999999999 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.56633380884450784593437945792e-2 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.36600343580627545601035053539e-35 ± <2^(-113)]; dctAccuracy = bits 116; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [26.0 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.84615384615384615384615384615e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.89719391559352847373411091749e-34 ± <2^(-112)]; dctAccuracy = bits 115; getAccuracy rEd = bits 114
chebDivideDCT: acGuide = bits 107, minQ = [24.0399999999999999999999999999 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 115
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.15973377703826955074875207987e-2 ± <2^(-115)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.33699391171514443916170980721e-34 ± <2^(-110)]; dctAccuracy = bits 113; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [22.1599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.51263537906137184115523465704e-2 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.5226239948238876791957437064e-33 ± <2^(-109)]; dctAccuracy = bits 112; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [20.3599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 112
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.91159135559921414538310412574e-2 ± <2^(-112)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.02422168670948062744956690214e-33 ± <2^(-108)]; dctAccuracy = bits 111; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [18.6399999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.36480686695278969957081545065e-2 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.16355651412943795509852946164e-32 ± <2^(-106)]; dctAccuracy = bits 109; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [16.9999999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.88235294117647058823529411765e-2 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.42595759100997235513841780061e-32 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [15.4399999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 108
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [6.47668393782383419689119170985e-2 ± <2^(-108)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.68212477788817794613319965543e-32 ± <2^(-104)]; dctAccuracy = bits 107; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [13.9599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [7.16332378223495702005730659026e-2 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.7387137751658410751282667371e-32 ± <2^(-103)]; dctAccuracy = bits 105; getAccuracy rEd = bits 105
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 208
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [7.16332378223495702005730659026e-2 ± <2^(-208)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.26104155968053240115599809589e-62 ± <2^(-204)]; dctAccuracy = bits 207; getAccuracy rEd = bits 113
chebDivideDCT: acGuide = bits 107, minQ = [12.5599999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [7.96178343949044585987261146498e-2 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.92340238802035559455456682818e-31 ± <2^(-102)]; dctAccuracy = bits 104; getAccuracy rEd = bits 104
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 209
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [7.96178343949044585987261146497e-2 ± <2^(-209)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.20437452545185832820320066776e-62 ± <2^(-205)]; dctAccuracy = bits 208; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [11.2399999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.8967971530249110320284697509e-2 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.88070214734979526814299630603e-31 ± <2^(-101)]; dctAccuracy = bits 103; getAccuracy rEd = bits 103
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 203
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [8.8967971530249110320284697509e-2 ± <2^(-203)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [8.54513285253576435646865272572e-61 ± <2^(-199)]; dctAccuracy = bits 202; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [9.99999999999999999999999999998 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.100000000000000000000000000000 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.52709918247060204626837999156e-31 ± <2^(-100)]; dctAccuracy = bits 102; getAccuracy rEd = bits 102
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 199
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.100000000000000000000000000000 ± <2^(-199)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [8.93898713795593919615752718057e-60 ± <2^(-196)]; dctAccuracy = bits 198; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [8.83999999999999999999999999998 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.113122171945701357466063348416 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.46113519172209765674301185029e-30 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 196
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.113122171945701357466063348416 ± <2^(-196)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [6.30082799689146307533494998924e-59 ± <2^(-193)]; dctAccuracy = bits 195; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [7.75999999999999999999999999998 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.128865979381443298969072164948 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.39883509262874232379920871013e-30 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 194
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.128865979381443298969072164948 ± <2^(-194)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.4091752224310567208432196707e-58 ± <2^(-191)]; dctAccuracy = bits 193; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [6.75999999999999999999999999999 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.147928994082840236686390532543 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.22412160352266581080248385356e-29 ± <2^(-96)]; dctAccuracy = bits 97; getAccuracy rEd = bits 97
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 191
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.147928994082840236686390532544 ± <2^(-191)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.59858218269057450206261471961e-57 ± <2^(-188)]; dctAccuracy = bits 190; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [5.83999999999999999999999999999 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 96
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.171232876712328767123287671224 ± <2^(-96)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.85811034974691077497636382573e-29 ± <2^(-93)]; dctAccuracy = bits 94; getAccuracy rEd = bits 94
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 186
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.171232876712328767123287671233 ± <2^(-186)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [4.13906068804287138982005715663e-56 ± <2^(-183)]; dctAccuracy = bits 185; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [4.99999999999999999999999999999 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.199999999999999999999999999961 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.90003997741496911460169528687e-28 ± <2^(-91)]; dctAccuracy = bits 92; getAccuracy rEd = bits 92
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 183
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.200000000000000000000000000000 ± <2^(-183)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.60447762728665583484240887112e-55 ± <2^(-181)]; dctAccuracy = bits 182; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [4.23999999999999999999999999999 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.235849056603773584905660377253 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.89350006536710860639500141672e-28 ± <2^(-90)]; dctAccuracy = bits 91; getAccuracy rEd = bits 91
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 179
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.235849056603773584905660377358 ± <2^(-179)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [4.31710897393883069529926553239e-54 ± <2^(-177)]; dctAccuracy = bits 178; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [3.55999999999999999999999999999 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.280898876404494382022471910242 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.58771059881063771453888524427e-28 ± <2^(-90)]; dctAccuracy = bits 90; getAccuracy rEd = bits 90
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 175
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.280898876404494382022471910112 ± <2^(-175)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [6.37018541839972982527345038639e-53 ± <2^(-173)]; dctAccuracy = bits 174; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [2.95999999999999999999999999999 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.337837837837837837837837841440 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.2528945503635121017111358438e-26 ± <2^(-86)]; dctAccuracy = bits 86; getAccuracy rEd = bits 86
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 170
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.337837837837837837837837837838 ± <2^(-170)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.53067640183529904685200114369e-51 ± <2^(-168)]; dctAccuracy = bits 169; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [2.43999999999999999999999999999 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 85
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.409836065573770491803278702688 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.05497523887351309946134565219e-26 ± <2^(-84)]; dctAccuracy = bits 84; getAccuracy rEd = bits 84
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 167
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.409836065573770491803278688524 ± <2^(-167)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.15990981061049284546410631073e-50 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [1.99999999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.499999999999999999999999914225 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.58757003269204017819125317943e-25 ± <2^(-81)]; dctAccuracy = bits 81; getAccuracy rEd = bits 81
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.500000000000000000000000000000 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.39833592517604741034219177813e-50 ± <2^(-164)]; dctAccuracy = bits 164; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [1.63999999999999999999999999999 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.609756097560975609756097157387 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.5400754712534268341707664999e-24 ± <2^(-79)]; dctAccuracy = bits 78; getAccuracy rEd = bits 78
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.609756097560975609756097560975 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [5.43048783587493066740131164066e-48 ± <2^(-157)]; dctAccuracy = bits 156; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.35999999999999999999999999999 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.735294117647058823529416022117 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.24688267025432981394643221417e-23 ± <2^(-76)]; dctAccuracy = bits 75; getAccuracy rEd = bits 75
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.735294117647058823529411764706 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [4.07885005152844508251638712804e-46 ± <2^(-150)]; dctAccuracy = bits 150; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [1.15999999999999999999999999999 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.862068965517241379310326198928 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.54496852338535293370555734696e-23 ± <2^(-75)]; dctAccuracy = bits 74; getAccuracy rEd = bits 74
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.862068965517241379310344827586 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.75126521586178857910898994244e-46 ± <2^(-151)]; dctAccuracy = bits 150; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.03999999999999999999999999999 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 73
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.961538461538461538461599834914 ± <2^(-73)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.0264970297014925401347008711e-22 ± <2^(-73)]; dctAccuracy = bits 72; getAccuracy rEd = bits 72
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 144
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.961538461538461538461538461538 ± <2^(-144)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.69830084480281550961239779993e-44 ± <2^(-144)]; dctAccuracy = bits 143; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.0 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999999999999908584324 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.05025559771909295162826237123e-22 ± <2^(-72)]; dctAccuracy = bits 71; getAccuracy rEd = bits 71
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 143
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.999999999999999999999999999999 ± <2^(-143)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [5.16752074815720672399860049018e-44 ± <2^(-143)]; dctAccuracy = bits 142; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.0 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999999999999908584324 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.05025559771909248143052204232e-22 ± <2^(-72)]; dctAccuracy = bits 71; getAccuracy rEd = bits 71
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 143
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.999999999999999999999999999999 ± <2^(-143)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [5.16752074815720672399860049018e-44 ± <2^(-143)]; dctAccuracy = bits 142; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.04 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 73
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.961538461538461538461599834914 ± <2^(-73)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.02649702970149230503583070664e-22 ± <2^(-73)]; dctAccuracy = bits 72; getAccuracy rEd = bits 72
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 144
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.961538461538461538461538461538 ± <2^(-144)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.69830084480281550961239779993e-44 ± <2^(-144)]; dctAccuracy = bits 143; getAccuracy rEd = bits 105
chebDivideDCT: acGuide = bits 107, minQ = [1.16 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.862068965517241379310326198928 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.54496852338535289697135888376e-23 ± <2^(-75)]; dctAccuracy = bits 74; getAccuracy rEd = bits 74
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.862068965517241379310344827586 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.75126521586178857910898994244e-46 ± <2^(-151)]; dctAccuracy = bits 150; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.36 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.735294117647058823529416022117 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.24688267025432981394643221419e-23 ± <2^(-76)]; dctAccuracy = bits 75; getAccuracy rEd = bits 75
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.735294117647058823529411764705 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [4.07885005152844508251638712804e-46 ± <2^(-150)]; dctAccuracy = bits 150; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.64 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.609756097560975609756097157386 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.5400754712534268341707664999e-24 ± <2^(-79)]; dctAccuracy = bits 78; getAccuracy rEd = bits 78
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.609756097560975609756097560975 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [5.43048783587493066740131164066e-48 ± <2^(-157)]; dctAccuracy = bits 156; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [2.0 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.499999999999999999999999914225 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.58757003269204017819125317941e-25 ± <2^(-81)]; dctAccuracy = bits 81; getAccuracy rEd = bits 81
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.499999999999999999999999999999 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.39833592517604741034219177813e-50 ± <2^(-164)]; dctAccuracy = bits 164; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [2.44 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 85
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.409836065573770491803278702687 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.05497523887351252548949466491e-26 ± <2^(-84)]; dctAccuracy = bits 84; getAccuracy rEd = bits 84
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 167
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.409836065573770491803278688524 ± <2^(-167)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.15990981061049284546410631073e-50 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [2.96 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.337837837837837837837837841439 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.25289455036351209119951331477e-26 ± <2^(-86)]; dctAccuracy = bits 86; getAccuracy rEd = bits 86
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 170
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.337837837837837837837837837837 ± <2^(-170)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.53067640183529904685200114369e-51 ± <2^(-168)]; dctAccuracy = bits 169; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [3.56 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.280898876404494382022471910242 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.58771059881063771453888524427e-28 ± <2^(-90)]; dctAccuracy = bits 90; getAccuracy rEd = bits 90
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 175
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.280898876404494382022471910112 ± <2^(-175)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [6.37018541839972982527345038639e-53 ± <2^(-173)]; dctAccuracy = bits 174; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [4.24 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.235849056603773584905660377253 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.89350006536710681273296708095e-28 ± <2^(-90)]; dctAccuracy = bits 91; getAccuracy rEd = bits 91
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 179
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.235849056603773584905660377358 ± <2^(-179)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [4.31710897393883069529926553239e-54 ± <2^(-177)]; dctAccuracy = bits 178; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [5.0 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.199999999999999999999999999961 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.90003997741496956301720387081e-28 ± <2^(-91)]; dctAccuracy = bits 92; getAccuracy rEd = bits 92
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 183
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.199999999999999999999999999999 ± <2^(-183)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.60447762728665583484240887111e-55 ± <2^(-181)]; dctAccuracy = bits 182; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [5.84 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 96
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.171232876712328767123287671223 ± <2^(-96)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.85811034974691189601513528555e-29 ± <2^(-93)]; dctAccuracy = bits 94; getAccuracy rEd = bits 94
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 186
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.171232876712328767123287671232 ± <2^(-186)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [4.13906068804287138982005715663e-56 ± <2^(-183)]; dctAccuracy = bits 185; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [6.76 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.147928994082840236686390532542 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.22412160352266544550031268344e-29 ± <2^(-96)]; dctAccuracy = bits 97; getAccuracy rEd = bits 97
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 191
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.147928994082840236686390532544 ± <2^(-191)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.59858218269057450206261471858e-57 ± <2^(-188)]; dctAccuracy = bits 190; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [7.76 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.128865979381443298969072164948 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.3988350926287423237992087101e-30 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 194
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.128865979381443298969072164948 ± <2^(-194)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.4091752224310567208432196707e-58 ± <2^(-191)]; dctAccuracy = bits 193; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [8.84 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.113122171945701357466063348416 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.46113519172209765674301185029e-30 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 196
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.113122171945701357466063348416 ± <2^(-196)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [6.30082799689146307533494998924e-59 ± <2^(-193)]; dctAccuracy = bits 195; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [10.0 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [9.99999999999999999999999999999e-2 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.52709918247060117045683978851e-31 ± <2^(-100)]; dctAccuracy = bits 102; getAccuracy rEd = bits 102
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 199
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [9.99999999999999999999999999999e-2 ± <2^(-199)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [8.93898713795593919615752718057e-60 ± <2^(-196)]; dctAccuracy = bits 198; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [11.24 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [8.89679715302491103202846975088e-2 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.88070214734979559657232388214e-31 ± <2^(-101)]; dctAccuracy = bits 103; getAccuracy rEd = bits 103
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 203
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [8.89679715302491103202846975088e-2 ± <2^(-203)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [8.54513285253576435646865272572e-61 ± <2^(-199)]; dctAccuracy = bits 202; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [12.56 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [7.96178343949044585987261146496e-2 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.92340238802035575876923061624e-31 ± <2^(-102)]; dctAccuracy = bits 104; getAccuracy rEd = bits 104
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 209
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [7.96178343949044585987261146496e-2 ± <2^(-209)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [1.20437452545185832820320066776e-62 ± <2^(-205)]; dctAccuracy = bits 208; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [13.96 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [7.16332378223495702005730659025e-2 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.73871377516584107512826673704e-32 ± <2^(-103)]; dctAccuracy = bits 105; getAccuracy rEd = bits 105
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 208
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [7.16332378223495702005730659025e-2 ± <2^(-208)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [2.26104155968053240115599809589e-62 ± <2^(-204)]; dctAccuracy = bits 207; getAccuracy rEd = bits 113
chebDivideDCT: acGuide = bits 107, minQ = [15.44 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 108
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [6.47668393782383419689119170984e-2 ± <2^(-108)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.68212477788817739875098702852e-32 ± <2^(-104)]; dctAccuracy = bits 107; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [17.0 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.88235294117647058823529411764e-2 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.42595759100997262882952411404e-32 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [18.64 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [5.36480686695278969957081545064e-2 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.16355651412943781825297630491e-32 ± <2^(-106)]; dctAccuracy = bits 109; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [20.36 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 112
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.91159135559921414538310412573e-2 ± <2^(-112)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.02422168670948062744956690211e-33 ± <2^(-108)]; dctAccuracy = bits 111; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [22.16 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.51263537906137184115523465703e-2 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.5226239948238876791957437064e-33 ± <2^(-109)]; dctAccuracy = bits 112; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [24.04 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 115
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [4.15973377703826955074875207986e-2 ± <2^(-115)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.33699391171514491489750523244e-34 ± <2^(-110)]; dctAccuracy = bits 113; getAccuracy rEd = bits 113
chebDivideDCT: acGuide = bits 107, minQ = [26.0 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.84615384615384615384615384615e-2 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.89719391559352866082764062446e-34 ± <2^(-112)]; dctAccuracy = bits 115; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [28.04 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.56633380884450784593437945791e-2 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.36600343580627652511623457211e-35 ± <2^(-113)]; dctAccuracy = bits 116; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [30.16 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.31564986737400530503978779839e-2 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.36404466519389961724068776226e-35 ± <2^(-115)]; dctAccuracy = bits 118; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [32.36 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [3.09023485784919653893695920889e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.86393318750540174499012097847e-36 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [34.64 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.88683602771362586605080831408e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.19884692954402802962748508287e-35 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [37.0 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.70270270270270270270270270269e-2 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.14964698471168640406216886902e-35 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [39.44 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.5354969574036511156186612576e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.17063248438706412175760680518e-35 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [41.96 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.38322211630123927550047664442e-2 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.96729729579647616361774968716e-36 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [44.56 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.24416517055655296229802513464e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [5.98825464580139852692673677019e-36 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [47.24 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [2.11685012701100762066045723962e-2 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.91115099758615373502130611261e-36 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [50.0 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.99999999999999999999999999999e-2 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.85898307643578414798438703263e-36 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [52.84 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.89250567751703255109765329295e-2 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.46106162911908961620569700436e-36 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [55.76 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.79340028694404591104734576757e-2 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.40512530479557620465772955926e-36 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [58.76 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.70183798502382573179033356024e-2 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [7.216227311321212064361692478e-37 ± <2^(-120)]; dctAccuracy = bits 124; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [61.84 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.61707632600258732212160413971e-2 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [6.93863388473862433009288158036e-37 ± <2^(-120)]; dctAccuracy = bits 125; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [65.0 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.53846153846153846153846153846e-2 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.57161984840230535063538116435e-37 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [68.24 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.46541617819460726846424384525e-2 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [3.57221048750914966709797577746e-37 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [71.56 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.3974287311347121296813862493e-2 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.79267750102384668417480673747e-37 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [74.96 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.33404482390608324439701173959e-2 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.80125879144323886646437850001e-37 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [78.44 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 129
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.27485976542580316165221825599e-2 ± <2^(-129)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.11000792323750883130113205409e-38 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [82.0 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.21951219512195121951219512194e-2 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [9.23461094441034404982868607681e-38 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [85.64 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.16767865483418963101354507239e-2 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.48495863727698668521908075986e-38 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [89.36 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.11906893464637421665174574753e-2 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [4.41160471099416388208745690167e-38 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [93.16 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.07342206955775010734220695577e-2 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [2.24089970002035054343702451854e-38 ± <2^(-125)]; dctAccuracy = bits 130; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [97.04 ± <2^(-105)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 132
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [1.03050288540807914262159934047e-2 ± <2^(-132)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [1.63746600240464206021587388016e-38 ± <2^(-125)]; dctAccuracy = bits 131; getAccuracy rEd = bits 118
computing integrate  (sin(10x)+cos(7pi*x))/(100x^2+1) over [-1,1]
result = [3.49198980894169348959456129153e-2 ± <2^(-104)]
accuracy: bits 104
precision = Precision 1488
	Command being timed: "aern2-fnreps-ops integrate rungeSC lpoly 100"
	User time (seconds): 133.82
	System time (seconds): 0.58
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 2:14.43
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 12900
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 967
	Voluntary context switches: 7
	Involuntary context switches: 262
	Swaps: 0
	File system inputs: 0
	File system outputs: 160
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
