numer: acG = NoInformation; ac = Exact
inv: acG = NoInformation; ac = Exact
res: acG = NoInformation; ac = Exact
chebDivideDCT: acGuide = bits 107, minQ = [97.039999999999999999999999999925388514089009793682892587527253236598444343700151309178894929853232622038475501327952309471450248624357376613947397286923823119395877805870239928127530680113139787182330423107162634745930725556131747333582571111385782091108002846239426218967970803885858543935682973824441432952880859375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 132
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01030502885408079142621599340478948764673183527763364617831528174674215413553423655300099832000137909871022183216362977797222106503278280579788328059991537572373897169131651265828716214729060253132822474183972305269362653290758729525783287843998863793932231663059850356996422069950541026637546226118079452033960526557388117204836098407681445082674051918130006868931273935929625499317832733582102615776989728401166721210094349514345163912711270928656218789814562547277863974679131936090292673302302189350456257181026623858572022849338198367620209146523707732651476881566613395813103437603786005638539791107177734375 ± <2^(-132)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000000163746600240464232122805260010868793242466714938792113829547903545634611596166128935505247746587408616331129178381237595479512088023998112530588761666235086619866114103712035364974565757724657127348382534051078829095457643706852668419315932624158449470996856689453125 ± <2^(-125)]; dctAccuracy = bits 131; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [93.1600000000000000000000000000060543995954943799213272456037621296474673293871826479177613134856495515376386343351535167274631359278084992145532701358730766112838990701086556513121939978945958842405871973491530910853336829312350493840669230104012657275820167876209565432756279777552908270017424862225430209132231891339327548198191661067137238788851845948391083851447547203861176967620849609375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.010734220695577501073422069557749409755091014963288209520961080016730406050535129644663198817129172992454631141479247713375524821462803326224563706433607658746631042816751108002229708002451795411477127386052928825074956580186562748633517103399459269643495404224684389545088449389626407704099157926153585145099897623676498618295948433116724219322031681210268398667235821044754957137843887131363176116972854568658851192018646362318341205936514023956063442947988098234416187709602788555152598599435821834029296968526243829901252054500591988644202156489620775965724541910547736414362623684214771748986688235732023020238792024580734283905651540302769656647973439304027114948449267441900254983577435177948485367422240812469068589677487666368034953301743956188851226996039400773952365852892398834228515625 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000022408997000203508044492032384849783863419098340629527075578771139669954435651341122919487541869455310281109599921793038422741914915107197339603530755330784781487718901457874216116775264460340060435740314966691191938802524178544405226803936019488522164246421907456306985398032726474941171639539201450161300631750774530089043157232708836090750992298126220703125 ± <2^(-125)]; dctAccuracy = bits 130; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [89.359999999999999999999999999934370280977654106807204446260292299194689126239827634086920750852459149227810549168740680111617672318857692449901675846485220938796031290308190228760458071866097433713616141190544287577961975556131747333582571111385782091108002846239426218967970803885858543935682973824441432952880859375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0111906893464637421665174574753887190906843174223122891159536476155298765277240045797870699358442292740114807784906512902845869340039476194354581902947525233698516980427862705856149937094346595736620147784466776483654722636837470891435086017613498322559566406180391692129266831550762088758793165178062216444052135041503385476067304224193320702587556080489236417207402693814686199206978671936801178530265345319950094943020338864765648368329542300409187859615940948375068473465006721149645494378596761119049736445768078802924466377884288911134610468997797060878833544126189671052973295672927633859217166900634765625 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000000441160471099416597018488666230014668348057592561010820597373694755842304156352371723020962806583571419361598914559137467438181102808480748439749229011400193819465782640235578849142974452955681855742748023856864090536059638153692373049213659271289842790807766404997559410570070002870445958519107437401763397400853779467853300134736722918556866571576583145127578885279371529376207560330294342080206254998246184678171603595529995341873547251004621653480450500557056428344939318042815876535442193869621996058009388436829071204818661746857368780664404387431680538183251706643951784140161190711899203631729054674539022442031584644014435295865516850587003555052290071358811474055983126163482666015625 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [85.640000000000000000000000000011607980368250303031425814703353193624977817136018455633906229422858363652034318650525583031318362854782752728626538399577101638639742331702034543425010304884965935679664229330399114381120840230645176515679138596516557287696046857024291530276420083237883758509489574547598188089633922283483188704954791526678430969721296148709777096286188680096529424190521240234375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01167678654834189631013545072395918330568496257241104115775443323045958714390186027648085301950668047489639788365328082246344326889072314215660286737376147663823585674374759695003106409437046684559797373550288436674355804891345629937629272836285636370242747447037716987003261405653782653248727654309657298176577833038508863107410852332356174848132319377881168504760110808023322799845195378455728039277409053694078863478496303690979092055853979823543824786974040376830466319389513620072221931234725265887695680858261867388782643576187803404876404606404836876066629388393395693695835681313341957600547740521371966182197383288318814826116491631035489420739009670175539421885310614384152202789637521397115495113315244897681702446891006309815102490282616912024328537089701285367482341825962066650390625 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000044849586372769878597738849982742680503380657748194535149045583772147293600672565780650152084513113215915450855934382005936322730261002366362707851369431021552018639339666268193635775170830067668955714339104888712275669491055034567320823881020465590338075852538942819980258527834645041733943605203584916511084427641713104392943156381080492373381818346433722967180243795882487152691904378068046263602336628395451149457516609722003765418837718042549714172755510099218330137235676607385025449847340614266982184882141410134747699034191893495016316832763601411583597927561709841388459530257251579584310661543324630160445657131301798242251650149653496096492321448574533937787104177707810534192318518080634128912341391555593710706907317302966470610220953573627543178419662101428801643272788672347622057835660951844658499323890742314126979669273997952672061728662811219692230224609375 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [81.999999999999999999999999999943057241917851176965017320337704001737083346073009590921417039755608479908830966799404394712536471070676706844325884662089625434624849774164717823217366919186262002086618253102317969218586975556131747333582571111385782091108002846239426218967970803885858543935682973824441432952880859375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01219512195121951219512195121952070875773435166058611899631455275365091229599064206306080760879277649149931968638610473800936555884173006740544648212611126379768705861081543822859739261904260484589064896876047992456832308768298414080193606422746234455911455551555263238655968642296151288136689158696637202811368270784025464082324386743715634142136393659027916222896991311774040507763904678986043351775687971000779865707194174751407278309694173501432341981968131583616861620341814853274758201416641419017152198540852245350419637188330206149798766885832993403213618484448436431188955708648791187442839145660400390625 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000092346109444103505751331540753381994992122607627170574435695867384402615311105275942694559633791984492717039636786743951805723328161523228186566696015253085363220576765494988151136267325022531242218286147470583473998439610090191246405580159784374837548711984691942068894160293946354507649636223033660992001752536476025622984490054339105117452360857224456567313184166723743902886457740965403651608472830524614441284303570371281143107243798536951174081790115828320930393568500025363198025893611058250278097129967212886891934113895610012377411117399796452869232614635036423729053257351080464691016794439274790982507589286724244167322579704968998759784574136000312449823468341492116451263427734375 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [78.44000000000000000000000000001665669016166477858606087752116347355198634432291911723704788780841787465449940204324590857090526305211969537496992454951546668883132821622627919945725460278872710039999126131164513767690799753005530364729135418263184884781007692642762651727721218872047669001723666287265335526604465543303362259009041694664313806055740770258044580742762263980694115161895751953125 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 129
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.012748597654258031616522182559915701847718398641568042739288388676348842897937947977025075684855110325486116999243073380034308025722376080501012445645005896800431101888248696914148068629722101657909262009655609183933584546145849788637125622765688620460544745020637018902446704705010632032149166058481722071486508061855609726055755297741513258027425886857582161857717546591589303826004791854394865975205949452701427957599900900179087485078555080607362894468317664890066077530259938885215959889129126168243940508273595794288116435589518270824698366973880180473262332561451317400484741893258837159147771544477890157909555032462496003196308076285842648892165994997098579324385263512991847083186649927647294769052133888106602367157453773242571047015543291960394146900004130884553887881338596343994140625 ± <2^(-129)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000091100079232375140515447064503650777635787161779513826449072004267200018997649901238083883487362799826881338215040239523726144965268896078439422555919525104260419966223853446011085859955623233792421328474371106885686609019289390589147322806846069786585192554573583979660875615429066109956640918654271342885016542675491270630007836003316769616363154565077485025183628430700352335864111100099987208665955379535844138216258166157127847946518924315387224748035995822046847410124460854874415730238486196913473257430229356649310766943843371608886909931080318033162487678015962851550732883021028946398586987932490952190005687537589056699123987944011496665567163562109102665914529621162856589989261386465073127367372252003100638881552266888760910644110322987209589858001412721875479413091335552303012375967665904320850926371187452484759128880039726061657034961172030307352542877197265625 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [74.959999999999999999999999999950794580728509343966292177259009469056018645461301432039417745741712448504416014640192765352703894765177022680280163221651023254025003258602668123850294310939219648617903971185699622050618225556131747333582571111385782091108002846239426218967970803885858543935682973824441432952880859375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0133404482390608324439701173959532952394229992797884958566619784304267507119701189929355324020391049318542203623335063440679272269272067337108240909284074989715261716064797494283398485634065113226268126912989979167325282521706698173169225136708462329486261556324342796454598047697119592652264045375955562013269477885770913796483682690906609775038454101606590213652918357439883848090913380969299466466647695071563017307409116666161605404038539525032904170323550545143051214954516643916978347914284662911204550300448058015005678987847819960938942569073653429103249005925851781995117306678366730920970439910888671875 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000180125879144324030203136145969244426194585072002101023300315913577658588413927479585156990358744109890741795675556908403893082929242415289972585445471353175192847545015479880400801166187984497672328307729791102855487438584586745440837078519819385484856590327331156317803349150981413837914797917280603379437253340714172663152774450684889219824260163966402467239716132979457187078077106944858431632407995155779832044296744016492727611749526857628510345843252757810803471008570743818554800592322199492751503438661065233182806650135398514950565660478329496766981299569013377023516444500439721137581676250991955114630355741236566896063199219052710253847148468009375932297189137898385524749755859375 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [71.56000000000000000000000000002120052897573780658523243405719296942849291094788463272718628864232808454503388451331449339579301302989060104565422069175347541075746238190591269765229254081440863405194864353522375971848199525260197487560075427269384631502619103451663255264089059183425125698777802624963861361909224094494396234984930508892810323240432049569925698762062893365509808063507080078125 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.013974287311347121296813862493008716325500884110714051623323333864554196638874995405138154841643492406013999378370601450545159485141249229826061754485781690264453421136968551741338740746017267801674826528104856292416856949098282177456161531926535575040432856842370903379071261788077885954626795462303791871285244264551703577146641659310397645774088740808830609829451856283098272018631722265511483465640362590694421951834125930883100034214987259957086416154747347182079183151381207315162894489954946369360231972688420776449036924243020887036062284524717271094117011158657937154038544696189526068778994608332125306669643027330045802698776936097714993227530565265781857501370521474668762014577436559893476049213128491749309390132561788945262810430851451392285367258949690949521027505397796630859375 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000017926775010238476499198680007619693320058638517312397906174049056600453565766570083017013820345717346803535178703636033428771979397232847083054831657107212375106233542332851930481218880554868208149406411623703130198056575751806328639620662598757089209517180181702272676350321858088995432039740119970998797870091264991443472691523834491267521581345707558678267001653703763367356798541349434870101360561282493683310392401852102704372063094322508102952792164132921581940309931503580098710421691841771901029373333641440384311634818772148553178873453808065529909471891802610723237190291993354543438831632894984007331842929340708274794142080674617792456168676275031146303495354350290319834818559627099245961049966289510678650449644049636695785888065405731945172250990771180303313838446329069144318844604980627895079039936909663796690626492058746876967489924936671741306781768798828125 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [68.239999999999999999999999999958237113590720268001068049524687576321103382143098905083888919631739220591686432270856479953622693516996037074704372037255427749853821742459195718307203158259384216990906083097473303691243225556131747333582571111385782091108002846239426218967970803885858543935682973824441432952880859375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01465416178194607268464243845252948807428251343663874092275139685145171585742991845577365710296567185843252992230270708270339737053463870426760659432421912494623362618221583526951835721272000036260321784222039362091721804423584274603071748999748518517065235074338184088618065914204879177597517752130822541113885051872053654074386506839315948017212367310283836019356434814798568025071836086413833899261851079960810326191501456313277894120965078896084064563157408573044688814679748833105041883483469765134542344765251717650702001922138304845172735574553918584269071587254489041907135060682776384055614471435546875 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000357221048750915243382707020883705974914104453788879621527100231626706842208294587364607528569934918120446224684272375487915517440659423861443775525939512275984258166973721602115290889113760647604981729019012845853419885965373242938519042844751531324209773027146584550254826073624362259388285937352503209629873149948615311672110819270761983907932531570253266858586507293995498744977999012982256141104581438510398813402217956114639433986476832368083210109973051609655696577303707538422793163259195261617502937995127647796705003141346344262277566137535766732330797755395540596290737498231544467133347426355218228604459728903253069270008854533055543353271821249705908485339023172855377197265625 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [65.000000000000000000000000000025239496810469387028940484311441681254497517010915002104321431924588993323637766060731337406843259767952921956537842614160520506620533512291888881523392820544952025334775675516469783014269152552012102007212969858809137875140221103919967539641682697316844188495525114574693780795502974094494396234984930508892810323240432049569925698762062893365509808063507080078125 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01538461538461538461538461538460941081080044004127764525561495880463413400352463582696535827990964691527993455935123023190334245192050347967558902942693453582512604422300683889196353894690898020432826740476145438733916871173048616239375854634307330493129923766121427973252081082213672935482650453929886897887680256283681938903188911289218231098130107149185610020492629297699229125931732213351550083712521748565463468957990798038184527094042411631126386481835249775870430788185343672695581423770880666663496157675213017121905856965223775089645436487957441632864481849390457134561441882922859656290761665427217521528456016001255459172980724680557337307279122873496449400173165735817657946017452590745674090426108653515727023278699694945812614670068670366036116259333965672340127639472484588623046875 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000357161984840230691670845348300846275550045478075823060113043349904192964393652890373370381627686390093592520486364887343327683227123379823771040421534562556881963914595147995912240583593313662505370353610903417301572321560139118091608923314709299874261820991368193141833807971158441330920917998482422165847471744649373649774243083681186457669422554534413493941978560867387837877831991244294497829610992501132930466390025446293468663611794155124782607879057197921593447073494390584582494678454960821906153984398177952778093563094244495685875285655200524219033529739643907510294482792119698126045041561258224209257175875126217005267924074760406651002365011858774769389603130225064864701872845019678751403487425212512270134150897401024407587547039328962656164714874014189625655625469320467958305529675955160833446038386706503284703773624941813835675930022262036800384521484375 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [61.839999999999999999999999999965346321905596204352283817575886625104661390907435186634341291019303802092188356990975712933555660682124318919994168270143360431435519380207815618799925204051357569375569022697107524531130145691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.016170763260025873221216041397163054566743345515286480427974812599029612102833745331787360876640196324805951369935691755810075106795945936594107346690464858434829574489923418764934109469426618217940113462908618677226107203047699202467834101023978885052781424442895973760534802875071568325197475348168260232870700267579956662290180893959711454221981305482110931528142036988214048534878326559720825556595585074670300934063303468032067182317457290904011837730292553308502953108721350041029204636282316152822809425593658403622665121045116853396948299907928176809368372006414128760898307746174396015703678131103515625 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000693863388473863163843388573871130217425433746610553274983286691953969859222843594459907044943546789973243262083987169839409706408092765941061460677330635024294306751847190243420271229077594651621592892449373952014596021552308190160187358408046474742168903165588251615834652844464459950285377079028127403993541135090366948832861980838491220738639764728315792195111625860891520665703153439322929517242725128676831282049062301112225070245289227250226211367336633629579391406678926185838427987978039595828357576851477495222075911854535401352440830670250756053331786760279467679584837101203281490628774922473631007050347196240962661572932898623061555493964080998381405152031220495700836181640625 ± <2^(-120)]; dctAccuracy = bits 125; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [58.7600000000000000000000000000287735936658595199171850282839096090300001625120102253684533176552006009903110466854964406784097680314135689457269784758345574497687500947209923684356039157931511577240428826188821056829497300629905011871737776968977823888052931926661380508239179516150279377346693404257139935602321334252247830574321872900176464545819442230646656444292830201447941362857818603515625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0170183798502382573179033356024423131842411302673778407153043068282560061964566134229083300683827395082403201597962638549086955998890089549530001689847231362562134285480573439126900480878069397218426400231744692010395365953840456846263873086160108261126825806963021581591013100412325505788451409706085001469426525089941615563517554665011762180867795987351112719821603296677454515844267943962108303983154775290418366250497189396798342191476092790949587030348936016039699343919835990398590113946151783298314392838596226032060884257910250369566494018096946792963513523861794984044411711685548297651024564621052196915005271079562616241814304798728307833151778911362128511545874912113124079870296192685093784448172093555362202630884429780959883055653543838629804252349231319385580718517303466796875 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000072162273113212144656737366994719536175623107042999799658392094328590952387872042872912028316363440838596860115047112810749506510855077841982148998351772591574760573807762960503726686243939747316850664407030140191980807058186292004324206422598294900494098212517925359125811044249277041746389641179330491483374754776106757538057323128124133554257421568737747706737250205544140639916333874700117376599630546851340304865884969825424719651201754762868652953771357227846696682095512311764726347741591199889080170246315797726290394794240830778880541771644614236245230919795514973928018945132609399420296566857668245921982998443551617860774040212522811441912371844512061574332849872345750998118620325563691452414291055687478615105168946403910579973288306111762453267830702160729548464638744439503029315371635555519825689638944493167836596370957880086649538498022593557834625244140625 ± <2^(-120)]; dctAccuracy = bits 124; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [55.759999999999999999999999999971852575480922940000511644500644725463402740701562638000025740103498664999771274621639427534474459433943333314418377085747764927264337864064343213256834051371522137748571134608881206171755145691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.017934002869440459110473457675762334128568996798886706397230774999203173129704559514568675911805122334276295092013972187215206036406534047007728287079469892816641648883468187289044656285489173578776109103402138594552725609348735718489819818342789222983726656797147452238991528978585072738054390570210686289500970515191491627080152269042726023884619947673127150696390364942496488785396688215658551133738629986419166234856561737566601324146855088642756061949410231590211713220775676880352919679132339376199031849557316654574132278933411593624546131197793114730058799849194035858079843137602438218891620635986328125 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000001405125304795577290468393034221559607409622930172235406761603851854398775135962468315394729691782642305369576739700335890958878193022830549961783937257319115777509581294195945873998386668004574265096650848246339565891976714978707259057441671632991608711918412602064653111948572189243417703766325744073648729935000593362922444062313906005317913894583220184381272619185855595566633949570421629152646596421473210996185055298723074177764009072430303338585296789690102821507565298967346071208958362652652456419667963996046958505384304641530572085805671278571162129273784564321496331200913072313379755301595909899642553056732779479067348796663724689071941174878244140700189745984971523284912109375 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [52.840000000000000000000000000031802819541908205249966065974596752755000847451170302519581945834162907545053726387609803185707949565236905067186232223742934415752709300080961619267243001954741403394560089721294428351630307573968900367134585534986426902470365281412308562006153205913211686973813566276734206324961292755955169879879444071142482585923456396559405590096503146924078464508056640625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01892505677517032551097653292958739841440791584850054195807514336564779809085779879189703188849017077196951609222601467173901500384740105223628758201448821684823042775866542139540096459344703213106140472382201586338167640797731642324589025294366990672475593064649635154913360107667725574519467018704893726964327854799651541670201284013063566828259651494488948136234445645220643447018519398134179807360428539097621697673474988239347197725843994636702559929096035653980883370252044195672159826232572848674685289896421561878495131037755134593754377255935080317677699498779564469175877535438444124571121734782359443113288212489294417293106152255826904249619427875462039421004202476418587220936795313019044622328116864559679118249338831893448996805948345893374530624075902096592471934854984283447265625 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000001461061629119090117349080146249792056075582432922406302576155758796556024132116785563609699829135047340316065316862264158206923971270970607590710083723593216783802042447340518715129654839678095064931739772735266419785320864983888369777284028854929043460186308895168811917809221860886158893537496638733592511943680170597648031069996973958650834129298079199767010360706172124249329640875626393175240395777414247126263955349654267458397017778216676110254580439739628444580162742385631344952225553487564642797472955946653878830625208098925753861371947175747229749160340688122857235696465522237674396868699583748256232903543292053854909554625946117135287823346786780056114457287522443209870828593025475899503246490436384844959064286872637318718527141438222813561436119495404547964891234308267837497635446561124671207968184037664396190459893676294456099640228785574436187744140625 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [49.999999999999999999999999999977717355717812730228690410740110178969651266314514435760452996477938815235981322462427798174641883128443649150372655645309162746664491348502293513889761443124479784279856852692262859003786395691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02000000000000000000000000000000898470674535437958155836367742537523149946880505354816936434042828303721159541555225329983063914114761490050294005365317738212661030446829583896553967864438596381371241829938341142528098714779835136987816352911066607276527568344724925500954030206504309891655630433816744078975226975010236242553291343825742965237378963148134185163773489508822213267695325588780346863126602749270724884270514084456323110112951302414673764954986999260906796590495143864800677043069682696133769542857597390294242201408376888829147537218732578189153595120408635210651482339017093181610107421875 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000028589830764357861291843394735822755245040386115542077956890215566921034145702559776658308186313203742607210838435202314741646034271860448228731804472185655200812160080444580142959008287923769642389496617447683647716600831045789212464233217857138778861592259741190301235714199447772241329334365264979065139023029641157333755358258972276433921497816816312228448058903849389609120938946441931948595863946547283025944505440677368484430860125839597058801046497403753531078114927346340903352887591547964002286360303007725854273063935102395684101443204156207767944670157313345729915094901308001853268143885904359610173666953080603316386288623031870767868777016840198257341398857533931732177734375 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [47.240000000000000000000000000034327174438615443027283597383503112429499571828395233557707316461475912987865805167071424903953216114387293374880207804852999580123008299259535094896627254425458134521137121702540451647417464873379027498746801121101718462584395350815643549006945311395804618481560654601789373501372025905505603765015069491107189676759567950430074301237937106634490191936492919921875 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02116850127011007620660457239625896161592724561834751632865839349869615140114261855558391919987230449392827672006926540027106693242541305604356088323465560972987288170260881619845669949277026634076063860968572150940624967255042859782025875299674869968149355705878672826201292130529178076753005567576294157905852376612924704828508265651528976773187687966985518784757461571649584923630877375392344924049715881445136582829780650074923369528172858735253338991050682277844851593482615330571034107657092495293783310569533101189448266669875540303098792029254610114337105276005916901306523362760718048479057130990369615849246927405574975469827645940501583739611984936943032666901166751330957611206937334062557424809829731779173432571394710972893414022804118085536485838193954123198636807501316070556640625 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000029111509975861546166364126259060270030173640649014647085729148791425439926372454734420628797506123991381981037396617870270155789808874155179666928935300511379574585964076666343769073265715605661020199940123357243062764407085115172968993096821781770932560928943902000202442663180664354690069669817004710007739676775247555041019813575713122000139760374273035046519265130154860403217995505036856018184635519991843021776135408033107268120485152066959412164881512930783333069165211947684840925864616460976543507550348676255545785109047940320414673699102256562043482637241805516940270895173905954781101719691914951212963300074246708363567198886938044825433238273044562245095005489580675791980664281065616683305580089499793539089684403237953283294385288950625222957915563245739510604263395882403274749172036464449663298053535127799296730426170665140261917258612811565399169921875 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [44.559999999999999999999999999983123625960982362442860434198828553629647139786372928536609208051059727569596555198153840795184994351603314265561899332892063904278977332649532461434679562661040891732000767689840526240114520691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0224416517055655296229802513465076885002554535805315518718020597711391862826945094039166938059578048168866617438742028841765333289961094494248023756054880462734614951409242519254445227744839274257146146764779362030572234344136913445375279976733755748268917303300548948668714779204069085695877176852207598879201871649459560524218322101452242259547868568990551059598403838538821851292434322199253538828513219334473984996875344076498148960400776918775426402275458105468477896507913634112186328768154565170365466846647960302821534386614098397842869445094281904386043216540120616431241984400912770070135593414306640625 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000598825464580140203493041876759686069712485789323107723380062105320724595525912707787898507312272154048947348440410613175395801614823394753361047651137102904716746134828424559721517342431967101480765589035314518364606141301604881217381361561229649462051487102529002376913758934416239321200716861207751426459449956357396410890585137853229402606252805393837603216425760096002063953001677510905490164148347382623908541317267744807948439239299429249479881598011600451048668175663315708945906076544158934902600780503197682846124975633783137099296555891157588687160563888171652953361620616656678880120975235132679389113920724926858245456787058936869863417194748134164683506241999566555023193359375 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [41.9600000000000000000000000000363466583559812332491376225106286880534963356436850184828294295371396173187472830238813058827147441889360077608796973252300565917784527504812358735671223224138306067541543288049527743160980423843574266787076089591903629762494674395618140601891805656939883677207048804528095862661011852362359905874623262722320258081010801239248142469051572334137745201587677001953125 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02383222116301239275500476644421195849202967074093548602031097657868472619575648876169366837891429737901797333866696119516862565769850890415151691080494559430165661677464702406605082508517826933076748463050089205549335355642959733401402364736210119638558011424600053458660316610882679501052832833093919943214090134888353005701007765907732248265429578397704193932415233836929679712581071839622059840661538073929419798010165532952549484918961632998176067704697693195244141961854230288168439497052619558223201198295423338564878231769828065401431368098891720436644867386252588062137210389408201276320270556851812323544413548037015319722109325956222182937961715498396018349218207180437920453841965261740840989614129214780425629539833141470206861629133923325437986739938622804402257315814495086669921875 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000596729729579647972010955329920717764254908520829716834050203803849949723549208433233101797808512731029105556076068993982930946007578621663690255050602829604839595594716660343959259613130427811739909541371969052357497847275491115557602524602625599513960961893227847606568145647238381647100174360404851850776349394150083117259557046197255137406637515696787710535351045324908281688961103915500854030452484919392561475677583569140002215687838021003963849328899618313652705404535293543512175977035563129843160524969330141413381453708902286413850744581786491197195209210121687840563056422332421288436431347663415902828002081554036997649116843634069804577835715352340703349907614694135149772571281240838279051830731094538164309803253691284189431918210578512965232831313120844191635916630528511357536139603370528861994420940611429256782149987969887661165557801723480224609375 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [39.439999999999999999999999999988061756560709900463756434987086924792450090297423024725369249963687474370508363699616053833574727517192418900064589585238957203050326718782835067056424804832204245030879974365234375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02535496957403651115618661257607267795067709130250875086253426387953924471196325970945551226826467883560820803609563372180860423305650549388381063202752975392673775436599783435924408332914584212487291258739249593685055622276692742018929129005825233544862539758892695130134755763624795733867849961805197334244476026436150021830847797382364086093561942432186496553123084441211482514198659592014383528844110926137849386844379754850931776558708055045310178060689343994293448576369087397860526696916581139910024077405931353607249519029341371081910095069216052006750400813427613611050759345744154416024684906005859375 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000001170632484387064823358343204647592486731132646096684601992639111622869557529630045457524536113744579998069338051274545112192427024428839600493446336586328409132719805922542316214989843772882206008237575054340365944495616471920040091931830790648908003413526979517154162409096504582973536631737403203881537303835335444058062347497071546142429406833962277079624375041645549715490753147399742102485711627563834092424651585023100932194292214799434371641545431087942114570029262132267356234971097973527468148950742982553869616756243709961702522597035424253024608391922216009716987330185268813329090645780635125907978069239239351402351584680803161533056699905586128807044588029384613037109375 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [37.00000000000000000000000000003786127129400557591552814135597347962699113889703965729494828506115402053769815995803944609720794553384741127914930473184145362626963982463380241615704538131559419226842153590736509698477861989533582585866841679727900748991453952830798457137141581999217211695984910630382979903083034456696637740990958305335686193944259229741955419257237736019305884838104248046875 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02702702702702702702702702702699937082698876873788014460286565813202105727947848928618535195753862224121008740620602935998894445756704863005614522840848440259333879730596107897835206464496044100193727969413975213184021390091140452260689662605321387838326799543141082239414115450506585663918686541090872714986972758324284986472723202226064244967000025932274756366440871071215085565287541031964251604897399989359036725464597214050360232065131666938525791981955191011096283138166815191568179994571678726655576203419801259376159837939244626605893748845126674220875603695619104597917411555095143988166108517999274517648244057140066889618778289640440264613538973022086746001206732711449836644453870930036437496773506756598324799331600576347080365953436294969183632808107375922190840356051921844482421875 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000114964698471168776458182818257026667216793352099113342108444873535474655240127739126311358591256027609575823534785852904018332777696115432960334212592997923756902417288845982735231941122392332976318785409663944034191510025028975503514875810084283127840324468570093928374156027754495177062279327519505203718627304768385963663806708561288767727122481878186894520385904374762604326843267144812542563033317150972243259986531594093003206257582431296057616133023107883734794323486712753657670902583316948712503288111696084943807187355558461649696266433945515542286367633243109357733625923118462151710060727599236026461214033361516056394259258091537106269804036554685458411096978526026382143213714511143255081897439250587332442896690543813076675635628522609359176137281135801688266304962681275868694207110308306307437288131979048272506851134655558865915736532770097255706787109375 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [34.639999999999999999999999999992531747516995344291378413104885292355004275998195546029839736056042089795739159033740704007737266424918293373527008697280339858765114001057892900714563211295171640813350677490234375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0288683602771362586605080831408839080138519949504233468278355998072469206250467945821599987332345303259836195190874487835671802948645691455247782623225409644649180919079502014345270486058947677698008161306564352705192576566521864588176913034019526622752447733538095511807228387034019706572455330993579614966311856254435617609841166081949798210411748008104247053239927996763722894232960301019405914778416883503325442674078879958398352692832902432620942540430758063919208823366983202442580289613274532462708380834794245279683854992990208354683859386340911862569716011246256752442729265339949051849544048309326171875 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000119884692954402881962658334468284471877328339380228539808311369055498449858543540819101804114609719992931797408173734453936347675705836652305509219356981913436095046752848837393916368279242469348794436675885573258258202620364580966331701407552713132131727102691195926563282700571035048342468962477663197548293931067356934731610860597091862069358330340625759284005452856322732497419794726376760626581108035181548696999645079456258412075762449590558562551772816035654786692228783430928417391548324515389941140988821535051584977770902347103327321275480702421444434651302691723418821224613969287621453321712411147849140934941024736371020692625143371119744717390176447224803268909454345703125 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [32.360000000000000000000000000038871013252688471026455153919537487149983981588459149994063883033519122644718435969545845522648231894085866983653633971654538859147166692604973183544713606526484263238748567888611120280565777194745952990280632383394299050028569597711319558372207925474765048467596194628884966207241077716516811295045208473321569030278703851290222903713811319903470575809478759765625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0309023485784919653893695920889616439764547288540336501007936639586245184469862734667519490972011421525907635844739010128415465354150997532967047710895536489811562022650705016745855534256110492214921856847832428473305651068877693336481850661308962557477021730218829398695377030801028414868232617704466113464466147660360491611972377935779130051166925269685848996044581975498436662535079933401628311767287638386039463608833400157391411145344151602265158317181716313255793754745379618820052831688665639464682253151547460293086530743902170921160742932312287920374803515970065815088020061345994630158497821455930516926517920062944375645239393631908494600624128883067983055460912402266974024459941535345401397096234756690887606602528770149943428176015370388942694879208517022561863996088504791259765625 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000002863933187505404000135345119250582782499333459215331200837911222178914077330714753167720383308321336178943199116342976428176683495498561271272800288631208987365830794196951556204636882407574847507169752501982520343591680926142446637984672329696987471080330853004090638123191937204271880419147515818237199171256499174956925223753899826859292812150110317498943125372838155811047650287515630513277930072215894727952890400452990268868629395799146242353922213509859210367003867145261425375595301051617403255380392120077209630674825420672188844431002258675994649442789377363745486655028563014590212916539618616142386877935190095643428936997358908249658246066256948567156754741196405478481687840749839467928185397568982323359345546511482588675931259721887340692572895151986739122885076868812418536679369982837415235804025133342414175752969722477114800085473689250648021697998046875 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [30.1599999999999999999999999999963795244342877150574818903168168628866200558519029452775851698938006837942367677195418320238057247457006946082573419874413341478503716892867192456151315127499401569366455078125 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0331564986737400530503978779840889539589768856802143733254439505229875747159936811349032948094077323566908643134488564462237290958723418233648341576466696095044693849532409047752407047264268020378707261914494971776453897422283963006845070448346223092541825714644377333830154541205783894594506178660048873028218951508755270963525226441963608893703404504508540705864408896083612021826062119598468335880993504244248662812209326579934381798759668237330437862743355680761077233159938485089905150679957388403297357351702690430245567053676323061037563698957063160205674311685995758747225181650719605386257171630859375 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000002364044665193900765657862196935162175666557740442663002867130936108582591247454819738180082336510974249418484362190879731839632620355937852916671901527432714993833287773199796227267525214249336546461262884879726347422774943528017366940363002346439278902250613253635839300262238378694553009007137728502075494042812313271449531406066669367087279131329912763312728628144122133988816077291460332847070240201934297867446756968828180416128808186538628324166994397319477202395488172287315107554631632072141022823602484249294887629592312096859488489193063437862162315895600961462018141288781406263882602947083863442270536153279096282624429184902748314438258869785158822196535766124725341796875 ± <2^(-115)]; dctAccuracy = bits 118; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [28.04000000000000000000000000003937588423202991858191866020132071062247486371794349658017622345423492363980811105840050422099707390724046723948117517725094185153454042717540202353433405955716238922811086255160659263569306481150848819441573634746962004046916269612890783164516475418074420657243898924288770176612945013783717458614828093502646968187291633459699846664392453021719120442867279052734375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.035663338088445078459343794579122531881350960937895950404552168126832491353594194747770482179328038289303473133825831992203692194418064556841373107086854340277920826401166838023376745113856057656253860048026519066650210014898409872147608411031763283238978966277963296776016215932434852365345990183799881683906163776686027280795618660529389571437826917050212095046142241850469909733473367908537967189511313541150933602709072093211111832603502795304730630466233140465004532914389165296191235702334277846892933837438998560155695882688985151484174869757599224622007480703630761736698376813826947244010203234513994365411281799705361816467474408915072747170331022447312820605644180461428972346542956419103570513423183116661275580966356869838944609915032290712276485944443038533790968358516693115234375 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000936600343580628163396858402696056275001669661023071195816920263305776722130359384566013304109980326433184096831571533514589773409717375254870871107985064400082663152227788311955946938685700372501301410222365904391531622554509617402832564114322872970570446747515095942494452957683005983137510705141656288620038577644544196973919927850151589935133349947952009991846865262998803916687543539144369720857363395949797499516398022016091158950304589916817005159402265033350502390953510523996402674041843473724409480733970453030023677973791306584112255048277473500791903987240615998278335749391692027923459553689391556037763701212532327743638737046737284117715041402239589083270512376973649784189866076202128554755264510679282398266836198709385400888965639553419235939365136404122170619773730336512819403229104622987813407282934907003191411789533304954602499492466449737548828125 ± <2^(-113)]; dctAccuracy = bits 116; getAccuracy rEd = bits 114
chebDivideDCT: acGuide = bits 107, minQ = [25.9999999999999999999999999999997591617081379916303113448582884296612059743974617737667934887026606942678197197295047211189212233599548324623537181885425226202503941745386613348944848667088081128895282745361328125 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0384615384615384615384615384615388936303675247508862249141505643000244040413111753872041491212749870630068441740125619872963524255778291567586672857844884971372601497667385317805993996357191408807788101718722082286822304319824260540936649355946554815119035817007071248474875624417357373135912315407067214900905651037599445559851088173057504151856656052549340353795702958940406491963810221115654016837082181412190932472818918385203765691352987333213905065631414717457665924514324184500212511247199867115650290724831474241266144985851368543707167333850783454062832061350063472815463683218695223331451416015625 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000001897193915593529061742347138291545674984037595368835475571846949278033809297546386331774663449928775063319328193482484582354729396039186767184214264712918173035863751969085148331141032666411204741542478959374145334500179773332162247035122025354314679510739160406866332972377698961773021909474714368664747329115761907089266966612421410703984171408953261352321594785794245136335080362704433064155879322517123115683987417125161401692190148065248053861944155584164315284369764128573670677792233096093914209135633276952529631363902198622568306210374849424948231416813513194113231987300939962801579602196330497146149642102773216948710899271415958040713778398611566444742493331432342529296875 ± <2^(-112)]; dctAccuracy = bits 115; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [24.039999999999999999999999999963558904842809298501779625566932369769246457938258226422393820641662482095325171446341298988247528441558773541563153860767641178012262987619132448714055414939247940316591433685915202753786395691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 115
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0415973377703826955074875207987319685733855850033934444035477398172927112858671603896346359524539436673639865872355609199246850842921310620999244232709275974817265735729792101610303210640719040569563555208635771796890624720015032718970882175390653921522640745311996089004250560692805390817367155898917885999260308981315025910512758702659700227768524658493884931026820291746495031054412899683962594006390567072761381216235479138414562849834417074913615664035305542037774408573335374146394570900363491347368727109362088756853866538794985985233589198591443806947185271062628064697719310061074793338775634765625 ± <2^(-115)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000733699391171515021233348360635284386318050748335431366761737006601121718947257509442155345154331051782881165604328864851125644416584304019779585457095805505917233362790255743406432532258226892840419640167718880896800314103366170238277978462468697452885947322945675059859839147966691393110529170109622820780806801356787415647214804729372525618207664016455557736784142092920562741341589969822733056010776091143272408728596835470559135287082657003220948939654763874495014016467770979756400603922369359743876647451777958338392216629883532583404228360626197469307584764272673514618749516988972806700725629372383027302865114789298269156256927859866175112291131199526716955006122589111328125 ± <2^(-110)]; dctAccuracy = bits 113; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [22.160000000000000000000000000002853998841455224547909644629537359974533268712137637376594528379126297426295699398856700341362685749670883286395112763778368531826078997822246715181152384021812396141781522571143993031628851869977849416137036388305213056395493951741219284693062041742550594136673680623061954975128173828125 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.04512635379061371841155234657039150871136117082271721661384165397785674428156472941659482398174112530945857325537243886466242097026332788376289718204471945529366898199699991400015397038096692080833089879748398827131925645096764872877144529359844037176848553529286996444515707027114392431733428231123171469875007437932511129638480097813110165087029851440104236269879550652136975231587085077763162645638623859278241888287957677298224160397902664210265050713607606917014160302543078637387927962415904940168889039461055962316559291220785027128606579885459598424263674571192857254420260915139806456863880157470703125 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000001522623994823888837878600675017370235261106427945708946129411532411495369917122245855382725309927223918732225865643119735204858530709667140634929993238347327264731213064964463268009595889263877470914226974828539128310583278853101247158958590578303007659376729710740844334287173735490036033356108424331655258430652550460582913954706080943822634025049046968463276525464732236626258105500490482258363883579603627698465382907738362126262474282623397283534918636967148520502072973093876733785005983713189231580981435483866896597358944219365337963721207369114742813747249048335192656841317977478819228479714395976671506779257631526682617430482446076005220714222332389908842742443084716796875 ± <2^(-109)]; dctAccuracy = bits 112; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [20.359999999999999999999999999969394857760291500583709849928553212053717456040240165166460843519829475971909154182067341608790639664718438656752397548350542335626748971766371396258973534475809047768735348683492869990114520691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 112
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.04911591355599214145383104125744144369396223619950833331258755943325279965639367146502630648987289809090493245543653675349796361031438675644312692243213337713556298714364092885916037094488695330439754881202533306525530597732412346664186228167248430695928537009905630649650477976417195469448262204014900063983360058621748915566909176144703000475572452547094123006180646562908710487157536276652712241944111469239765738139000742096398865114876900436727759636078229221068621067556169334017145760232850523630360440913744069272871042654176043165914262995712529009518798413691693938165627741909702308475971221923828125 ± <2^(-112)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000030242216867094821669620399156466105242201518022971364258011604986209708294360195919236795799352361322108885256831303233850823926310554109673401142750827177974365592183411298807395283859268699200669088509711210503373640589099491211906703908548907276209643610258343250822854364242044578865093378852767897805313730660758816130043715552119936470100188622122837014782928883125060633898624700277256396684995846113566965483452836290475970903363686547773919974422306840349659620283352506878829267714585174764112784438819265428498276345341156444582551399805460096958267699102903326592059171460274315200678055956134251982065757167246162380889346551235234705767851437485660426318645477294921875 ± <2^(-108)]; dctAccuracy = bits 111; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [18.640000000000000000000000000005220319630645823300068814712385532370231348726993934693035099180289578236791536595026333398680287572563984812515794460308174755139505077322809475593111790536438321552436849712428935658581976869977849416137036388305213056395493951741219284693062041742550594136673680623061954975128173828125 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.053648068669527896995708154506423140724642295302279204219602392054890740874438602849156570409721541349587925736899923980561541107553200408799480149320480704070918345916275100040446228382810914096775843173124934347497337210000296755265866404104962985505959359053265409624901162866910819873479336640580296538537739727363086395524502982029109876236820746484526567428117619895749735199681623985563333801969760563750448534169112809501076831221931427796609043442498148166269841795832006979242515457238128298248919240730148252320949903626039135770669860758422250069726866595677151894339118598509230650961399078369140625 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000116355651412943839984657722087110429723516787753571174032755725039951351429110087462527341299189588470575031553408607292724616992046066427820212585898893320274289784415413877661475158327272257206540658021416731450924695265524924969795290098780551838710783903563388219258986728739520868557369767629883712169145149861211757241977518936338756677717570517096178626439752623615341976864116707511226880559466280673365004189442580135915431042594069460467446522638456156464258788286718111063853367390087274905766911963031407799171691990450153695340896858442782482760157210673393927199465580683406209071525419103167559335453023263533728047923018387131699480363522525294683873653411865234375 ± <2^(-106)]; dctAccuracy = bits 109; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [16.999999999999999999999999999974685633836556119038243812502010653792275236632458477543324906443257852905133761917793384229333750887878103771941641235933443493241234955913610343803891654012370155220879263681070537226442645691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.058823529411764705882352941176559251459161765750109282289111593656767800504064726609936395701699396140717438536137633214543562029399576963186046209966708901293344537047209161260805819427513269313171493725940867330039913784068575815981011072874454782463125176273662750520445962833981561029843104547043420116734864344748874816454044440610131450323401434544959411567832470024580282950489763753038983926187676582853490245568131951876473498282957919877057304057423088522347630036750668407420877606356382877773197907576681702715538983993914862271332878685619150148281289314645785271107314429173129610717296600341796875 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000242595759100997413413060883820631093952938748147574098669271480966448057283856870547445679028269484835741061356719048333289851795347910207255440241325770526375728622813910350866890478833432096217385718642641120434261299190141092209367090209033807042333255204405148341472393528241660120481087220897850824108946316827003690236434879534284003963368864158055830032715454736884396851484112881090829297847716815015623612030583002616396519893746498013651162198774979551646580079840924102823700272943471204521716609744558530620910540640981356377131440638166607555986965740410503166407465090083025856006529449133634520693510675748650409888519861281892808779758752280031330883502960205078125 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [15.44000000000000000000000000000712331560125529594858660206963016361621725594938607409764346637933573096870356045849751803112711902744375248058783813918036636310548344500568395942601522445261990388686558068987502748964745690371984090925749761522859380928820302628273652921597110525449292328659112172317691147327423095703125 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 108
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.06476683937823834196891191709841793619120851085065012044960683305330528158830797873244470749952264023141585347453625047541580525191014340575051095758993741153994100587857723071685603448688847294659369232361839770955947395884340493003020133933404481000665107499803518420434696661613468069162868040737200943843209735100299243815786706514193475058472807558523756933640894493890336645362488862974044756333769088165870418099025278787597326659288483741739163879353094681728148833239688517428536753967940899597844260739942136266947052341031745342670210023954964898855023524930872580451790554434410296380519866943359375 ± <2^(-108)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000046821247778881799303937204273166583409849257297685347709234320673995270169454269884407894769212991634733401468994466689627601603641600515148599097477500055472583600794503295937612141480556923524216626229636619402055285661253376534443073838178971940644276975601468411815304127502232505499996112109183851474938310304099111244429662190021312935963768286032625573921345644368096060623957296453915907472303322294240698714980355249711272468427986083859119092178681024200160163680082113786498050279287575788970510842743609465671276895748464567670159666693520278475499941187032304057500338345524686904832675715793463952912584263624613876685686222368920628156274688080884516239166259765625 ± <2^(-104)]; dctAccuracy = bits 107; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [13.959999999999999999999999999979431233071603153865381513287304694984919799714913163552986009411947612894998994653519426849876862111037768887130884923516344650855720940060849291348809773548931262673023178678648204462770770691099713306064416019079305102678839144405495197059607057933627860535352738224901258945465087890625 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.07163323782234957020057306590268932941799405524189774532466381043815015697276393023741008024957076545168194525810755654166796785664924320306452029740525762905992238507149875282596939443048039210623270795771646581886776850648195862804363219027002147096341191731392801277615590401713260851774113920769498680287124000788828111930965536323282184748412586352977706091391169359773960902795957850879950021349921784014959848861147591487735960634771285035655643906233679021061223175387440412605378220684575996988894242878281143560257166731482743099705873512869948250032676656594114728004996095478418283164501190185546875 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000009738713775165845727877074066782861252777098444676646563019978435419087410220684035583101020079691655714647223474311022703033903193670653842711811000806554237713012598731450258201258260918086282726310386589541125144960677119833131424770486131334448166912825224926117564151919201697316837016135798452690520843625386590283540847348565766853321016527427334781076733433759654345255404102609042097272958955679386510351527679734087688078875124860254367238379490812070606658955217274782328688487446353309420768602315186232813801878316752028397186284884564783745985747376546443366309964994312638705772298776771536580354787459892854054771308176135548306806555274306447245180606842041015625 ± <2^(-103)]; dctAccuracy = bits 105; getAccuracy rEd = bits 105
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 208
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.071633237822349570200573065902684469621015244486537320228481142891885152816851890903004125163313617808510227697366598158030288329550558732554905941822629743636612896069548691449645009815604222349657989052427392738018416771264074851477271345459349861969422099099250112342406643454009580131973149702739861984223385770458743890231543420525519361417311677422315419980579698720456927071140089811312999827648790222251005309166770115191960077116928606833757551148590222457455202427469815694996326230649126932752339688510452599348176736746530586951275101692963406123664536142977800027084197127845562532701945913145979024202244549606623580709739707028660404830588959157466888427734375 ± <2^(-208)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000000000000226104155968053283296442585061962729306374258782240942442798759997524845758148974480538983804695540307054546415170548237279678819331544785206190577497689233259795382730514916387116555874419271989425645443473029308471656694897889758994434517003213613861589692533016204833984375 ± <2^(-204)]; dctAccuracy = bits 207; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [12.56000000000000000000000000000855335710356170631419772681155832907271543007316810235834702825435530910642063170195500619779577837496308589471800204603057982975342089839170152398839519491957616992294788360595703125 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.07961783439490445859872611464963921435107859654220439001137954330808229120309783830147569144102977181373154866531362759798846218687562017522961027251206283298997092554605101714651465549484208290926874081237730913257299362114435488625443969104029047003642384685249886754503632413489211684878553305403288474984434761532983540426758329198106625981806431439282205912577222936917963442348699162047052016426488185057393880140880220078145864739809736755961265040614797027305890487969907920034504744006257546186027262457872534577315056446111204347307585560102750375699799361274393294518603170217829756438732147216796875 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000019234023880203568549746919832235273099148204597812482605995781121420092522908733867762642877462189992551922691516390370508502438057018253420971871837661316673814384319273575108981695499487734265784936842977794859568282115974474982900287908346032694611847209086378464356867023701177454268219080822606989337564753109731755046557202963764447534487036529639116894996339205573497159820498280299819464128154914725036232904177566399440653911983191372235946959162225758629629880529580949782080845730607676785314792933638773582901155605759108157911882809286587101437017079494931035829388852863817399663507487593876100341063455062529358800037866845944467542040001717396080493927001953125 ± <2^(-102)]; dctAccuracy = bits 104; getAccuracy rEd = bits 104
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 209
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.07961783439490445859872611464962745293960096020896546382432014893062496834791164104251320884403040728667744320900864066161076147741599117817995042102213310995001219858849012511020989777623766016720951522099786811351477481035299667026547740447894429865572332915643532148055851196844021065962756637808422933090722512558179365485106245679593151666215108255741538854365758589294340316028136046140138042422841106293067770815959440953245166700920272728024935994147476835211259325050989371231569365412373151595106563243506890930584426571038099744352345686716146245648926923565075248685939170519274655660155477539570518830154760049579835165349528391942612870479933917522430419921875 ± <2^(-209)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000000000000000001204374525451858544107414545126428458832290995482895518610970429386117304239814622530361106226035065251656277853545825060578325122632768531375159443753318097273105805121311032186618116821723201532370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-205)]; dctAccuracy = bits 208; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [11.23999999999999999999999999998382424845987132865042855007869382824114529203293403660031109032399205436011127252761709391645841035228755561881388311384000676251290812542667392481821053706880775280296802520751953125 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.08896797153024911032028469750905212098997616435246868996067963985933385501753238892238262703553442162946198499211836447533316962247399659830562571612736412560558191031562367019059469650251068969592044650975134932385524174131978714105606898635303102996575252025175764108056282274303102391094972485761478891287200486242716097006699667965364751823984835600384938427384010576578311377548611233692195303838968764735120638024397544797289259186226835125235017947362532606031124374672171336086252662418722060686990688367605111168210046426012434923241660743639395222804476924690318673238920155199593864381313323974609375 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000003880702147349797808962904000966467123916226848622417724503856445637269137635307899705652069187772132235943257170203526832099262846690814053459509435005024476650993735457473321160698019914727453483747826665773534817015949358302562750060089252415164857165908585594391151767156494402602864908640674236683033645975456128095284304697688119591736543121276187297112320687009487180835494911519954334234014880263607593371325338598152120153447882308883794684630592730343973642578002453741095609421645251620627677154854730767155261671157808911259704299262357297802778491688103546462235242420723081452197730904477784009164119259497122915398922921785367090574681014913949184119701385498046875 ± <2^(-101)]; dctAccuracy = bits 103; getAccuracy rEd = bits 103
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 203
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.088967971530249110320284697509024964730070675611898218446249161409888541391248272567420477077609779763353632136209663396332076762823451067009425492938252478756459637249068888408228437721422831174106030741249780693366918764781569846176275590473585949081003692849712585390042119351287384389440689068609479154627587306819717282001458400398254869377321548213968669835795667822992664371489007869684249331767198095962271581106386634674231149722404209022905972031942891345388971822919069276781518585015055292506930663544896292089590205802234186468393668397118866527340400151551143452768579700140233774282620305506051376125065465104146605955330595616459277152898721396923065185546875 ± <2^(-203)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000000000008545132852535767120042590355950053420302810177333524632364597536072310219863764461378994776958462999632095471771705473629824804242399456928542611118959896030075407873969638031454353023529354079254548490069559034637284685184879324260629786247367434270927333272993564605712890625 ± <2^(-199)]; dctAccuracy = bits 202; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [10.00000000000000000000000000000944303658951150114204522971017955643771755017984910147805752382342326424311732390124154076340598759812165192910100509704555443608096987890393979314662686874726205132901668548583984375 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.09999999999999999999999999999996178370494533294293754846269745050614108814917530601164423792904794137181452433966204741270059537682561571742818378886706740271173500602790375050471374444958090159767548296790236824162904169353501484058584626992280140523228346645736654560255387848841225939845921286797144120739476615047016293757752928966912590532211828807828522106270913360243518442521648509795715548873765654284529906169865616474802787094679342980045503705718564167774113976076208620336249566885720900727030680947121525337984469251335920236602575528439582137569936162897754616807333150063641369342803955078125 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000752709918247060503676293183438233712485504826863497364001213982396856497754308375856422615424283069622170562839552372919384594202012167874171436314346778748428556188415207586246463729868130320020056575518947417803930283851388240979156048405901163617218276971756798685647422523685235677627736649346236932405202896204283916722789333408273456837963094988415596737167121946300818158339662840839915974163278545470006964241482206756023739340533876083138535706004501766974198947332640077218123671008482915437136050306854415687089470894814961797792970993447665984176481495622345713583145790088314231062688723332553134542911492036047250435803319078276185649656326859258115291595458984375 ± <2^(-100)]; dctAccuracy = bits 102; getAccuracy rEd = bits 102
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 199
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.0999999999999999999999999999999059310815025650940157419733594928216809369408043185983505524846420942807922681141225326504597401318563987444774800132527551430512627312640894178087331945405174055213963996773606530051113226711995969364476037195134303076999091229884860867387257630445587782124830932685258710804664479369240041093428106735679570386307189428536358733938090386615299221238167771824541283465289725371558332805469223613851762402209307130331929398943115944588001237795571502938939379600876642131048913022809293701744547651502609437848807118699848006376224542024026777752993599465766421198631687863883411777139887007532682177725347205665684668929316103458404541015625 ± <2^(-199)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000000000000008938987137955941407016677284748405914950855149638203239346137657133932866793945809091712264572372814882353676676246838428259918240205660491717820702539890551186633711666615233163348824897211689304335991238260203730169119942987004151144746211254954459946020506322383880615234375 ± <2^(-196)]; dctAccuracy = bits 198; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [8.83999999999999999999999999998759504980914643037395708596421616410343536961424611858193772569240146329107836590513879650602169868970010761517549288035051325053930687002765978647369734911229955111396670329474039693346310315735772181294395479215592434978613006986397795253669799442168553138543529712478630244731903076171875 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.11312217194570135746606334841652762083770285348702726243559010821538146617964600621195411059485077855089403978702513012035368032913964750931626189685634237788905296439012933674656066604847400672013822380518398651564769859992768749763823654274107677127375113864790084880021586360482571603617275678576878710525998557092752466789112369372720288121575269480475515675882770692293708838647220413373432071777885910218421762240324346670750080855258948478064124813483472721761387526614330362745353537904711737324376647901651209482220452928645977009698325922373086473346564148861718990257685391043196432292461395263671875 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000001461135191722098532554552053459704880246264408903103402564042945923552325247070448561895190291493942916903201055460995725274842222622592356126394442071324766752025851045323274228529032859573743672177966272234784196406139239884175986366557151234760119490489015427265946702017547241004532127384893962399183123064938831033983050590474693102561761747766965477362506574669679454138397543616128935412259597325256968548034597426195752259821445116573994033995007797990164675555217761543404731395721334204787558884551399135121709683979554379876548712920950201488500280961187695980860526474582481568836202441144943183244159645158707723489643405014037913502988885738886892795562744140625 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 196
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.11312217194570135746606334841644875590194445668245391829015248276595986708031353738899395289507472995019189782830860759522516135506495802782298151865591948718651288060404646057577100722885336643019067259675593635231452095364434787095108532821517626968414380465426832012793125661389113879359429983627491499152938971247604378871561132813334284720908882558523759117306864342535683436815225574580966063308604841389789513888840474463348680533135863767772725382209062313194354751864871192570212321965329853874772376423095257005599172822899220917128010540570214792585109502851521238029818973989811720649827438012925249162065842120590675027626270665592755904071964323520660400390625 ± <2^(-196)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000000000000006300827996891463959678610030913282029530205294159642778282106301535141770280891740638399950146509950191072626420870799534313990022097653038102661182707279319041274576376841657957035472658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-193)]; dctAccuracy = bits 195; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [7.760000000000000000000000000009821243008270488969924950434632619296371965485989182600462082077823216383797257774642537608326382392795740196233486374448902986607541895034349164152940144378545484115916355191764720570691351869977849416137036388305213056395493951741219284693062041742550594136673680623061954975128173828125 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1288659793814432989690721649481975864726591626874343870406997266590343100071341708886965892899777139724848836031326296069088865228350257564056639660293714793001568081232767922009292364255775968623539959656256015113177392163063452741967487282190659987154745797154338937930580251137718881740659436204240954609820218692433124371681757908430940786585091535414057582364365189797505721662302443775775117113878149760427251372243691138765163701691810900125217237113377512789711157729346137805832773761454774480461592499881966350140051203231066917220651616249917407072383331045374588175178587334812618792057037353515625 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000139883509262874302444844087233747292957126285957839281224470697342556236424811951771955101598015115949190003188325871598312906977403459986883568163568313488640539423938069526177972723237298027434581090537682721264336580115763905748687158052090818361615993159560830558946393247340222897034672829751228152111306865527813563303482176528492842542561891628219635083241208064201261838810761713293324715588180571681772449773513425799937196771718520501703075255367004490503817097974030933334508386318043535754036457134885916129909979175962347371317744388703801283825300263078398478836643545820546407512935928878002151783273847512534365476947312810496182322594904690049588680267333984375 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 194
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.12886597938144329896907216494829123003484451906923801178001237984688143595213692966994103272302777296064873603526448136170819370257606466842511236273663126786388352577134323113380584569476268177206110344083451635270355972754699667808304476032441277065922798640773288957727744849122943910065566431351712587684735891270409515212838347800306974775760599969417962973904334744452519219406118961775091966100641095235736922517091758778221025160177768507935676105749580881066987088699608317117212748747474655055127655983353377636736555602331308022825192087839121829090144244287828634388382598576531891501867440433434984632207124527698136246846305486002393081435002386569976806640625 ± <2^(-194)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000000000000024091752224310570745806836873720560893246623685653999389525665744626336397987249426174255489740053107031912959307475745954734772329644170244624332630246136399458348606642053716978031566408600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-191)]; dctAccuracy = bits 193; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [6.75999999999999999999999999999089771151497943790421159917927849634142507694237817918777451428407430698231984820962375264621292772753169963668965697151248079897033549444211597556630977123859338462352752685546875 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.1479289940828402366863905325430391432256755633579779107771370871894836936911250402066869691683928428870435350869616741170092717013332027926394713668319513278304060819310305745209293763841312140180655708614786628615584929850558548206815891301661675933785610677420295185276504807155039906789673055675599298964947974929540751543867521262116681551708043646238505220873950440811818816543308536360583759236988076550380340992019435961032448171118189304240497400028210534600228799088160978705248026478925306593546719393884270854004227946519966669976581107348234963545903782153496941464965175327961333096027374267578125 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000012241216035226661986982372581095028540062033188303411175488104548480318551141627975453771224475034926865421197302756639176628728130054259658402473016397142035176231533870887670419097271579256238798573953342359814478540000404541612009322299019140363002316636587056401783246882678279150915690565101563347693709710350836059726109568181398078285525926918212696380684727921000253590391227797860416082018234949483193922694501637658708543100056254836764955253459589523015413576197976616295495454005593518285096731655629708531387461614277731049483595580062179190148797603605456728611950979581623606493378570577437446563954455691573800741136536507358556491453782655298709869384765625 ± <2^(-96)]; dctAccuracy = bits 97; getAccuracy rEd = bits 97
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 191
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.14792899408284023668639053254457801751411217003022379819178360343402631090494331619370358747742216303173515917458165657404850373780081665317740919306921387001194244329020073797247330116947531258035618789013220498748556119303929151585121749907746338633576668616068030916626311935606851587330349284352188490431333652518144159918388949002179279657357557765109002303415751624438048962522411710896171455964343587210775733962002545547704981804348214080269930585370065022265129795391074795346100126649068002939140602271836807673745365780791819563781642064683499966141517644829590546947522867297749470735713717365077237744255878817528672961902069804551729248487390577793121337890625 ± <2^(-191)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000000000000159858218269057478505258593191796017348576055511041810115303217065686748261555285356029032038013820987223740163965074855928112637429771452495236314927973878663218213333677218550046879222658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-188)]; dctAccuracy = bits 190; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [5.84000000000000000000000000000969760600956060597710216887463044254693991084437904551795217895210577188454038756147637097367344633791052061723305411001569783205083263695153207584187526890673325397074222564697265625 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 96
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.171232876712328767123287671223501105207457819014062808608353413421418501095560701076662283757719969555812848369254976483919783165788668650116231951154159315802072470750785591670644873060457306770709081339193423962003414956390950314946344608319288463924845221281746032602119123107766897993086823975494997138174626601615616265343133714617943871675787875530643771099810036424956844953385168770033130653334831407627674172938089262674551489036311172793677618267257986548791830423108130629238259617242112098139241698086479953329972666387620000168986899968032099756563567155738525560337848219205625355243682861328125 ± <2^(-96)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000009858110349746915119001603231646710288229511052573547905839124822031878978141311344150652660686990921135994502008999462730546223788456590312753496373575592869669621123324753127442325603458401019999751522959010441983101292602004381510178188999757692414403770065832301823440873451592121104510302814333102060478190083735046834355444104057411313430071387358323362574991479492603379585298440130631572944669754866399240771064347604838070863409588347027216827669880428439109455333063174598035327032680897420596742926324767935737827835791168808052211638481012154443388457969627871443483155553072711356464228703432824303745448888312998721714965066897917722599231638014316558837890625 ± <2^(-93)]; dctAccuracy = bits 94; getAccuracy rEd = bits 94
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 186
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.1712328767123287671232876712325929483860012205437394008905047535965569551909132555620371634682148794581964991611977662800414023169411163816030645121440934599465375809889185028115293410457143326680337035100692823306971037701271469499075705769006042124770092738517236783564063068144556198892092582724275729994773022371623119510629826778838218842907578516150947774892123695013034730477353336498557683701280369864806313825352446849874842636511843087392436742343872688157918233631386219233487820575505904496256884423350509141251634536079036761207750672231954466450545879710260095022526673518328417750900293253063484747127029398018304416108359422565854401909746229648590087890625 ± <2^(-186)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000000000041390606880428713898200571564823030895477750257971594056152960167724943963880902307077039517161798654174809663701260834624473585821282019385916223687405364698385746439708499053046445361764350336689304335991238260203730169119942987004151144746211254954459946020506322383880615234375 ± <2^(-183)]; dctAccuracy = bits 185; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [4.999999999999999999999999999993669640854177766075967770440746815073954940927780734106070884648885588246427065738127082011090186415153771645627543900348717817199049178949837000940359388323486200533807277679443359375 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.19999999999999999999999999996135509604902557213058109123794010637455436300201221270678388149792944651220793536565982032588195362178277567025826470840551446010035329131682421762098223375072713719384912461843038055632020669515355242306289203561443693729193602350282077461690722055338172122519495017475818456970385315603022042247690827778786648067276800581993824666816555144122305911694194754330214629019527188658172714398765690134541595549527689540199572040198373103987498080232016366893503710205393922234382075806200745283578918390005414355302176351715354787019391399720269486550705551053397357463836669921875 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000390003997741497100141653243688549798991812256349052713300708402367411247182733646592227482067703563497868167127246181336207712998538191876955763318889104672482503244287193359228729001656039691643901408984467352886030911767633210416036101090065979255497168828832499094850407498876827016071312188766411925163875959873280746748771309715729427135780679773380157945172359198019948561627449144449296596566634403128109042342803981982816406106031014206571204867201132476020816758870817904958237976128287145483390378940779390937014175268838965011548273274699878780410863490201038725134638128648920718663248184805223275991534032113128402548263284899121572379954159259796142578125 ± <2^(-91)]; dctAccuracy = bits 92; getAccuracy rEd = bits 92
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 183
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.200000000000000000000000000000253333935989780423257203709773202037826492181360992967203859071928758776078661909604132940532516336469787741852905816066794432223077571986825019735324482878294849409458197614979050459778740188145551802389583836734837421212955093650534932806845485950263804754544274254627191024255683312145451341402617783161763119535673490802096757663089428196683919398568542902823061719141957854991479839236547482975307650812419304784530084491342896395991246363922114541549463319389416794821884318818321426005613018415611202451350675637140335116834665134834521714836767450639456342401342651245673562527157043954432525702247236409903052845038473606109619140625 ± <2^(-183)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000002604477627286656197069572024176709624463661002444857103399548835347784758145978841424030584246841391047630354560460906573961470550328086737659922252775826834960394361731939022972597070699577038359701676925645443473029308471656694897889758994434517003213613861589692533016204833984375 ± <2^(-181)]; dctAccuracy = bits 182; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [4.240000000000000000000000000009063699649875158006719765126674217098627863613993294995116177942954525189843620669928345809045415634437020806457567888765720984207072816719549281094803205860443995334208011627197265625 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.2358490566037735849056603772526160822440890630673520293614506551698599821673394463153436774873880205908740482781832259857726003528953249880723407778544864905139466146108187422694696511910844117922645396224546350146068687192340159509769257204443397262905882937706829209005488836218551885862393531211179849938013419769611772868719819571874324240343175905925341340852696340226875829095530972047251511390617883315706988654950144647804002874746452721321647882495226512185588533803595546874033039938872167743716323429169146603059640285204864788814866879252055939405181722600714222526363528231740929186344146728515625 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000007893500065367114660004367299928504145784023897524184427602265555958499574945183629218024180151511535589564372611173834212984281742092199708190560620720972390516033897787257426575065385845637830883981838908027152217693952871638205771440331573719873182462002491980825863155735873350713218949909917326370312989075180696040130735577136143280849210076496603141147581555823718353102193645269240010940890681307646472058035279573427941264711924318683225411971501336254412930898335464119545990571991328044672563169367412456559311120230478665865071671864707021307155318785450816483268697139597695836201602401483481419662515010706775272532331744201883338973857462406158447265625 ± <2^(-90)]; dctAccuracy = bits 91; getAccuracy rEd = bits 91
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 179
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.23584905660377358490566037735798701130132771335572571532995636990302724832975421094247031844607605735297350752835288228359280547467716323035112927765600424033723066309427125115570146398331271393721634073101734190132774310958384060403888239125256909759875791408003453001040435308109193153555079038018745777507745638083290652409757046470985676101213624847568725787593998846763202045390915713380839826497366527193699042508333807749287241826642678359367990773963189232491119053122763756298906551998758312680852912088417058997401310771220621300336214320236049605562681753992694582288615532041899835514951146372598956433353969449211691498773102448893723703804425895214080810546875 ± <2^(-179)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000000004317108973938831854426187622210238057404650592419573819652761812973743962156042750967652002261783832973306335063174603225620389151344089620441082550318657014513043613394511965849921445361764350336689304335991238260203730169119942987004151144746211254954459946020506322383880615234375 ± <2^(-177)]; dctAccuracy = bits 178; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [3.5599999999999999999999999999959505601318444016286948792936869343034232005292365254602624492593357334176067187602756315108483251394598107319861861930524791083421084630854474943617571369713914464227855205535888671875 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.2808988764044943820224719102429065425469653370910378247499022860406232842340415502668456751103859788208735092862327695964287935959089161490421759886004352278287812144690050977561434724942596878827044941511427053199265381505235132568498021608640899594983466616430340082344190371024094700094993845301621778480299005597458486229854825497531247312487539686665393110144405192615928709178421044662046001347531071930616510677930565360720102649873868361300543116292170851293774365275724151251696197184237425197694459535198090611167644655290767501755039353794414726053988297198305001955986881512217223644256591796875 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000007587710598810642983421111105593342347578675928598197640915245095908482041704472873508388492457925016691228317244981806215107239463660436636448815223950196816083862704042799932459903344384767367056270255183236546762950740479667945169475606328589313191264182174724734350165897733841948134686990137568415126089080706788785588509463453892645472084962903215224165962420600768233831868059497254764862928953077048433720907869254169553291491029117652311424743022247942289259614900915632140867044686694608823696030536770125680280542210451586146421918134134834049076544923469370226636055399521392315200160979492989791748931425256027808877619389438251573665183968842029571533203125 ± <2^(-90)]; dctAccuracy = bits 90; getAccuracy rEd = bits 90
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 175
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.2808988764044943820224719101126800483209992061705178948380074567201833053516941397560761400822749124545792577476315516877167244647671712898485533788377528422672451632971849119821009817254356996492499292260511784977453386641080158518461811079495927007664374351747087768539191277470359951802164724363303206971853967158568771557776330362656072874802303684932499064254897862901104553869589481929814730401812240944776252905338960147212633868254541044415124373380381064109025208493479273274206851971833268908087874710123927930269140349759552124449553434609688781477946338988440569411843813016256644217931055366851730117606556951698846690164412809309624208253808319568634033203125 ± <2^(-175)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000637018541839973075257498805825035870386021425816264866192991679876532696111955661919500066191904978665912165175596625086527518111536191461242825845875260851514878236511466436093285097070699577038359701676925645443473029308471656694897889758994434517003213613861589692533016204833984375 ± <2^(-173)]; dctAccuracy = bits 174; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [2.9600000000000000000000000000079448017597342275293490989012603700109187153662871227192060065797081737804490557031309298644195289232201461782470267374769165658758061236634092423095719258285882396529044571850497773553566224865423515428569210815743678681723166831058399735623347758645650118491943203480332158505916595458984375 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.337837837837837837837837841439032447945953942066332233934508810358011045433429209259627590419324778977091630433878532724316463577324169660361560284690196350309857287751521896843992949004931105109724424027730786880404629880750542164082867785907184489551751989093611908140299436126093366033799208331009881047653041629409656579753266290817181003244004158664933416388898008712794999043333668623145928885748354135023672661495648204165628295904008426041811986105859171455688903943528251669951146099471659163019435605057766730358035746402296971420270233636483144176723548263684138159845815607695840299129486083984375 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000012528945503635123169505799638837899665375944867485894763806522812944890234527238301060848166586842923233251502805033044288309875744290349690602618470170317630013453394272202792333371592878246401479620977362471698213220974262006303450122666839579934529799716977729265479899881682877662059553256946558979527114161195635058716618178093727861198828899983323112639457878537322452087082151372042564672280811632226166315196767247138127706026694642198175414220687938216828763819981074523471094875943627785379891056235682935618132324678857507529384280882707552331676519176928807704479300753790549441734766018334303680300030009822122301077484962661401368677616119384765625 ± <2^(-86)]; dctAccuracy = bits 86; getAccuracy rEd = bits 86
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 170
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.337837837837837837837837837836931338579123410534606434102940839563503552823706034877803187701088089728631031671161007887480318014430290535934305386063869811070489815697900947489444600006953102737020246211685467032542464489181249921437821341597543132064806475027234008499734999146201178426163048228604412283236521302448832297788018480988828298665674100565665688239667649363881027413752908440142974158395280789016953377428484751128394072241872150452013353188293769455156495171341133425564378128405359782860453416365927349775075542848219498199761339173709516577892877093087681862575208085907732263160075760757765075260340334643654157387171466098152450285851955413818359375 ± <2^(-170)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000015306764018352996403249852536840740839356144595898430967517299509540022900485762281822819617001167383241999811008850182108910816933485890076122530354554289458203756562627812027258142352148754199395021574099302800817387023979658628204916455257359082786638992956795846112072467803955078125 ± <2^(-168)]; dctAccuracy = bits 169; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [2.439999999999999999999999999997712784105028778047005246055174195737608141518591652034935603073486301829447992876174181010606463863765849818344828485756240399485167747221057987783154885619296692311763763427734375 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 85
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.409836065573770491803278702688363207236909686416931819818940696034960412906693231168782503667000944901530428173815473184033304750414159400192279740110286221562885089484005734483948041093376569371602177223088527811799670830178202626085610741188772431710039753081167728941265914525715543224895412653180157551363888784443833140461217230862639711059199531641938335231620293546553570421268506932331860770964932241819307516149750262840077654813443095615869426190091021920037872840419678339592999002690506991306004226459497764320946729435474525520449035688670597043181564769591396224512891421909444034099578857421875 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000050549752388735154254317218167063280765637925428265565416769980116579409721033630016159234910234986364779327211690114396398288951646991418135401689059338681595971321069485958784027871430882247664203302180623614370263823453671608428699893826010045251683774515861824800907430161503299073290749052063816063745027251267818883716849492933962788380675241257508986599308398898360162762393713807846954756307515368327772154283918369162051969869540697779653005592336111007670140767600938928158206936250209892432402195862395048221937701765222366972751929243171858119086544079362457873569106968475919151295728261780920024049651929608510843305868576180728268809616565704345703125 ± <2^(-84)]; dctAccuracy = bits 84; getAccuracy rEd = bits 84
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 167
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.4098360655737704918032786885249752096903973860535193834632744552423241944166132265014315420599308390306801209122052142808918793035520949406480549570678033357676593331812346503837062517203644220311784209249420124739622335246175092036556621942618303630000192337978005759246682260698738708563346449635927271623913586962430121865807889817723107515253053336796748049839643496066118630117465680551248943205830283648533276097242125594499491778465551235670494653857390569958913687056325319356866101254085553472034287817649345175158023567218795490468337807712989704508056602360718106347314204103057601242526537946117258918529534840816198394165825735768748927512206137180328369140625 ± <2^(-167)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000115990981061049308285329995473099993521163756760057005378753874056189533042200976302344984042840362360413151145982677096593251470100596281029220961409522676346707784882940312027258142352148754199395021574099302800817387023979658628204916455257359082786638992956795846112072467803955078125 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [2.0000000000000000000000000000063060048588957958951535305981795495787817476119596186104214091971074161318358503990179558844319943375419224171688615378683401072625899751392520957427034744569027679972350597381591796875 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.49999999999999999999999991422372978471184102419319446212056954879065966114675701184114708720892135224749987728884456923792323509206029479969657793707062256225132754877017619056859886197863316001659075624465231598545598850306215096932913965566491770269342462276980596376070735378859714591386973786539046863593312306647433073956347125843393915225665493422904653885988743178988088691257573680210117540438959410888869525330969426078528871217461181528642456999027183045866169498571158704498375753725126990216105554997955136103075238945833080487336835464833861664964308646648405431989203862030990421772003173828125 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000003587570032692041777327198840642862807864797686041294058584037631378635389447794599094758366993452401967080057725488842216055596930834824808519890578144998373430913969920006216738218512320509951437704158671117383559921663262097791527355455212698434488155918087146131041591195998895805281578819304985118829095934487598670164743833110313253263979830989478884203776033559834897452370424132906784962542620384574778728632235560274605297662745070010823012369757565856972648749126060402732200577497857488189115592614996014648680169491775448306263404885204641106583747507062183840742134629072407666858666133747142462528244578529360540863901718466877355240285396575927734375 ± <2^(-81)]; dctAccuracy = bits 81; getAccuracy rEd = bits 81
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.4999999999999999999999999999984267379210854480821935443037750766330756818598410206933000410103197088013325639819212210366936245672846175057906293012766878515469151783496985583829883677153841316076965217118449378233657379240825947293720976240872505227256052524522381853215225919121642372706390564756189793531861666461629497344681592301096992213573755263382818114521746981021814569262550726743183745834462879998125504215241359373470459436970022216072777647902449620185522550288056364996554792175810782813991525152018409896553813592838817029059837984068320704134948744614183703339059354350370912414418859451719170545476290167222858658140072218856175823020748794078826904296875 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000002398335925176047885120579066129860021806854215918674311981333442006909920464801048561099688264899089012780850980113571543687969104757171243335211182669978458060270465105870827030108564695316722658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-164)]; dctAccuracy = bits 164; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.63999999999999999999999999999898399801668146184628655040813325772570488459855880753034340475064747707368749748743762044292416256972990536599309309652623955417105423154272374718087856848569572321139276027679443359375 ± <2^(-102)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.60975609756097560975609715738703940030325291839463658204196705459696662064983334562600531807456614894434875376555504641667273854343355198515849141548666238752998028368312733344297561297927850483532679591104740538744577382749633384370289512493616326109363267811815664180407134620727561372451662996710535402311425741269464538950401799491767765997713694013740070875679995898081452165534273212311419034770420490764348919324375755529862767379780056584420811463204291501913103060481255926967392616101620094032820330088977076558255437694574826366589611152471410254596046319856827988559189179795794188976287841796875 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000001540075471253427679325553890959264482271426226795815551336521656831426264497372031199797863018197542019669507968750407317312328326623150214328931802976167992736056220702653348490375858115576843647609068547535391928276843504018160086420257143494951201012818506626749627328118873535342467263839655768214853673624544190381347414696837401474675030900966057306361636165285555668354431618997451389006293511790714718037071825291880735216456324141461138475869188777333639548050855328006336008186157062128299054507908045948415181132658728610595778966688370416795736829127235757010334234753985869577610380545258306685899004075351696740892037951198290102183818817138671875 ± <2^(-79)]; dctAccuracy = bits 78; getAccuracy rEd = bits 78
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.60975609756097560975609756097598941871470060640021327396428202535634804500937094161994567605857628004023040265164236378715930793295981486469942431748543789938408900337343992054434265055390019654422159622835898653392095298206118291618409769758245006101995448847291722171840643137777764678667613413042752694931739627049487721513774613788977124804517573871789053821206437095081131575043821884161588301800943253515201308317554994878546315197193021071013133996957989049128135340371805015397224581218490765714482377626205028727910028601230726048999996605278964183651788448176399335536471415390141058685038312839456879333276451463606571135045442133559845387935638427734375 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000054304878358749312751176473692890987919155547287647406926538044552217751169263690369233685110644759825505841910247081255583962401163997008996933614330566161144956183972322204825811093285097070699577038359701676925645443473029308471656694897889758994434517003213613861589692533016204833984375 ± <2^(-157)]; dctAccuracy = bits 156; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.36000000000000000000000000000416115156883514636182690005889408495965684581113232441490962732545461607344507664491754078724440365241040614510375299855212539587600295472121403501930547719211972435005009174346923828125 ± <2^(-102)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.735294117647058823529416022115009954028449745752609068867280806400348009092368862206357083700292655522757928582441952700110393011734625309741318597532566732608241169445945931990738736171134478772763768036017566422347868516499454313521489799081424172688459137547586292059215113007018805109494125450615605759164944638184702558075184307339721492162781192611090573433924848603733282474599288376487801297646471876092420003396333308013076389549701865432429508919764503650071923211006985393269088373569150081195056370993676199822217081529223147382314441647512805081437939173916173984935085172764956951141357421875 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000001246882670254330568183363030273158971164768640871486440924100104834634334428427246292732914750705727971839738478442362391997524120655500254759915694967911262191036738952054032019191547388977773245819803044921555425069846527575282125929240627328936356491775080999579507996042025682024790799294660284502591663452488592784842549751607724000110300449427667505296170377601764560946085509087732925537837276006656404208543505012617548687208626045232649350880816264342991913881156997898690937946019714133151294490623772654987756196589851811528506659074568634642841624571633646732111006057442257642122377925329752193964291846761671678223137860186398029327392578125 ± <2^(-76)]; dctAccuracy = bits 75; getAccuracy rEd = bits 75
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.735294117647058823529411764703633544944210022392269356243457296260815216036850314155441560513646641064130779056655893948437909344890283492523934630508107748088200464758026404919563325710953228808873079653704031695502378847662606444415973152630641796507675133774211750005017574414758337305286608927884048366446428571766472614429908377673209815340739292646178537353336619954620221994217623441082879427999420958345014418036832842162873513480818145393035013884016335046082998886299266466615964720818311480433540347886679957097728484107453405580494891378528130653586920142142302636604922593245189219187009343243353822850192141439925230979313131030039585311897099018096923828125 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000004078850051528446638270206593328596204187234138873472785421221882492605305759870101287667523297306148612375833788056013519086823127150549021472894386970287335554556728144075733853378763570586914590332325035956832171334695645039966097713674860758762265137977731654927993076853454113006591796875 ± <2^(-150)]; dctAccuracy = bits 150; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [1.1599999999999999999999999999997461462735738226904163925593523865523962315929782514749919382875637443852975670344085439302516007239887486335395113645832058965013044913385386173969233590992294775988020492431312478502192444326642154327843007123484599144556618757701158859288797920556422782478733779498725198209285736083984375 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.86206896551724137931032619892830401106378655602639337739998903125753462464381397321703196857501077565561738325962537362762537972348360294036878891587827248294125016089227639304829582122566706315456988246883092325396328301438645564916327195873453385344009774236389518416265313410144025166758598252937492736006429349209906689365240825276300015626497994722906831781621208641768882972808667837117692714218177561122846680214975891818137977118081815627854944130855853787818095700320751516980457365927752427412553579351709016239806974788837339412271638158311465906685053706311194776645834281225688755512237548828125 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000002544968523385353337781740442479175297066812798304236722740901667454318004078098291759063475083907199776772522591317254986545426219040531369622351168107175155550256673239619159819540719493654941611364590269159728088393271394389677827165883333330219303868650669239677450362535650429706683270098805460628518945711851499371691097802480954724017476997894471375738045772236378839345752491271439821331679164381648933014136967764075103412692449455974799967189536097914632643975410849306825519037358458065875504188429974035685211386288246539640978446863110710292115925469777320081613058613317078945231763638565771945877432803017302587189618634511134587228298187255859375 ± <2^(-75)]; dctAccuracy = bits 74; getAccuracy rEd = bits 74
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.8620689655172413793103448275863966820910603675787475584646870592468581527569869399941870781430818379049523724391388917379421572352886053380962168669136712669782077881267300653156912892562298534055817114264862742477180998722336877902146233483089940439502342067744526733635761325094155967459336994630838240360593161602246719491699620344466621947045125993711336682598813212668711360834906107204939318413319805046683274299375220630614256973011774446807375037009654629612392396140037620226525433129378918145262983179769002767617058626579850666682014174490916792141870235648801628738003922567509613672869190266116172618227540171555005332759691327737527899444103240966796875 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000002751265215861788968047444808767941847714531710181193832298415688714141246040453893908847569734062825488244051248998585395740122911373372582466054100116273763730615831058198969339594928427841992644954681697829254548490069559034637284685184879324260629786247367434270927333272993564605712890625 ± <2^(-151)]; dctAccuracy = bits 150; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [1.0400000000000000000000000000015141539347518155021957272385998517436878943967215989991663048250899330812483405658196240241071390973115440561309250320797748222000421744834029278654443502372181789604068116802771142389015443615423515428569210815743678681723166831058399735623347758645650118491943203480332158505916595458984375 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 73
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.961538461538461538461599834913246712950910730649819269904131500936853259012691220200378383863101012027592854789775682817575895185258333977988440314046273072585677451655899750315193065754477267031473036301818068500527101268385761235687057827549970178529353398621479547266239647489778502945211620026483874440051736235441639859542210276678306338730401208285561780539521458880746691722671669137808246330221174731399101135493401334927236332581563136155101356335590718617759499957883341066001801505307699716354339542327585742566431397428688349374057708083160783287844717952264073090873353066854178905487060546875 ± <2^(-73)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000010264970297014932650038791918102806199430707504465751386369652501932403715614988465086664868936374560403880620106661225321950223048333767669992740454668131658244375704598823325644178513944277209164803895779266222185099750768699716739514782381139668311581284724426538192320885158033475789441627474179279088835365326759957639315329830560285793340325475123966543389475257965063072936457933327994206450390863711457100366543896788021132792073335911241675049385608176350776090494250050659339154742728579376718959595094986431684295379551582009102079592788690793826279451096937430945224743205563174742636270065205734728646541110974599320115885348059237003326416015625 ± <2^(-73)]; dctAccuracy = bits 72; getAccuracy rEd = bits 72
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 144
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.96153846153846153846153846153706614114120391868495045575528148282687745533193639876437211841598369605982262106408498312050450303519568534479355537178945559384036404542317179952489626945633534453751212463297818745226920502507200210700178402940675641883458286769435768950552277046524851938548129835585726193524263128845983109651884815042238923824782276090075639802581899289401639292601218059511410475304318577402807242935552174232619437795616436843676785831879546193015084009397973661395313549833054095422753089014374555261012731831250036287609432444706724930412612998020656125227395040273741372622916919778038144154599425737461036202413655615828247391618788242340087890625 ± <2^(-144)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000002698300844802816505294842257716744148656057295308612429570742845787908287189148834382394609672652076814222888715646748497931294918574028290278596585881895111184436453825152605870827030108564695316722658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-144)]; dctAccuracy = bits 143; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [0.99999999999999999999999999999999988218725418318698505494009198499850684629605156566861653617327487426593326570166248991400540439125528518577464813083579352231466766225470772268268948579361676820553839206695556640625 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.99999999999999999999990858432485663647010170659712136935460973689425503473432076156086887095352987960865090996874204733665787560462776880549856296436378348628153505502638243511712260321181070796003755152830469822115485127665735385013980870009127938077642041148714385960158204230099309020763994568996587104851509500838227676834963877166326739162286384387192100490949195814958748691787351496997130774765934559439007805560631822041148077462756555248998295638472184037576651463979808752740950392299064561473542491841371545492893670716217112665956404166898632208709991886497192581373383291065692901611328125 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000205025559771909442099620089909483053524076712508295271954053597294611050397536929812896547300052279642158952321336356851011661995421984410738712790542349452588459998060768898803538414893123449544348412708012864729463451392010086193608232101830988368568493844945814763636862630194722558768120579921809503412727842316257526843517188937247438512115047276390637536171600521241165573245666825619845868350300414496625770500297197000301673212513923264311787556566005485963112641307148907734728757117689357859209252541816708710086018993941468099574406525656941441442665511935889276109572922426119919078820311012358460823513939264017835739650763571262359619140625 ± <2^(-72)]; dctAccuracy = bits 71; getAccuracy rEd = bits 71
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 143
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.00000000000000000000000000000000060185310765356494447722613591415419303148082535108699701188531610154553775181985541278389539243080214043250613850716735105269694393892164746657286447207918407660422941611250730002876934825413789428258439573576652919080688677617624998628559030845877787128146852768952550106846987495576421035516207351245592729914419618803508471307355225362052520565685375615422555963729917203600563846128857537791475481503835822485451606292067663342670342956392900057875041828259302587249543991910645704374663470483428060936770548822241460629979428823614227709240785489653636746558147923219895160214618387170833310913231617433893916313536465167999267578125 ± <2^(-143)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000516752074815720871536348940574834156241920820668742242902123504118097890116611589548281196129763086367029349489463436219381233297477147967009376419623809135191906674933972322204825811093285097070699577038359701676925645443473029308471656694897889758994434517003213613861589692533016204833984375 ± <2^(-143)]; dctAccuracy = bits 142; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [0.99999999999999999999999999999999996133093783534994190196259249511734033864866578724070107857880830256372574608086291750551811095302995339825182445609908568258143828893567245895412920475564533262513577938079833984375 ± <2^(-110)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 72
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.999999999999999999999908584324856443853597380857098331535354007159763619921519961867186691859745009577820535403568009347268595151595311298809198777310702255711414945915921489673892163829034401832771243573435391858086846639807768351235435033612219675731822209785770783405492627277335762407750177975315012290665326902158935751953595845402580790042184545758040897737357448061574135201885261749242885932282803798067830452000525708312135424054533524369293922848134708754050594136205247233913028506314812421114572302485347496691026866183430555214818570927968917364401439488996725657443676027469336986541748046875 ± <2^(-72)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000205025559771909436222148335798045560807695892553503861122875388896379043055912129886836209087033755876304919198457554757796510805374402330172783802591383620755647786368653872112894728637924319385914799089042373730675697304936923625471810357762784731053539276815446716485244110463729232723940319428950450335608717682828414473584596442176763525615026940428238415525349172369400708104166615928926815233512353312488958563491098902282652583431699824964121396388591580301135397075844571529077542259287225247363400195132279102152503644750775245242154037014781063568086449066152664065064902312039470663225536533733068587470431409780502463036100380122661590576171875 ± <2^(-72)]; dctAccuracy = bits 71; getAccuracy rEd = bits 71
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 143
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [1.00000000000000000000000000000000040926011321484135917162834165566126644434193231745279454771001420143208339436265062858035628168041432992495297547154418752339721414716649862201022018808569271244559609616151108603363498057068510641952873740608211521621288015502213387689125407700864378091220742999516416685421299412111875363182909468201499132491013221792071669983589124822100119505987226828473213930006644017726495648059865917166036371363629892895636589696677151754719422070421739007102068751957198804134849137228560713459101701576898095379745427498984148571610667786827999577583130755790157691237268957966078633952807261149150932881546349761947567458264529705047607421875 ± <2^(-143)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000051675207481572087153634894057483415624192082066874224290230209589798574558258280572770390565467744730372041178027829963238555089683757581008366517303946101482459152717668701411611027068114195937556302114670502062098275700868804263050422791985147601308281384291376525652594864368438720703125 ± <2^(-143)]; dctAccuracy = bits 142; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.040000000000000000000000000001514632528342995730305211649118584292030124610162027110060734003127436153590679168701171875 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 73
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.961538461538461538461599834913246000698712362589222727560461674608985622075539529098182629859057852795074980471382210324401119232108204883792303723496804801509113427756907945400314708040058570038288022191563297647018472709466503664566219060974455668639136023408924686887770665896588370556701264661300693765340776919847527661085184735867414929089136421680450439453125 ± <2^(-73)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000010264970297014935686922578405458247462865487667268042411236308125715477975676890279429265405913831865996442316218202265742204517947145864653145821130927535087022594893903024857707070375814540429503911141938027959753995277938811553128591066112324256991880613984586591190836371496998723201215235657173261660747909186034307088759258199935977480336543297150765681079748974603563035736312497971402155547987910454045411871734788397114376360189430904083202869519890031061462165726158377547046826445240986713287788752356935886270091807240318904890074985403955246963756614495884042369293103653533405779232133180510822781467627183571433846509535214863717555999755859375 ± <2^(-73)]; dctAccuracy = bits 72; getAccuracy rEd = bits 72
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 144
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.961538461538461538461538461537065428889005550624353911384740588102017265027207513606742317686481127923465100351416862743822173149361137452576816207627241288973552272568720544507271583707267145092178677481504561627548045072263123808649156907880563470004073509832238459618756697003112221109357124192070406772616103425952041702664712912187173072573779943952253855091940847202674162180063711497659296883991131456332572473017529840933100004907174707113881595432758331298828125 ± <2^(-144)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000269830084480281650529484225771674414865605729530861242957110002934768399812109126674124002872248079868760501329727647532393993011729488397642717409271319887044980615831058198969339594928427841992644954681697829254548490069559034637284685184879324260629786247367434270927333272993564605712890625 ± <2^(-144)]; dctAccuracy = bits 143; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [1.159999999999999999999999999999747103460756183146635361380389846786638209530525232826558834631214267574250698089599609375 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 75
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.8620689655172413793103261989283028660400384066590610006025820174927891030041060151602246575017278160459354376924158522541946488287065403505971327141782738922256419921659823179242238018464277209670837153697960205333443909498036595513792696636226132122267709606201258478356884189893286773742279868122031680829381245235082472888024814061669331977100227959454059600830078125 ± <2^(-75)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000002544968523385353264313343516086283378149370107611106444820501150905385058810929706687260182235439146364186961467807881878786878091160571035928888835309159970804190069360090124734922681851395822660074643122357842914200276611672149824782431504249850819931414770616331503392239880842456836364395620332383940313742213744929169657598631784178688703511215302674399949173465825871767140776043134857748206595128727262134203893407708355148601704473348790168438801101410093198652977977257147365130174676533937718833483104549432129834739996741975051695773543840601338141016589367764083217060639140028226964365557202446428135904333243944019926630062400363385677337646484375 ± <2^(-75)]; dctAccuracy = bits 74; getAccuracy rEd = bits 74
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.86206896551724137931034482758639553706731221821141518273463795950086995991194211057802088016437751410552041091846974670500682190443302455900242410482705596587840439247257052864037813843391497565818316986003514923327429580344718868112783598055674235788041573338699673820898984018949102482242054194193624245636509747720364908280127047479938087357462658508618663816324772605062902449604373775842190015276042108728821778927704221569586727491607547335661365650594234466552734375 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000275126521586178896804744480876794184771453171018119383233413404469171233923469712979338947471693501282645650941197126799660364278345894119732380478324664969026758627960113735159648684599921445361764350336689304335991238260203730169119942987004151144746211254954459946020506322383880615234375 ± <2^(-151)]; dctAccuracy = bits 150; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [1.360000000000000000000000000004162587349608687046155353290450287461274375317463007639684491323350812308490276336669921875 ± <2^(-102)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 77
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.735294117647058823529416022115008287999086088974189470139342732256752913718525604218086094297814682881600600784111427163615229249932839912576241583824509915749886887772984055606418685766262463081644788594126856225861960027482421175228593316190119298051214878221694218888422060265826021422998171559388350550027842253893755081154835935575153627041800064034759998321533203125 ± <2^(-77)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000012468826702543305486304014779918670212555082374359100325401718555360326936319568062614510480365603580582691815196397750873580589392493029202941877336788507232400121756109937830075818569245749882625685327147755546275041659061568684582018547883228293689780038482993802458929274134488830440097778301644794206844381822907256638338224563922078136261982010897552097345788494926785178031813632579920446346985084684673984622923729974420271687306657269939754848141452038928314650953784873216219027902654475161162101778077569515540055488874954160229277469523436385488331369971458935034419403379246424264876891324024188263410348426023233070480955575476400554180145263671875 ± <2^(-76)]; dctAccuracy = bits 75; getAccuracy rEd = bits 75
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 151
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.7352941176470588235294117647036318789148463656138497576466211603243897406873190641683283755273547558813645582279442444557016046740242515273051440829347721800836889644438849269831901915096803559955321845219603786062514301226219466962767215732117429569438318614776766924809523522689006057032024627632972758579963066028079662381914575476829688100229800599040870239224771798729545103629825672298070206804148937419031177738850157947781888460002386320724099277867935597896575927734375 ± <2^(-151)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000040788500515284466382702065933285962041872341388734727853140668145598920261771403936340418083486895865977384592991379657164962635108938431768996423375791595559436453825152605870827030108564695316722658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-150)]; dctAccuracy = bits 150; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [1.639999999999999999999999999998984708684830940736316328063994062628176353688265985686367542939478880725800991058349609375 ± <2^(-102)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 80
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.609756097560975609756097157387038541024574577867040037273787238376989877286951947301693679499578836611353012048145718068217084325663817350453932103973790056969796477144330161104377793147178808641253330558603546211053609388696339285055522695793914571409619928588740103056259083324074808435443013582279355013900368269938035234944444435735422249678094885894097387790679931640625 ± <2^(-80)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000001540075471253427862996546206941563139383926052651539849338154248123307972718926057839063568543662866146961328834149691246224198896753947365556094886761947176619327537347028930170626659201406746092363893391485169634068088713975354480923293247800064708699786139912711598375918728365120662856649786349667815582989383952136829900678585066702974805808065448641522863587596572375356563788341743186035012135688402471681299296554468437679871447681841403860754535555961976731553720714002791286618244393972734690363434769293663061122977944844712303275058016014726770157032317163154298060886292747130127668853171113651568785342998112695978019104359191260300576686859130859375 ± <2^(-79)]; dctAccuracy = bits 78; getAccuracy rEd = bits 78
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 157
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.6097560975609756097560975609759885594360222658726167290603814063841801525197546071087434902405506053130273198717190739172047496813752147156933553612267197330282691633003742380702535884199962579506739090514324121039032139013919448683449861166438863598311350360895356461448104623655207459840621141621094131931466740362863283909235860364551941338842441480214518940086895888302645893459679945586925599259223063998400084052320676406413479139594080447039914361084811389446258544921875 ± <2^(-157)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000005430487835874931275117647369289098791915554728764740689081968857464665797502045448469178012777257248729338374727439865472044252907842839413918293120019023460798573542938382256891917571372460972688821669063788811422313043002664406514244990717250817675865182110328532871790230274200439453125 ± <2^(-157)]; dctAccuracy = bits 156; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [2.000000000000000000000000000006307795973744076024496872657666164264591951066937607073281668590425397269427776336669921875 ± <2^(-102)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 83
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.49999999999999999999999991422372901433986326929885323970581225743235681787254123421009329854002108976204466060234444842348368432758375789216809733977158540724698874889545315517147624617632275346758094229175148518590482640247699417253770263010086253870680247661447251642372360917877582086472111214339223544108069488493809030038085051972363004324506619013845920562744140625 ± <2^(-83)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000003587570032692041777327198840643147830713785339788417131661214577818619807562905942144490636011385001923885733606852087838574566281994766016355095894625087145797337297018013097512904619345272821184628314298401879019220525612578900277189717200546641034311786421848303631300676965814864768795998222773257056249992747044345800341045024894898170355273899551550889900668265255001802848352549071554261190557166233050018750375178477047361565035910071046846972969497383041589875017508859452390112673129174331123078009647693087900543791219483271457499380180389048258389317094204264223005785801192684439548939318084691652670022870598443009981792783946730196475982666015625 ± <2^(-81)]; dctAccuracy = bits 81; getAccuracy rEd = bits 81
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 166
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.4999999999999999999999999999984259675491076931878523219125980475113232896281215964167968782885364193277917303528292252363682480938915558496063850702176125625483402706836820432248586861516530955046856507607880572770880482664535162285516955749239775620654865599920690901140346861154016432192891302324628594495564554040696457826842310718629291923805713236713663324589134660027820227657187251877412312292937954468428984724367242150606874885182472306559275931903130185673944652080535888671875 ± <2^(-166)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000023983359251760478851205790661298600218068542159186750263484529934287738053295187393991993457086458532619441104337655888140854108161294683983488737901885091974692413238735159648684599921445361764350336689304335991238260203730169119942987004151144746211254954459946020506322383880615234375 ± <2^(-164)]; dctAccuracy = bits 164; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [2.439999999999999999999999999997714451960360617393253992532072460890597956055677285325256065107168979011476039886474609375 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 85
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.4098360655737704918032787026883626896529418317445714177776936177823529411090631287830071350773855282756533612084738631123125237412037279892784621590908454687326178041593332676843662300169526203759785183173124114564978247557462135099149933524166522871505845379578266514099511777969189549319010335447419137467653304207811481190662340561535470495613253660849295556545257568359375 ± <2^(-85)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000050549752388735158975741192166844711166489050775543441124143998704226798382615119510458668294715579532300478364884347498167732159180500213812761909427020831690815454133676048144897033480819955826671153000444332917224457783807273061451040876155852225507694796809753387358033957753632373323289071137239847849651952647271841983361078215053039233544477796524204978975065948406913275002243831605410920645675443226191544529851580785136748375970206145889676078721913702872167091089111381004764774240815527837100415439852751462011794782989428620222081699120651658363237008485552710403161539779244573953927320825880928586791335067689677484903398863025358878076076507568359375 ± <2^(-84)]; dctAccuracy = bits 84; getAccuracy rEd = bits 84
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 167
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.4098360655737704918032786885249746921064295313811589814267405695815465834175286655175181045249842010574546418430713564186088936259855656035542188788456556509077988697198611069126631803810954837779176084795314504216387487028082288660506826301261009337664265044987348989982022478117805031873397199431684140194901165874022634955533577429674561263882582710932972423743916899759026634678638550177541629174085259474395910732447681216763414611238784199666145002804995556289213709533214569091796875 ± <2^(-167)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000001159909810610493082853299954730999935211637567600571125338218067694691157719086299280599326594023769977876400640304796871528677268064408542812703525373022872580534136980870827030108564695316722658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-165)]; dctAccuracy = bits 166; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [2.960000000000000000000000000007946346355549626092503249795570339068367071339612887903580684678672696463763713836669921875 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 87
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.3378378378378378378378378414390319203902715861763067438022385206818196003246018783796375289080040567296313372821990858913055915508085633613997284944114948285300378090539419911868816085844787253192219047571834247742451285818020700197545496235406780573966274804197942535116327602606358540967762609372209911910467493275704516747017377227715267823675467095956292951086652465164661407470703125 ± <2^(-87)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000012528945503635124604435427107451460964657898564865732701005882384333040189992816353533385584905806956242056730041138264841840087691841647213804417702284469013186205499161506587842630709994436108985093236960072779052281260804746485097346669101856996045494141464361422686269295758672247471748482411015167982859126726848788944496240017657399391363876934340252140571216990515270388643814669281206907658282532586884941820895087152639405765545905878147862775499447205002193846844470434156551270763173555007263215159360640959695808338035411968495869778613156931902271792811195065239847498963448783675923414725558898185250359354607507279821820844745161593891680240631103515625 ± <2^(-86)]; dctAccuracy = bits 86; getAccuracy rEd = bits 86
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 170
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.337837837837837837837837837836930811023441054644580943970195430161881475357134899848556865640481704802416653192763724210769021111420360157757285391407649488292193905147920364776333331056932840982835336080226806238698435800048392602711670563622431356862309583835615263148376988372840816140140955339291910158438530899398931610557523091860556953280563383361503109940903074813613658471028545421305496971585351027304275344589983859427228080858024765320811474861328362051526852383176446892321109771728515625 ± <2^(-170)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000015306764018352996403249852536840740839356144595898573840941209793912799873429300449442751105750520233074651701739253636188399159207945321078855051858260437339997928316156839594928427841992644954681697829254548490069559034637284685184879324260629786247367434270927333272993564605712890625 ± <2^(-168)]; dctAccuracy = bits 169; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [3.559999999999999999999999999995953185174358601431162594591622659687940225022181016389932750598745769821107387542724609375 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.28089887640449438202247191024290617783355584575739566038120488649755735015849536371560312480253234905213421303841795348535299913893423699630703014343339714640381100429681573209719285101018054841590464375739875072464783270579113397508068634162778251745389192617078184382712069044593057593814407179558421635431024415642797242574232550166218121308336908015235167113132774829864501953125 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000007587710598810641622122261430014205562001607294234099681757301452431743366314388106147655643709404958472831884275671957743314675632943133275179776165109387504162936099079011347721819067236394479361971380234551193230733847936781079487866616536763271815089391299891208910214179315951514534075689356701855620413870072492071934029075059547153023336060604398132433747502533697729824210831638189042637658226396539862494996521087178536845779568421744953402813659364673162651999094596586513525644543044535369543640740045237650664756951273583618473688319913401894127916170760532434402874136334555544585115256635897135184007244354151719921940111301950082633993588387966156005859375 ± <2^(-90)]; dctAccuracy = bits 90; getAccuracy rEd = bits 90
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 175
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.28089887640449438202247191011267968360758971483687573046899926533279238532435796404247534533005827101040654785775361635002975470988733285161731355801242540196330682197268630548719089921863281606828862929048754296390782498469666436891150915708934413441948080178600522445377342502504926396563168668873638392569884550927992531594396997437680641141265278106247163555644746866356368125454784079712902365523703894452390137153572544538681027564869417571919245392724102938775132543014478869736194610595703125 ± <2^(-175)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000000063701854183997307525749880582503587038602142581644345797287953534250391229137837144441442712859604095672702858860094268588794595461048021465847772550794570375759292842275089568114195937556302114670502062098275700868804263050422791985147601308281384291376525652594864368438720703125 ± <2^(-173)]; dctAccuracy = bits 174; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [4.240000000000000000000000000009066201432872917026092884842021656076858873000187503954361289970620418898761272430419921875 ± <2^(-101)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 92
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.2358490566037735849056603772526158251334699298478985242024744509488935723166924232608413355865349242559501589575108773014031408897498015960157849426648000455617467440495285012429454321302785636158180348858146193310282448208292803657776632208082223328280686825660508334245763175738356384898832653417970003929939008180788453036936620674567118938029508523612776116351597011089324951171875 ± <2^(-92)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000078935000653671130845479929635420454146939348072438526131732566781203892691695278222795243061315141918436814452989264476460278296896889677934812110402871642171771111980942646908371792005369229284295045826962822127367999881422950703894508124067872167894248783346671438101072410527555337807992621904527482381107893149579878704991240696109175921722552646327560872305455421349087625069923323177528553176272431100626200895342117538236376955210457532795126706698183735962140117472058391273007565141361963213156298033561164505047855508344871142269412709949206307081628214093640717679757970310588527119129244227846153549892822392197350741920025551934259055997245013713836669921875 ± <2^(-90)]; dctAccuracy = bits 91; getAccuracy rEd = bits 91
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 179
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.23584905660377358490566037735798675419070858013627221017092167205220571837355720346063189164577916772748829687294438549622704514254816207086453408393626145668769290782835248053421444958609200938754883257651404275855216637589397522274753999676180076524898614246970009348563101660274549687152821929033112608027803313202704651269474851375648942333613007047284043931737392953823272979846091043660544608532449335181671293755708465654722796967656746140101590081888805329295155654989457616466097533702850341796875 ± <2^(-179)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000043171089739388318544261876222102380574046505924160019840550047036543196385675885604693647835279625871570090668030882512384118322898583145521280449576649599696587497751688227740927841992644954681697829254548490069559034637284685184879324260629786247367434270927333272993564605712890625 ± <2^(-177)]; dctAccuracy = bits 178; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [4.999999999999999999999999999993673223083874326334654454559720000689999175376584082675091025294022983871400356292724609375 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 94
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.199999999999999999999999999961354849529992690564391900072769528169558907958484120406579952190822760407101294677366597350591050997494410250176816902581577785007562016469692448988150180890190543544468502269651090253338480018803700723003833255111225234614655692283578614044643251706365868820829129278534805140901703961959987616948318061278638845847110960818326930166222155094146728515625 ± <2^(-94)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000039000399774149711135204095828707085302548713492769877953592997898492578234092142021602734440419992722883806894308824032243851823086287336981718399628845887413979206766601158121115379873312504356930788320189043085917245689092479105823297830396159654833056189430346558452730876687933770175205663735820476396418065027533078344251300920719503540097884331454062540492986801939154243917953396567581240992643391232336692562055354914097258179093487733747224995043606769975996022815396652546861250131409080756413816572992987778368078666250408885190146469099132172653727415580092352557593962743156213526469372824494528957530970620789934478860050415249816069263033568859100341796875 ± <2^(-91)]; dctAccuracy = bits 92; getAccuracy rEd = bits 92
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 183
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.200000000000000000000000000000253087416956898857068012544596550542917208509401691185254868816567364070182350450922150059810581995076314842630929643473581514945461560099889653307346533613608233730321814022953552036543663977059240476916868550578627678128433406686960243914132382288894933907792738020760907267317283552217335561160957705707484900434120998490697101470600998572193836572045126785267485948900958318794974627090100323335782207762079701376472321228683890793897948157109567546285688877105712890625 ± <2^(-183)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000000000026044776272866561970695720241767096244636610024805754593771199285420279940305207464069027715850538492106030371613244264460470391651858374207902981793127972835033327439888309405439695316722658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-181)]; dctAccuracy = bits 182; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [5.840000000000000000000000000009701064979740725452694257411015351518141772827505224519040183395190979354083538055419921875 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 96
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.17123287671232876712328767122350092450470454567611450161098409507824958827694731339395484048730909549019750555178803031209728211112955402477946540518398177531337364984630209930919262442171274553390104763429347724632752895730623120107146671019541379645537143228354887739121100668424258165594413257092706590272440793718066066991930091223134279376067411193584888451368897221982479095458984375 ± <2^(-96)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000098581103497469170857781592661630693708827143757215456674639800709278158719535383496568230331047879519777150539843626312937713511790615964500946944165428479414112933833147007015142639586324292808287717295929490306733201384886292273554773669651058292777524359862889484191542998253433319888972765105991636179352564870966502964036988278301967365576406941890334028157263697614728562041031429747318904695881707277452339961788400031586670886729804728208982604110059287414500214984720168106004066089613395289660953763574095581912428404677872065556032796644496396216138079254466695733024940394902892026254001627089328252677498898574298788650971392399924297933466732501983642578125 ± <2^(-93)]; dctAccuracy = bits 94; getAccuracy rEd = bits 94
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 186
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.17123287671232876712328767123259276768324794720579109389313727578251534943977175898404184610394288526248937152395525847518858237880650616538976735984433499716438448337782563818494479950548079628770738705639569176266473230616592674801064973972528387104210231123031869298337378037433531571494848325803679904842136501948079199614493316218167844206650008067653737585978969740172816954179387437500055576295670466477469693084080467569042422533467474746228676834443289605795410733557471161248031421564519405364990234375 ± <2^(-186)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000000413906068804287138982005715648230308954777502543997584583958508483006203754267118087898207833405528378775414036149088474159167243355069510728786310337083198440919082140193072959091992644954681697829254548490069559034637284685184879324260629786247367434270927333272993564605712890625 ± <2^(-183)]; dctAccuracy = bits 185; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [6.759999999999999999999999999990896232400782148507076452188218564329108360762428907297927338504450744949281215667724609375 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 99
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.14792899408284023668639053254303914322567556335797791077713708718948369369112504020668696917119635170996835542911670318802776263352681573666848812991155640993696036798614010969559989439641403127625013078949809058994383965483875159632085609410238143609167706668282037030237042052032829816935519738977300032742897683725050541745238974649734037329664435890530516104490743600763380527496337890625 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000001224121603522666093600852433748222534726484572086631271529164814059313851699065232305153922078929780033143012320822855139185064707894890199166400894444985803971689569859365332517352982818422202890151438457461539113738407575562325206862310164439116134283530381459800337925746611548519107845598776951086793410642295003541420638204014481863661500073023048379893010991298841960539323534299679838391685165862701645132527302837275021851464407106259767301834215211614498858893395391466912263113986858204580364689047633067696802845185905261575814577314082653578777605050857271510897202072832751906382677895171585779988426938305283776539945906312867318632697788416408002376556396484375 ± <2^(-96)]; dctAccuracy = bits 97; getAccuracy rEd = bits 97
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 191
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.147928994082840236686390532544578017514112170030223798191783603434026310904943316193703587477422163031705199054173559244508344198228554418673258647901095659357621550284095001353617617179312568966815265129649417561881120645603561934983071904310119012587624767216459278698124626469324200424979519235016753198148375502206156385626205139707902990786907646533860543916682116188117845181682746572461672627453392826477524355202001596003411262695976265740955375675484985271732432145219693353510592714883387088775634765625 ± <2^(-191)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.00000000000000000000000000000000000000000000000000000000159858218269057478505258593191796017348576055511041810115303217065686748261555285356029032038013820987223740163965074855928112637429771452495236314927973878663218213333677218550046879222658600287654657370677565160319728781709398886070098121103821853239423944614827632904052734375 ± <2^(-188)]; dctAccuracy = bits 190; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [7.760000000000000000000000000009826862871848210924144167778269113800734044550963357245176865717439795844256877899169921875 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.128865979381443298969072164948197432955020913093759204557602331850242039974497889923263446547240656208292542456204592564723119017855480719037643068656838341880215248548506904275824477730106915026238537503661097919893009929181810665123679403745775144087098018784550634097944809861843108281628237564454968509558496028922856318413931689930626911206069658104300668099995164084248244762420654296875 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000001398835092628743058597056798498078275329931825197628384396526570463731147036653333258753856310210454912450415991927766902222847767401692558182924645714689264665445268943312583700841362654613965483234370582850518751759722091896737245553342717335390300749152351476745689485184705283667091544493578921829892540981349508033724040989964906845141568875610126736957603275637437592880154105223298685511297197492408568487678377552078927246897781676554242576310080709378433874322575595353145543263477832128486160779659122146640955128588297610681715682109480651216848802641164898524634568394450003739977862034197928047722434919023903490163727829365125643334977212361991405487060546875 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 194
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.128865979381443298969072164948291076517206269475562829296915670839165221999190747938513450404583858247615540136837015762466131069841738136923021361648694512385535519281446723211311792354204141556636384201346377716662327048579520409959019844726300444395317981866681397136472574339056271834729955948656539831990041796460439536463229641124571027782561966471603557535433226445004351874326783180205024843643779934553737123924517835268811561837124193809192564826373805476995975933911242616858316978323273360729217529296875 ± <2^(-194)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000000002409175222431057074580683687372056089324662332847043961381473380219397755256819959745238210761547147730508695067227702509904862375213733894086506726054165097007452603772287800325342183952038359701676925645443473029308471656694897889758994434517003213613861589692533016204833984375 ± <2^(-191)]; dctAccuracy = bits 193; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [8.839999999999999999999999999987598139000777227500265387752836039013786054909112797906001190995084471069276332855224609375 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.11312217194570135746606334841652754197240753245609615717656812870507172315984732395325867311231483146823575431173822190705206465010852759090823575529744347048524322865274906008466502830505258037355892200446892112724644326386445391159333962830064261513003925048649875942447251836074331065417158450025818399581620931094484036261548837027774515208631525738092182820082598482258617877960205078125 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000001461135191722098532554552053458980929446844866896907823873111025647402274874761912912104965674989484381230975981425858957091169537051969016756076558201055551925645729756689162720685249700495388079207376981139371801817137315605900993279379442900175864313099072454727526323150677699544755810482343171476919349450419432288016819711891379099079258546457002715744468065141426983804877003860693352691707579534569127529907056079347206806289747576403096359451023037471349920331246035885500710515181522707376927541414757567574370456021260511555919159112040697411620303864636844494439465517833659454231826043593370550555121725205116370054886473957289627634281714563257992267608642578125 ± <2^(-99)]; dctAccuracy = bits 101; getAccuracy rEd = bits 101
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 196
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.11312217194570135746606334841644867703664913565152281303113065314144148812133292326343226687929136032351388369383324127292705026578471617907491979557105473329602349199710354465174170261976946908154028841836203333166328594087724259902719755415752948622525692238738581699279527185687163516278416267074355095853657510101354715353729712423315864597341108988757291129239334272350420305326571180437161461473174470848476462253108816903357018926756380902100473583145052357146350362204767492357859737239778041839599609375 ± <2^(-196)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000000000630082799689146395967861003091328202953020565134320255399303824396750061569994156936027333227109157991789863505606952039000013859960448434186192655241176474842509714529601737168164519954681697829254548490069559034637284685184879324260629786247367434270927333272993564605712890625 ± <2^(-193)]; dctAccuracy = bits 195; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [10.000000000000000000000000000009446002521625857485258935916211174083783860797622171368015386860861326567828655242919921875 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 103
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0999999999999999999999999999999617220751871125513902506714032425052674670335801039790077476637774719632572162987394160051758686187401018021884106229156467671631756044755618549366008784092777123122978943315058687754866985759712735383859573103403967225036848752777654286594489187627585506265268022083947644076571380019650157847734456328133383564884040304969470280838095277431420981884002685546875 ± <2^(-103)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000075270991824706044547501155488641883028843535161104275043803189074318376884034494169729371066191218192481083311658479233476204003068605446271252356940904235844565588543061564933217458280654064753047114108727866009862737161343020300637861334671069324247532581916319600096522477710250806175615437699531091456010896943647909762024331290643191374948916643830923366938030291052452720750981063857877065525053920383789803353211293011281309028753181318518327367792620981521303229354893150255559147910762706105129434079715742160030850955200581612015621238451642348080626330854874253758572886010256424974353498433309956539957768257597918860717089994949446918326430022716522216796875 ± <2^(-100)]; dctAccuracy = bits 102; getAccuracy rEd = bits 102
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 199
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.09999999999999999999999999999990586945174434470246844418206533021999362005354724243775966669261699578823107135840657723885472866705863594958225387001800443267674573165686541735651824822777004153400577943692474729665500286278012114741940472294213881865607545208490086030698791134502740222373844684818950295304899126860321621479831890545936815255150248251011459975774189429829644041250633279214268284640124423885061206640053227236085156875493979468512991650097682286885572856805458330509139841524302028119564056396484375 ± <2^(-199)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000000000000008938987137955941407016677284748405914950855149638203239346137657133932866793945809091712264572372814882353676676246838428259918240205660491717820702539890551186633711666615233163348824897211689304335991238260203730169119942987004151144746211254954459946020506322383880615234375 ± <2^(-196)]; dctAccuracy = bits 198; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [11.239999999999999999999999999983827091132469244210547660702137047926995710357841139204193581235813326202332973480224609375 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 104
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.088967971530249110320284697509052072208173897733863225086173412767563409877567146131774481375645166105956409674833579951895266699284603818407131980322573689242072775668591929169473091379290016087487381022962189268773605341093695216333378913979656339817581941255456499413439376984419487245482363277827543056542709952628403366370405758488114691316406504469592453343551596844918094575405120849609375 ± <2^(-104)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000003880702147349798192130452839782874215423487684205416600523611333590387995364514271534936209332335567864864128963154584662549952384254559132367537430288655538754226509006629686028813842634768514213699508607195190042990813987788757286866539439294390438963801523040861413062033525290808624730853953522530428305830557845486283941014482371207281852484746958270660597066361013638134188780144437939745262074265555458714007215329302177618137149067881651915850768418492753702141952427298019830170878757853555672370008551306416659279417599852608783726619471859393478842838452254112019254210202492109725538937906305682437608411897732505668972183385419250090109244410996325314044952392578125 ± <2^(-101)]; dctAccuracy = bits 103; getAccuracy rEd = bits 103
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 203
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.08896797153024911032028469750902491594826840899329275357174294719083696839116377159535988902800576595558488085633207265151717765779401843862512600221923352564211215354671628143354387575774458265755766837515803790600828249549867307184735477945223957302736316168406331327380425803284292167452920445318861808085424583916922181402362900160333012768780091741747106762878405215543742827948799558438395799158726428465494964143074518707134236582113440670996930394039862319785442998612188213181095619574989541433751583099365234375 ± <2^(-203)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000000000008545132852535767120042590355950053420302881614045479774550986022544079303673730205753671201874788944997297198811449644767054519743765717680395685059856981906839921657804780776376298401172692206832171334695645039966097713674860758762265137977731654927993076853454113006591796875 ± <2^(-199)]; dctAccuracy = bits 202; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [12.560000000000000000000000000008556076516643181091222241852413301208143048940421397652311696901961113326251506805419921875 ± <2^(-100)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 106
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.079617834394904458598726114649639155750427118168765719396609895080930343521828934830997589083948998403603245837232120281360100615196607091383258384796427710329173582588304315380814206211944115594748503595751057906125299672834594622514985747421854197821901733385462812799902918337174932779787555404867442700371115585321218291027533691740060527157933371249047549422783731642994098365306854248046875 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000001923402388020356798795434607058839826559412793716660606476543758313021151422090029854152299636511850349632446071850995666014012505845827610923068276197617565270771283846218977368931512227067193129298577042346603604248681237202730406854659155760331283381316686269031585641908643469495343812105803990575716871412495264736537844235645877024798600124649802308449394925351363367323986671137585427741030384207603367539479620908959739217018658918995358204244964954966047244174937781917828869094920112076576928459920327557028659401185230758015160555352356278434698340972341317514116355982552040245257761036874878645113112749302804055867178859885735509038795498781837522983551025390625 ± <2^(-102)]; dctAccuracy = bits 104; getAccuracy rEd = bits 104
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 209
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.079617834394904458598726114649627394338949481835526793209550505669952563750265280918302511480552984084507370075107910084216085631114741454072924938491231014602521015622410945245319571923606813476658800508160297071545852727986615269495573073669133157374190239334050003922993140797772697932163654093828092728534358927650722831520961256368127678807183031269111351791534055319460304076452178213756240904824319031050830225503766794276866833210322312618012213706510981502015785793286675904589788643761494313366711139678955078125 ± <2^(-209)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.000000000000000000000000000000000000000000000000000000000000012043745254518585441074145451264284588315766283633440967470855646684264661401571787835968570627756115996390074561041136882811701089701610128444200347824593296279679667698835829671643403883419257561422313043002664406514244990717250817675865182110328532871790230274200439453125 ± <2^(-205)]; dctAccuracy = bits 208; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [13.959999999999999999999999999979436236637598671904127752717999490360698796857937507842617463893475360237061977386474609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 107
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0716332378223495702005730659026892819816853782876234851138787766948624777005352384667045039241255205682811762832799056072882821048282385901806285085328335289528719055617453660673310235656267994661804464869963664962159008294245853994345380305611403446857963305671038345210919848261351983690765084771312649810919334735102614267842576482681640221640066465793629524316799006555811502039432525634765625 ± <2^(-107)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000009738713775165847096332605633986296644579504764755932001942308184765979277609847927738100934714794962589636515188798912468064587807733009603500629281174865525448232762576414350661017784732267532109852315760464233082536503672536615040995157142031222106147972037363092554570898822094421809455177919265010417092224542461930276392333830078658882283707859387095555794175970045402956107511045156304275661396099269522855250350701053457930102985169271955981897081043029980371876910645603835429979523326538222127469597689730996883226916172435831512779528115540819330866014797161083783093231536870631270095441352280948849190230594545773917563292435169153282714660235797055065631866455078125 ± <2^(-103)]; dctAccuracy = bits 105; getAccuracy rEd = bits 105
chebDivideDCT: tryWithDegree: d = 32
chebDivideDCT: tryWithDegree: d = 32; getAccuracy rCd = bits 208
chebDivideDCT: tryWithDegree: d = 32; rCMaxNorm = [0.071633237822349570200573065902684422184706567532263060017696110159601564395822241944573697363926169535201463281050713504909413323735315399803891009628409722972616949391186496538155989122505565221489098151075186819341485374714625260426927702940533509452655818215506864843785133135027628895614423611810309623876211817275296887929457163292469396173833147356153412184841410066606588195366403714507942344748365616464652132909482264092602134728445118439503120614544142046010687347744913359981477896099022473208606243133544921875 ± <2^(-208)]
chebDivideDCT: tryWithDegree: d = 32; maxDifferenceC = [0.0000000000000000000000000000000000000000000000000000000000000226104155968053283296442585061962729306374258782240942442798759997524845758148974480538983804695540307054546415170548237279678819331544785206190577497689233259795382730514916387116555874419271989425645443473029308471656694897889758994434517003213613861589692533016204833984375 ± <2^(-204)]; dctAccuracy = bits 207; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [15.440000000000000000000000000007125788495303889159421925945308490104885364827577536039893146835311199538409709930419921875 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 108
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0647668393782383419689119170984178974130545123425857484669104670064556363582519820279487744376754913885196586211464474266956341916068861227241667124899985619877067304415090740955158473972016543577614201727102555956351227734434286000342873833971107307570694993108147098796424044639917997509941550933007820623020528852589042202931392595664435582759088114865255077223782365081206080503761768341064453125 ± <2^(-108)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000046821247778881801573383830201143928542806075791053086854823428947119798941971819889198931417429534128647170144783608048242024171334162795191982197157449214689554382733197626053923625890092403091140936386844879770842348606467937864952818768872055091041840133674248622170937912137801213894674704414772483738387998627160657051007950213082997605590428999474101855561921789187799376449424895607217593420226683981830674444416156954598379553955324186917978685214781619648215180715637511071920816238255043400812868791273346430411245176245999603547264682488136640053962213236822455498376812611402194488123377749192973634875034258587856953397511052504531559037559418356977403163909912109375 ± <2^(-104)]; dctAccuracy = bits 107; getAccuracy rEd = bits 106
chebDivideDCT: acGuide = bits 107, minQ = [16.999999999999999999999999999974692798295949239555617180739957024980342476013091788933362380475955433212220668792724609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 109
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.05882352941176470588235294117655920880881005613658174056503258836157727061627473296084923281587028307277852216944141404771050838694791619978241848832434408289964453566248420576202299775494471386976703867240614997185410858312317019082996757150355992688921909845114823360591720299238549264416766707741433254014552331033831240461598860348557963499755835719742910923379941579014484887011349201202392578125 ± <2^(-109)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000242595759100997440782171515164730556267878915062597763379703751153064260453782664524635845031995073311280769155789562979389940716469857257445348887408203174661881302911302350650726760781185170476780745120100283835122787536311017655302527718829761772341240903336365024131387429351837523884466914414484472458557655448693240351549315352327523641402806396190045829165595289965824005383162726537413744608906708517584401936589776270650487731577761769441316543528322422791413135128040838058805577845114516243082863958359503399667021260502960886961509226842294822881198227374119580662069237601285384738620476880766734688370815202801677288770365657592786856611155599239282310009002685546875 ± <2^(-105)]; dctAccuracy = bits 108; getAccuracy rEd = bits 107
chebDivideDCT: acGuide = bits 107, minQ = [18.640000000000000000000000000005227360830522503034347587367743675548455987270898663588081234365745331160724163055419921875 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 111
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0536480686695278969957081545064231052491326269120739498222485528700265631752260476165445829056382456957349653304106400069902252322805330744152012638426409302579275753626845321618228072012967611379899900811656995818312735302832630355983944014160937569538109705256760153279073676029094276574027685953372993946431671359447253000039560431796468302567054963023935655087870433277430493035353720188140869140625 ± <2^(-111)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000011635565141294386564319893897220381591110536000729512202370967735080675237377455308836328696113952203804471744458300731584390104180703035333887172796416455714403345097299529916036983908478465084232489382122303729834915793051552217502910720261261812441300471046143935477918639006761858668558324755663227390254197008427278631462204694138365687237877673368046437779028259335989365641446748186335722717647427652768679459447411036968758441791048554896668757825050316106008653909704388559769032981023083267955934444883589971097969931848143751975112821396940280907268228335863370730041154606125379688737242684594438759830623443594480090507802092121558690251958978478796780109405517578125 ± <2^(-106)]; dctAccuracy = bits 109; getAccuracy rEd = bits 108
chebDivideDCT: acGuide = bits 107, minQ = [20.359999999999999999999999999969401775700651739534894027001322927894924765031422174421660287180202431045472621917724609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 112
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.04911591355599214145383104125744141395916972903401409705476946263429882721622761210603165256817725319780873262361442542918464984089954739673441406997011253523950659316980264294554334251210585271139689074805122990663054595800832077060555610796546580418310891068045549782614237928763093047774669968318583242648236132734172279377605085530065594113913355708276564886953508004552304555545561015605926513671875 ± <2^(-112)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000302422168670948230522805589995117789193688288043309017263742480382606079563211218609300704690606851338615033519652406786700607781426232149140060573620412418673153926423311863240532438477503957580919296145329962253620277432223993737635686458820496578502920563176796580285622515398617045685935341488595206610671871055215606186827129486213758867774205578565858459017917414797479937326635116705855835023354848652545504477652044778304053224672176598298948142498095478038772189841185852837968445666428647335867151442669961588060068886171784374725329859414307246610721778899826705694176239814612728671525445130637279954223837413752210705594343736861417948347252604435198009014129638671875 ± <2^(-108)]; dctAccuracy = bits 111; getAccuracy rEd = bits 109
chebDivideDCT: acGuide = bits 107, minQ = [22.160000000000000000000000000002860793522299022715999226119718857538854916270384780296875959493263508193194866180419921875 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 113
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.045126353790613718411552346570391483610943540106353741839272161610455679325846075046440324361131725302276267914543190867926109023865330071380366152827791455967508087165202252808336190754265595116653810154460635267186167042375340300719256176528621989933419990564652114319720732495265514047748671842401768819507535307908472192117947543900606878941403460203518271877561052196625723809120245277881622314453125 ± <2^(-113)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000015226239948238891331797459965622547462355933439188094998728791940356299017140479376808464914508454039551487540982681656681674853948140272985265632228892089369204800595652738460332984214565179442289228336062358183305884938745384060207831251302511853010799580064371833171145646705324501191465320782734225212838308173985230859266698121793645315194679168921080256798824677804979582015913117377375590525897816025574063035978297947796816473103866201091051117570025907216637161091861007407502429884499659923969011991501581313748523708563836203051846415239387765058593902222981360053630528352353140813606035456561615077210530020497769781385593389059530944340536962045007385313510894775390625 ± <2^(-109)]; dctAccuracy = bits 112; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [24.039999999999999999999999999963565576264136655886774611474525430263593836539988933542755233929710811935365200042724609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 115
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.04159733777038269550748752079873194724531678799302134625345466047695054539132420578657548841346110804923120982864241754558293151729685893204195314989626792842473228792522423622169627595991001417175141007729113730374371031462990469372958357568986494598743079913074480634720661539726699231872702505537316271126319504010504605098351828635696217503198420797763936395362305287193294134340249001979827880859375 ± <2^(-115)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000007336993911715148549857510957841280332833984631272984669090745095758542901803945603250383943327263582313741121174009630303916576268069495854070023341194686313578690784769686862037004870413397320162307081775780265333831073482534366967880142425439346861496436199884222453161718277017552768892289618816146745650958769473638736636232595501921357813226803054862279123984163273367407554449407447283206939305069934962939290227484423776972523950053719376251901012557242683814013894510192994514892226562829603954633928333630252671148790940299210474899960697549668661064862124666355687596914633520194032665038656174342151242655185111807686946240392706730486238608790472426335327327251434326171875 ± <2^(-110)]; dctAccuracy = bits 113; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [25.999999999999999999999999999999765709869948908232211735183293159769462606130548641691913047679918236099183559417724609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 116
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0384615384615384615384615384615388753967112465285349533782647173606455537750540431055023981582447322641388300308273525267865882000602715682656663339350497252287551278131454124863278628599590844204710159433607464755622306201402437476360631829025216595321631650130304765253877960654635500729532506866492541030632759984521542162865041423355378062448451287762744447428788462095550215735784149728715419769287109375 ± <2^(-116)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000018971939155935288746488174318404460361370171750713679721219889195612441822068433897319601575158501515844981884182113597717687721827373079121118583117409074076729248430116799558404433195855438344678326731244561317361910227792557039468589538109510380860240885729281039177984854086363465945843480430100962787003151403880941726764506394781095827284934873427085640382929655252104235586816840968580792179785929023991609865491657314464532486236889014479393172482696624575786943145188394207955356855762482134773853650767300724188958855337762476024207875792147746933852320410365158239869614271996636128569916552683173437424065890833816699177354501014056663288354087626430555246770381927490234375 ± <2^(-112)]; dctAccuracy = bits 115; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [28.0400000000000000000000000000393758842320299185819186602013200634288859661592059535975146431191863332603139532672599358263119033826167211456392876001142343777260135251339079331955872476100921630859375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 118
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.035663338088445078459343794579122531881350960937895950404552168126832491353594194747770482179328038289303473133825831991705908173751899863374032329224348899475795823680363349327894254036029724287341582174351498436014705009883301750828773899499920033264256164835249616314281506090262287714100355283951760532827626994272148909210902313336225352517228225323429404926417350941888042444980209287125433423778926160170439065876280251830378458791865792841333262410265063369063653908597189001739025115966796875 ± <2^(-118)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000009366003435806280698500935494692086600828933107212054372850294596290722934625471589520679079320532652236104187497029816111578277450010993807164573154244491011899736558815585613202887114235755721260822231171087894314546389695394775060381938590891139631732176257262026094393346693992630419713130435694036977633983913928556112028697171766640099524960193343491789643338322248263702587485529292600779812344675649690812983620040498022997628579694628112725153968216961747419424649442322735289831933721978427492048136169974664212179313201281649265185853766428096960868667127858117747442177123688797908470961135160153464893346593887267386707209753508125338704401088286238659247300204327751023435889978228143197342301902819373395105503000893244988653932656978090643070271136751720085012698582476955716724849923660609958261687291605846467762962193059905757763772271573543548583984375 ± <2^(-113)]; dctAccuracy = bits 116; getAccuracy rEd = bits 114
chebDivideDCT: acGuide = bits 107, minQ = [30.159999999999999999999999999996385826077065750093193089476644937760776624176436121194111450449781841598451137542724609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 120
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.033156498673740053050397877984088940408399984504269611482484789587685350064457870577094570631143175311873548094481207709906407205896647047845434450736976592720787186393761879121953677452114970905800390581163679150115131342546842813544409565261075560628125875079495305062407210018359362975016636032972099142025912686470540264922922830007092927307073706434689346661168728169766239943783148191869258880615234375 ± <2^(-120)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000236404466519390105385171943706123201414686645133797389851610820002079347420480279604491502769279560307865926666596925445082633594337265408977191766213280411542125818762438473441948170093969281007719562739939147481528753942774569672584372292317824848862551416296835343775813598448419682945819698675549782236391814559927094074993117189619376875085613807570050158721091118692486558974959477230756517382025307959599839703019680975767968519488321077456006050252856122768398797936631464378849242891174558098973554376784548832432812412515996096366806124891255559472539150412237414631614070720240869331415302906831325856005450305760099812941556122637275401399126195656208437867462635040283203125 ± <2^(-115)]; dctAccuracy = bits 118; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [32.3600000000000000000000000000388710132526884710264551539195367901722728611405879498588898735178407960475158638777549546153976607734457961245329319084193241151149733614289516481221653521060943603515625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.030902348578491965389369592088961643976454728854033650100793663958624518446986273466751949097201142152590763584473901012854704711028406536576614050582670478670712557677096288144124507656230134833568846936199657710649820048320738141682608325162205088083823178288320597098271517941880543754430845578390205503939168668590990434417965257039727401758252539262809764656276900681739871199467423839067235501528994537972288321390719558303541079500122015118621804859763528561256151760971988551318645477294921875 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000002863933187505403987892450167001503787524593791037921638027146452292790172095642652722051251984990374840323853700292669519490480512729636598211896945779328687199089613627848884566948842408965077135027853834373081392585739139026182070540580952737230650623056503386631041262014306089878003950699936849285677640839595604969184999389234398223646693511136885494597135044218739964925562126053692634199969569071898715626664688764147519488296011427611375888861991640146344416962432910121343945913877554428905193176529551535805591017730635275719744872352244429333024530083492550756831380819367679468846753835366811045441258039386271678562711977055834311388749228511742554189430057249331988364813554393358432523905880227996738510188720335054154236872166969683670748406798320529823667782209097449893682840830543487829475172270787810804651632857857623815078795814770273864269256591796875 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [34.639999999999999999999999999992537802640740497760900421099536712298918948778488589856916490816729492507874965667724609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02886836027713625866050808314088389774162298745005877580778672981792988880245655932014453319124900747606069083397849640251538000273896573756515169720557253257862743049677173208149937314221122841016715273118011643109999111620144727185462816573212638912074762996641877196414506489589272496954198191993511702647595135653955140457535053663544669618344663860609137500472221558867058632813495933078229427337646484375 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000119884692954402904861903080569428965244724043415807920902977569356847935265282020068150738554817770004687964859475401248601059535892285238690155738098942106729716083500452030848170723420849014368945590116563384046930161540036446017121015346890904003517645151386457914507336705171306923169626292350035499729416730501685484397266505328197489528489958248731881758752181862046361203727181126794620563758620296378923841099735989996978777535198848032818907371096455875245120032463654069274383668890339033651467336514741383945411510678362249867749880680526479322139861113986965869615047748366281772951052729509577216601604617108821322391061151134001360536902869302622320901718921959400177001953125 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 110
chebDivideDCT: acGuide = bits 107, minQ = [37.0000000000000000000000000000378612712940055759155281413559727328651577955600348000072618463648459577227871735655982326402150914346375602356966941029587538753396758206548611269681714475154876708984375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 121
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0270270270270270270270270270269993708269887687378801446028656581320210572794784892861853519575386222412100874062060293600342048597570345945375952825067706709313787970295370912325489877178272212057788132928743789461050200100212757032449850420148004658231061312351248098523278931159737018232968675252032986850612706099006101709284337584060531134967107722502122117427714716372676059221360157581728547909479807805125156475183036905306253741893928626520446917703803524357653031984227709472179412841796875 ± <2^(-121)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000011496469847116874397584940297429920767760063517012328102612355280788405329292179185955444225632495460678616176441964623970993544225181110974914142143848928123449059930219632352240192242681482549911756165297513036101240986274728561777853901941275657797558472863708707015794076181632126250212664508106798698826159965324697084088314939196202744242591225314079403418389940523003966675841215659203483736592886771694378805539677900886477445116580369069766849868309964869944517527048846828764649851947817211170282744024914349103771288141753171987677390651301940177445360944639038725831304601949365083572890684382636543828630722363372446137062772738399339971987377710640213506552295711970860483437482980931600019941185339287391609828826095943719562237486192771073944086417610575061313851810998228272015711438699833063455765625711233051688651973787358429035521112382411956787109375 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 115
chebDivideDCT: acGuide = bits 107, minQ = [39.439999999999999999999999999988072379990283140456721891761418151516702877058969355095197073524104780517518520355224609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.025354969574036511156186612576072666064617421931913605093710224780656618953711219395242040772091781291185081158958545494666555779646104307483078099157808374593168803399994258403786227045107946187475824694984188096321381970194947059312946120850200461823732201870184025374819448843150387076161533865590262809737913178344145289408840495185286881406356241170418874456734246482236816433442072593607008457183837890625 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000011706324843870647231296665761884240060187360049276949026782025145621926904350203016074322314192436937332802589860306966677890383417028613742138418196961881611719767369281785493834091649427343844490453778385160280518602628016555920547764956437126780106130378616457048760445908779044246136443989799821149360041710437286483877658440948974535458783097231750458193420448028055424865474611182554691736258581338570147121270257498174324219768096478026274448994574785644826460754300773940269105384547730755333323657924944159975653601045900814013952154203082290955442285404546821043419493713071951241526564250926124855372909991814472007270110030254779175172379079850060179524007253348827362060546875 ± <2^(-116)]; dctAccuracy = bits 120; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [41.9600000000000000000000000000363466583559812332491376225106278915075407694175465040426305616602018182861278823307897699007641953661920134791305741837325236584001209028116363697336055338382720947265625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 122
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02383222116301239275500476644421195849202967074093548602031097657868472619575648876169366837891429737901797333866696119516279313779940390230659014560595404163279057606698633447250885153829605800051446785298203648339627405423823667537718553819103461634906814045846568786341148428385240777359582686691001779066204599100234404038129750960980744410641249060226074808289167651246474021450529885900211112635249524025167059552476744328491900214360540193856230410014989014311215242969410610385239124298095703125 ± <2^(-122)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000596729729579647866933466539713394486607872065180878454750995934571221496901335186877751125881601051869006800642765064780482491790143418747604752077718636213808453591414765263082386511665971329622724147117405040065946008854812136241045424243011561312735590644445637281677687609129421023106329934489603400136858107806208686249673485325220412051281745917326450938356858156899044683595437266623076451196841550786068477190244495457081952490150701364587223217157216542333901569168815155589382028975409657635326018689290894989787484828892911666308412649548085444124170108438993961240447457211256499771225177574828955546895186347622572457334074535925197570938506154725317298743916923403867311437631287864990043662865606340312149204155228141276311639567538436907603395820574182383970898976977380138628754337432387515525108261414538328147615965646455293835970223881304264068603515625 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [44.559999999999999999999999999983129188046661752780004059863126662644722421387374032553108094134586281143128871917724609375 ± <2^(-99)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0224416517055655296229802513465076822925643912814238897811009049363506424823537725913131576941785139055461175296039100355462407233181975760632234432286186611028335445340894607845651918440361827381653813253027352264343275310422017288901532578441922168841815080652009645020256522622544191549653102744622415078519720639722672314961659924292314188918546685354533265060791706081710916720339810126461088657379150390625 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000059882546458014019514065215772111739263606304309003552315548005529748433246139038589852488238997717335640987649653137958598373808370781207202990287510376926430853519802453988306852638592602995006697562573953383605924085768311367644079018157894947469046640849603235303950707880326350075881541557291985878608953780961829579626260890053868498882315051472317989527952577245026169137669771109027738254590258363390237664887116561843188507501692218471519045334096723081533280447075012881500686366724174076613050905408561330173761246844990174649528582374887549030635797717511623627702650824651448962321296913934073422625969341452277230644731444552279761637907096183397470667841844260692596435546875 ± <2^(-117)]; dctAccuracy = bits 121; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [47.2400000000000000000000000000343271744386154430272835973835022660994217827131230619649960194039083777375379901733295663970449725681091558548345721507406334642963086078992773764184676110744476318359375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 123
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0211685012701100762066045723962589616159272456183475163286583934986961514011426185555839191998723044939282767200692654003554725976055971168102516985863758882220623392329360418902926757251907059737804229061762925794155735857998071927920215286318398285773080982298452014758138122446532748621321313499981464751010607136087440066762109814600763394038232966339244919984191873165920422964207021772858103478790072374926320704327999840475696846757509266966662248522218080400147943720412513357587158679962158203125 ± <2^(-123)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000029111509975861546583983612210965839739632463641433690650603661307839298982925187884482916296765787988844956943135538014114935213336206816269918659318162589729416394879334167164061225917909529094896250921574366642695333543967958885197111273845385352182633407425059732221328069383638746971121540126697580422169187351590548988196839957171766466506726971941098271646847134860316406067849316968149936143776531073449405035279932910512398875512313024435548521315870969803200960596362346420582435991495784908605771899785884243554023925424300188818509943107857005065280571154293872440914570639743103485847316417238814478545423808450313675483920960119813405328733503431368634136796453207652383942117842371900664464033787840225833331606502276093238255717190448803758261290812546157751977288695105362885859834302442066086459588388164453739680452744320593438942523789592087268829345703125 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 116
chebDivideDCT: acGuide = bits 107, minQ = [49.999999999999999999999999999977727486109320207089277485184088094956162962780184776112601952036129659973084926605224609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.02000000000000000000000000000000897731117436793259588262872212584257500302593962153624162825625072638166842449216939757700817442028601346814249614122565683864415684103232545782850830968032436650625009498102176803032314667419421200612305640156464577847730116901534627692604386389182780864806892720172686580318319737383074934047168370070798883501626487169593746743187400913797924228987312744720838963985443115234375 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000028589830764357852939453675697711199329410361687954692731533610665161777444063368400215612714014874233412736052641144729798905803621155088989942943652606810225927599544110947331612495367791117463780532949248888778087083695598264471519575430363106868361258077907136081158075025082543419840459335701069020210598572068036386408312312195164726461967425869694635212250434806156548616159500135703986117965478283637435215198195242656475491419818515744101374454044587606148272204638092729664674494349768984558097224538854247735224088110579390486940352966601980749814883662592345652075020691528342706737566169190977993767805104386126746389316798446546613533987557520532618582365103065967559814453125 ± <2^(-118)]; dctAccuracy = bits 122; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [52.8400000000000000000000000000318028195419082052499660659745958566408008354467644737743582195959656360770174970932176221290574230403889873628086880039830832930282389359177841470227576792240142822265625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 124
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.018925056775170325510976532929587398414407915848500541958075143365647798090857798791897031888490170771969516092226014671767698186521782697849076349671808505763378059203802101825916597086221271632800136685552310899421370558485369010366458936062631103596910881270569797734418531415860822288932196873856638743562795658613245370941913268105124611029144291195067961292415627550436592756498080342103162082777387582357858808283116403816569484340094072953513678480661082924318971976163084036670625209808349609375 ± <2^(-124)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000146106162911909009646810584865451357060264128330145412433243013297586307130448012802951456648573149707249530778486020765427430632357815437282767168118004275438937289010088573299050366290558906733358575260731764623453721889279807446037903738729932817819988330658485574626628225733302586172180720086001560592167089213100712359741020050083720521960047312967738714691872788899455231107110538908145766050424083804672317541231593775986928452102071314409768549607436844264189169489031691850268291320482918790217641228994621026042912465262035828534352118287461941099222541761109066643539842880455135695625850954083338283842251474343497838252799016069527928720091178960715720373214972908336189537264172456320747562733095729048830279921533761366098623136441869809658305174710007552178054669603572293273068614150500916791783752405058930134656536119208691815174461225979030132293701171875 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [55.759999999999999999999999999971848014878814631026011607944876599177839120220919431891726247840779251419007778167724609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 125
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01793400286944045911047345767576233412856899679888670639723077499920317312970455951456867591166968018066776793864186250838105976197369738938953418471180655735017175974379384282421297370764368665481072975751395375859402313080359060749689986506598170286913137825916640259806321820536648810718121476177900492144050786674166612725742570042776236349811113780709789440255235294478797225536936821299605071544647216796875 ± <2^(-125)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000140512530479557716518254724864988869457197603244652233729925009693025031525723069045749802555060388229193153552856659268397418662366746556675461916572292667287443196310681206257484458573511174886476823967640282793731290101833663390707914283611538769789039687482157595102544735954898120036811244354675381781572245127817956178992603084738131622739794781866433790382128650190732274940267104929687620334362236059619540523185990557723270305464680312761263058026272386413041915878548453712428810496982337446262065093139429450075134673790087563980761011093494468676207840057043274118823348956154393224090998317107702972065467582458731796620524614045995141255185334472344038658775389194488525390625 ± <2^(-119)]; dctAccuracy = bits 123; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [58.7600000000000000000000000000287735936658595199171850282839086631316779276184707394707171622363735933045664030904539370968015467830315080030529217434598731445959118868671566815464757382869720458984375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.017018379850238257317903335602442313184241130267377840715304306828256006196456613422908330068382739508240320159796263855125575347414797234595715589224337599695870953077138368823752373724314646268039070681507249400180398450200374906398646976537466270203663935956987235849978991030208957728679241496332085255412759108946927482393697540819875378701745271459420829977175436867908136548776224053390513127340674888661829305999665303860897910007329289526620592702314157238820124806721878485404886305332183837890625 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000007216227311321214883293222651377523327021133696719023530713721949272954295339937437353676711603025347524397981533472034020636595023397466095649247023674816461728831557158008326417258878571255040531303066322106781724345140257898270022349426466846317288693782680229120538902101266202864836760334182901665886664302550148534416827817923483601526360988739845403530958216773414762938872209976337529747363824757698100035618898705202402616272978845480243142025567215903122904573646983913944764647506934274621998466325404318039051993756956794173473988959480511699633534682973184527779004864680711793254379035152569880413863324759846715694552253395349061884982956644347901686207900777196882957323878856435447885376894446626592852140745098072507134484730142887680257553888427136360431036730063812690571869393049387759169119855490180813727875571393644005269152330583892762660980224609375 ± <2^(-120)]; dctAccuracy = bits 124; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [61.839999999999999999999999999965360774083898886170125149634367692715749571848323461187302285679834312759339809417724609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 126
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.016170763260025873221216041397163048120428792122109402642702658152667109836570524564436069659588138174290653184785409826398441379358405637104910088376731307955501608710608714222542962105227009933951383332214336495538609992828312635347553729472808264167670331596939047568174112837951338578819014242675219925419093317583692555747633339377649019730082090162640299945676333249512668377434465583064593374729156494140625 ± <2^(-126)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000006938633884738631012004656810852947608250400328631656118425831729656705936181266508458237343446330255808770212717159538667376132226201534557457794746483084878648670789378475659626159415471500335909817341171493007388545161549735656215649702667870782588916963312812169551807836702596038292802371959831351481286202890655026376952990355907786110304635531006314687260649693231639352965450375700263866165052734948459710015662227183834560170103153329617524946425574776794178914897895585059386781826948797948661942157533018358992940126501961228320039630935072175884771851490603620717745197960359537088793952477094183835406038301117438004967713241204734840139427276550776468866388313472270965576171875 ± <2^(-120)]; dctAccuracy = bits 125; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [65.0000000000000000000000000000252394968104693870289404843114406855720530592282418590540728473251322494201847081650385113002773437960367177755672733691710030189993274607473949799896217882633209228515625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0153846153846153846153846153846094108108004400412776452556149588046341340035246358269653582799096469152799345593512302319497576069644782052022493464562152064032707732083817628181748543331808822924426216624408761956115559045490930619368216473792295068002926514298862134822844742845108897652069680044686640282787030322238487254229304000070864850464597506247648648923596828929610361061682365708382226126847443942551731519850726993819313187267263690929227801587989924174577904825156338119995780289173126220703125 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000357161984840230670789871050705567790077104328454870881869317724083500011566016232901246526999538681698690543870949618065574026538254902403661065920862428322223566264764953232536236484249286256962174093249130540575667763273901565094880500758580630798686395098152125241976297585336266021641112986295123890616879599711432147746978881065911514134428459628571999375341572567489053102426168209343987357329028380006209397321837136082221137641550271497775080980703792394742190090029037490447268003912606609469112645742517113365782556589523135960617314727568010432594029189669300942075774060220779911805978974510649724290348780790684435222520794284221017119784212764280655266674707698513834781779309608593254064883508286494358963347726724242953336190382048110028225189829099201517985128567536669773328720530781642760497661398192443756435395202201987796541970965336076915264129638671875 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [68.239999999999999999999999999958251319249990068252720190417991988615005281900035248587865766012328094802796840667724609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 127
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01465416178194607268464243845252948278042291470370428558759764645176710056759864316557351642833849399776724521834888541193570235452170403163147998802126786587617388284372233807956283932714407010463809500976000328605917295205268065089504719561761809338782167577723152716798007829172279427202148481799477831587321064594459231787701865493715131969117325261920980059532319483514041513760872703642235137522220611572265625 ± <2^(-127)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000003572210487509152277219762976872471107294249974802437164787478941706140565396070999973226791534199017044818142600686026349713878782747042297551606203841944376495272364806877934817155331234860189313257980025571930088359948124063259778267611966474880349740631540336727035031800869919087636363969918297624765371462507057722827736552879435569603568239129715021613478324793466847367251330519082367360897272452576858667511259585197902452563136453368062455572526850867363677521834031875222468891189479192919335134122028018218866770544030664213057894932638731115748038614910919418629052179781273205859323566713080734081368219863339999834392007050362712281010336978770425275797606445848941802978515625 ± <2^(-121)]; dctAccuracy = bits 126; getAccuracy rEd = bits 111
chebDivideDCT: acGuide = bits 107, minQ = [71.5600000000000000000000000000212005289757378065852324340571919239619262302760778325244252748622416044238724123169713447394848140794046166803517428811164729162384856575584990423521958291530609130859375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0139742873113471212968138624930087163255008841107140516233233338645541966388749954051381548416434924060139993783706014505870225905834339293008040413748559287527153508814958185236525619104262247049736938685516423656583201207603973460301454873935147757536333177116135209889633478507824571279663629836636652445773310184437744818836484096705637527227713404870279147815245246167999760485501500810481642804926662706284825283782026000665925016064307617451203690488663634330056273480380468754447065293788909912109375 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000017926775010238474672113428968032825841176287925479082309848056797289820193348362548086624155077972101400757727412829922423387707989529650312770999125914365030842488037259995459322894523224227632234383351974526086536579278088853612415173338480885562304714299209134028563856055769538643878259676423499732855409899318886496569241432205058532057279337045138027739965346101526330702374413095192561711762359666919966546415309659181646605380567601924071517437829933826196466882390123052172194693383389842645866058146405279285482894149387276971310065148314199446317019880908062396916246914724297006823370071365343654934749820529160491984772244395837886618021222578333160396903421056950417228263179894510605225567038094600253787754710043418671745395415987381546107022094959180644083004232156110600567787711860118248435185574255589816095743057634825934343325570807792246341705322265625 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 117
chebDivideDCT: acGuide = bits 107, minQ = [74.959999999999999999999999999950808539868746262651755126987137225973386965623287102322702679657595581375062465667724609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 128
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.013340448239060832443970117395953290852183940982204291731054029658969804529536057952485566976950559424228440624029743576865961879918100931432382935130103915450767176115656295709898914316992375823827924893845336369471094354808615443508862635168473143943144272070294803749241264591894395590758087235133415392576872398615626190794335882441936878266974158809403004275296286378483905099567863317133742384612560272216796875 ± <2^(-128)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000180125879144324032813257933168654236842340045845267081140023720387847603944827192259591342391722420519488178964894301675141162516207583349739225772348264056050827615378610240837334547060859128739072275019220389811951239504079117552055404962230709369439444296072592338748672189587690578930763209244533318736742720098421119006357878479802934155657473189516979718386526511345009903783637438976923771788345052280899471552526890900920986308563115724888288153338104863181784009319540011667417617563800974434569112825057521521672230796126679552593922249687781850538300233414488630130797805303170757915628808587437574710519235397504050707057034552588704675473753324954628851628513075411319732666015625 ± <2^(-122)]; dctAccuracy = bits 127; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [78.4400000000000000000000000000166566901616647785860608775211623783012974407619786598817744448477016583156295155462524374144239576331352047174063302792962828363133864773004688686341978609561920166015625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 129
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.012748597654258031616522182559915701847718398641568042739288388676348842897937947977025075684855110325486116999243073380027763483357772067602290035724730133725445551553430929599582186478581299290657609349930336632978877461197833048377102464460400504989354471929284791003348412066418641518545627553644287563825122566603638739188496393680099499444646880226073204518831858141088344088273507176056034386174097573175806523306408243724286025811679311883610820558130082813769017036076292015422950498759746551513671875 ± <2^(-129)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000091100079232375139210386170903945872293728339928204315308839152653406709445922610144128450499893265806389306479855013077500651901155664594907562440259986124472189641634953803256943537398536849095823040467305200786542028425007114502137566219428905866831164974168721741194628942893120738349934928595792347801540397560701646366497840847935633172783293397292008274595421584527495825271751047918525922678162483840921910990202728703864814570821419369656737579956611065544559681687979156202037736536712089155587929554620402837244049671639977447927648615029436753204965126813763987838036008040474782046093839688525421377932927348470686747963250746774799862050424056821766420360638502717134322602770888286207543787044933393394698906801833626746114164014604655494819807348666481892526620375647810366429836287280941207612181211585505157747104130008287958819579444025293923914432525634765625 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [81.999999999999999999999999999943070954539055214084291078900655103337265385051043330155717825391548103652894496917724609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0121951219512195121951219512195207050914786574076683737380579101121469637680624652672550011084123761426425015789522976097239415526481930767221959635964872898714788322963130847119274288465244616330290048242584237210517950767649018445768492087461268704446725505815988392981599885653331229646703444338122882043531385331955212862120637821346501992003702675055179536771923188309706999332693300175378681160509586334228515625 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.0000000000000000000000000000000000000923461094441034900906008175569231308703808073656712606286634850416019038780366025702720163036459831999090450247488275327944293601011565697641693366600332528430911449111774031792643519505836015464991639124046472125377193690007774712484531923545697426182728663763853599223479935470781236549609630017402721620742594259730073401416720186529454148111317097417599071588435734907589239977355921065655406374788298250546106991725036307503416875130223595240034385484464740285406466117535017828901822623468822344969509604680970060821653204927564011424414597873332735162140732075244328353296291301508661481809978723816067029186073054153258559781353794465883088227360631083939779273350723087787628173828125 ± <2^(-123)]; dctAccuracy = bits 128; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [85.6400000000000000000000000000116079803682503030314258147033520485901666906859443411261203572815124110954560178528817893250947744572284818867310355637104327792240299199733044588356278836727142333984375 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 130
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.0116767865483418963101354507239591833056849625724110411577544332304595871439018602764808530195066804748963978836532808224749438496100446133355023188100375833478086822826299117886622496754536276508045130074607499430719227010529832369626689111662552496304992267170449695283844641345322015109503170956156599052997443971318960697476856057660789682764496986754287680040045808094156110709005192684877191322484505507211817661232159495203258380618276562628005063987220466802953965090861032649627304635941982269287109375 ± <2^(-130)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000044849586372769877292677956383037775161321835896885024008812732158353984048945274658822834574559718071233280501022646930715654376554031307653950753950425448006801724848364882745693641027643146201582960157974855503577658106249231828960272926901185898538759191371471509817498819632410720610679546745318782248764109524213887587457453991437785899129313029996937928787171782565792601341016577909783713987421213756127850250929899454004153415038257060574000918585253576979258529983523075755892118837834292550465527456477869542251801469112177129918513590538272493826457570480143035017365188017878297723359737998249947191182878491523838371751511097691236119462228454787499539746946185220916002186499793573897791808722424938465224870126740890329162866062913636591507730296542277131079465585887095915327640124021164881649476826570193112146048066975027868164005440121400170028209686279296875 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [89.359999999999999999999999999934383747079825262360289013658066745418337585622910700100529624023693031631410121917724609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01119068934646374216651745747538871600348879932888379362392327371985375360356439849836341875692077830033650149728519472875628321810290944788467392147731605970006791683152652597829342742251801765606287933508574525981034878808655470251261505428143850227919620704155689895394181798093073089596852156182964444095030193972755290825274683449338049236701890529810876236357993207729921540660722456550502101890742778778076171875 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000004411604710994166883727512182090714984570743212200252972361711487071560475880455440942649096831601331618172366840221075589367577254750709014004711724158447324315210264952596790030104113942053006448464216335973823838320035022198265882052192067052271995490072747509312290490443123976359949856914268013199140028921950938129855971900896436132946574557126842057596939680446496475879556701278761561881202558316317737173550633810686780342224448744936321685126991664572214941091947322230750014957482248302352742355420436676155175837612006451724652153767298540825590230752127793307123422913391901028691156269597482908272450131702484449420739671299924763047645257137141516778910954599268734455108642578125 ± <2^(-124)]; dctAccuracy = bits 129; getAccuracy rEd = bits 112
chebDivideDCT: acGuide = bits 107, minQ = [93.1600000000000000000000000000060543995954943799213272456037609348285339800479748762574630121636738627633519192368594004714972645516844481883258587343589227449704159855770058129564858973026275634765625 ± <2^(-106)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 131
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.01073422069557750107342206955774940975509101496328820952096108001673040605053512964466319881712917299245463114147924771333670409377742984844402520813491955840095436698232404313580568780089117925382517941785573419673503371709659560863245229109127231576887092971412540723580554663017961416548154329788613624145981928402403455002960605306867146759952456183767628264027993564239998146085898151261698322464725740759572975845486260412449847432271762526487923827680803368558458583958969967397933942265808582305908203125 ± <2^(-131)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.000000000000000000000000000000000000022408997000203508044492032384849783863419098340629527075578771139669954435651341122919487541869455310281109599921793038422741914915107197339603530755330784781487718901457874216116775264460340060435740314966691191938802524178544405226803936019488522164246421907456306985398032726474941171639539201450161300631750774530089043157232708836090750992298126220703125 ± <2^(-125)]; dctAccuracy = bits 130; getAccuracy rEd = bits 118
chebDivideDCT: acGuide = bits 107, minQ = [97.039999999999999999999999999925401733672148067669787963759851027504906521899282444143519654744522995315492153167724609375 ± <2^(-98)]
chebDivideDCT: tryWithDegree: d = 16
chebDivideDCT: tryWithDegree: d = 16; getAccuracy rCd = bits 132
chebDivideDCT: tryWithDegree: d = 16; rCMaxNorm = [0.010305028854080791426215993404789485028856993022243117961426190583478831556156800673723782517904252700568909268957589814826190567369829548526107980960822448221191321925870805190312734858987198971598995455189653503022285379711415849057847870148874326977707257598258204684759932571917760423480451381214472006845620231362782798380048628023669429330317493271270570790631881620945538811928710032361777848564088344573974609375 ± <2^(-132)]
chebDivideDCT: tryWithDegree: d = 16; maxDifferenceC = [0.00000000000000000000000000000000000001637466002404642321228052600108687932424667149387921139829570743361885663804090025288263615895628933819389280881171475075765512980776186269086476378328585952818527255140832389014720223334971228400832207874561867120050034080775379352612475258865742944180965423583984375 ± <2^(-125)]; dctAccuracy = bits 131; getAccuracy rEd = bits 112
computing integrate  (sin(10x)+cos(7pi*x))/(100x^2+1) over [-1,1]
result = [0.034919898089416934895945612915330269450662246631821345678911079332546648054798075728199842644970488747785723911505065774025089515728996629400202070693402185081226475442452442439315600465652080302071819531194728609316653907120600502693114210592090906584350949834078604666741583236509681561189352887294896907677549929258957838289029751785649771276738867952309157662710199090034911600731280193848967742806146026650068405071277742762007757553968934380408609194352616105989628698372716439172569700462037667571658582214989414492733533805051525882916276804426120799296060838202526888614297445531947090977529174444670707019077921587271262139572394669575545688920378685968916999890813059053519228412943108153091426856578165334806576530402229158976397886267906156033957731921191225410439074039459228515625 ± <2^(-106)]
accuracy: bits 106
precision = Precision 792
	Command being timed: "aern2-fnreps-ops integrate rungeSC lpoly 100"
	User time (seconds): 504.45
	System time (seconds): 0.87
	Percent of CPU this job got: 99%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 8:25.35
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 16748
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2122
	Voluntary context switches: 1
	Involuntary context switches: 957
	Swaps: 0
	File system inputs: 0
	File system outputs: 568
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
